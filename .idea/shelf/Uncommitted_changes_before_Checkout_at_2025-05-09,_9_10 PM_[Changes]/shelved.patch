Index: src/main/webapp/css/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');\n\n:root {\n   /* --green: #27ae60; */\n    --green: green;\n    --red: #e74c3c;\n    --black: #130f40;\n    --light-color: #666;\n    --box-shadow: 0 .1rem 1.5rem rgba(0,0,0,0.1);\n    --border: .2rem solid rgba(0,0,0,0.1);\n    --outline: .1rem solid rgba(0,0,0,0.1);\n}\n\n* {\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n    border: none;\n    text-decoration: none;\n    text-transform: capitalize;\n    transition: all .2s linear;\n}\n\nhtml {\n    font-size: 62.5%;\n    overflow-x: hidden;\n    scroll-behavior: smooth;\n    scroll-padding-top: 8rem;\n}\n\nbody {\n    background: #eee;\n}\n\n.btn {\n    border: 2px solid var(--black);\n    margin-top: 1rem;\n    display: inline-block;\n    padding: .8rem 3rem;\n    font-size: 1.7rem;\n    border-radius: .5rem;\n    color: var(--black);\n    cursor: pointer;\n    background: none;\n}\n\n.btn:hover {\n    background: var(--green);\n    color: white;\n}\n\n.Header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 2rem 9%;\n    background: #fff;\n    box-shadow: var(--box-shadow);\n    z-index: 1000;\n}\n\n.Header .logo {\n    font-size: 2.5rem;\n    font-weight: bolder;\n    color: var(--black);\n}\n\n.Header .logo i {\n    color: var(--green);\n    padding-right: 0.5rem;\n}\n\n.Header .navbar {\n    display: flex;\n    align-items: center;\n}\n\n.Header .navbar a {\n    font-size: 1.7rem;\n    font-weight: 500;\n    margin: 0 1rem;\n    color: var(--black);\n}\n\n.Header .navbar a:hover {\n    color:  #27ae60;\n}\n\n.Header .icons {\n    display: flex; /* Changed to flex */\n    flex-direction: row; /* Ensures horizontal layout */\n    gap: 0.5rem; /* Adds spacing between icons */\n    align-items: center; /* Vertically centers the icons */\n}\n\n.Header .icons div, .Header .icons a {\n    height: 4.5rem;\n    width: 4.5rem;\n    line-height: 4.5rem;\n    border-radius: 50%; /* Changed to 50% for circular shape */\n    background: none;\n    color: var(--black);\n    font-size: 2rem;\n    margin-left: 0.3rem;\n    text-align: center;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.Header .icons div:hover, .Header .icons a:hover {\n    color: var(--green);\n}\n\n/* Icon Link Styling */\n.icons .icon-link {\n    display: inline-block;\n    margin-left: 10px;\n    text-decoration: none;\n    height: 4.5rem;\n    width: 4.5rem;\n    position: relative;\n}\n\n.icons .icon-link i {\n    font-size: 2rem; /* Font size for icons */\n    width: 4.5rem; /* Match container width */\n    height: 4.5rem; /* Match container height */\n    line-height: 4.5rem; /* Vertically center the icon */\n    border-radius: 50%; /* Ensure circular shape */\n    cursor: pointer;\n    transition: background-color 0.3s, color 0.3s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n}\n\n/* Before login: Login Icon (Red background) */\n.icons .icon-link .login-icon {\n    background-color: var(--red); /* Red background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .login-icon {\n    background-color: #ff7061; /* Slightly lighter red on hover */\n}\n\n/* After login: Profile Icon (Green background) */\n.icons .icon-link .profile-icon {\n    background-color: var(--green); /* Green background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .profile-icon {\n    background-color: #2ecc71; /* Slightly lighter green on hover */\n}\n\n/* After login: Logout Icon (Red background) */\n.icons .icon-link .logout-icon {\n    background-color: var(--red); /* Red background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .logout-icon {\n    background-color: #ff7061; /* Slightly lighter red on hover */\n}\n\n#menu-btn {\n    display: none;\n}\n\n.home {\n    display: flex;\n    justify-content: center;\n    background: url(\"https://png.pngtree.com/background/20210710/original/pngtree-green-fresh-fruit-and-vegetable-shop-reform-poster-background-material-picture-image_997132.jpg\") no-repeat;\n    background-position: center;\n    background-size: cover;\n    padding-top: 17rem;\n    padding-bottom: 10rem;\n}\n\n.home .content {\n    text-align: center;\n    width: 60rem;\n}\n\n.home .content h3 {\n    color: var(--black);\n    font-size: 3rem;\n}\n\n.home .content h3 span {\n    color: var(--green);\n}\n\n.home .content p {\n    color: var(--light-color);\n    font-size: 1.7rem;\n    padding: 1rem 0;\n    line-height: 1.8;\n}\n\n.heading {\n    text-align: center;\n    padding: 2rem 0;\n    padding-bottom: 3rem;\n    font-size: 3.5rem;\n    color: var(--black);\n}\n\n.heading span {\n    background: var(--green);\n    color: #fff;\n    display: inline-block;\n    padding: .5rem 3rem;\n    clip-path: polygon(100% 0, 93% 50%, 100% 99%, 0% 100%, 7% 50%, 0% 0);\n}\n\n.features .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n}\n\n.features .box-container .box {\n    padding: 3rem 2rem;\n    background: #fff;\n    outline: var(--outline);\n    outline-offset: -1rem;\n    text-align: center;\n    box-shadow: var(--box-shadow);\n    border-radius: 3rem;\n}\n\n.features .box-container .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.features .box-container .box img {\n    margin: 1rem 0;\n    height: 15rem;\n}\n\n.features .box-container .box h3 {\n    font-size: 2.5rem;\n    line-height: 1.8;\n    color: var(--black);\n}\n\n.features .box-container .box p {\n    font-size: 1.5rem;\n    line-height: 1.8;\n    color: var(--light-color);\n    padding-bottom: 1rem;\n}\n\n.Deals .product-slider {\n    margin: 0 10%;\n    padding: 1rem;\n}\n\n.Deals .product-slider:first-child {\n    margin-bottom: 2rem;\n}\n\n.Deals .product-slider .box {\n    background: #fff;\n    border-radius: 3rem;\n    text-align: center;\n    padding: 3rem 2rem;\n    outline-offset: -1rem;\n    outline: var(--outline);\n    box-shadow: var(--box-shadow);\n    transition: .2s linear;\n}\n\n.Deals .product-slider .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.Deals .product-slider .box img {\n    height: 20rem;\n}\n\n.Deals .product-slider .box h1 {\n    font-size: 2.5rem;\n    color: var(--black);\n}\n\n.Deals .product-slider .box .price {\n    font-size: 2rem;\n    color: var(--light-color);\n    padding: .5rem 0;\n}\n\n.Deals .product-slider .box .starts {\n    font-size: 1.7rem;\n    color: orange;\n    padding: .5rem;\n}\n\n.categories .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(26rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n    padding-bottom: 2rem;\n}\n\n.categories .box-container .box {\n    padding: 3rem 0;\n    background: #fff;\n    border-radius: 3rem;\n    box-shadow: var(--box-shadow);\n    outline-offset: -1rem;\n    outline: var(--outline);\n    text-align: center;\n}\n\n.categories .box-container .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.categories .box-container .box img {\n    margin: 1rem 0;\n    height: 18rem;\n}\n\n.categories .box-container .box h3 {\n    font-size: 2rem;\n    color: var(--black);\n}\n\n.categories .box-container .box p {\n    font-size: 1.7rem;\n    color: var(--light-color);\n    line-height: 1.8;\n}\n\n.footer {\n    background: #fff;\n}\n\n.footer .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(26rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n}\n\n.footer .box-container .box h3 {\n    font-size: 2.5rem;\n    color: var(--black);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box h3 i {\n    color: var(--green);\n}\n\n.footer .box-container .box .links {\n    display: block;\n    font-size: 1.5rem;\n    color: var(--light-color);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box i {\n    color: var(--green);\n    padding-right: .5rem;\n}\n\n.footer .box-container .box .links:hover i {\n    padding-right: 2rem;\n}\n\n.footer .box-container .box p {\n    line-height: 1.8;\n    font-size: 1.5rem;\n    color: var(--light-color);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box .share a {\n    height: 4rem;\n    width: 4rem;\n    line-height: 4rem;\n    border-radius: .5rem;\n    font-size: 2rem;\n    color: var(--black);\n    background: #eee;\n    text-align: center;\n}\n\n.footer .box-container .box .share a:hover {\n    background: var(--green);\n    color: #fff;\n}\n\n.footer .box-container .box .email {\n    margin: .7rem 0;\n    padding: 1rem;\n    border-radius: .5rem;\n    background: #eee;\n    font-size: 1.6rem;\n    color: var(--black);\n    width: 100%;\n}\n\n.footer .box-container .box .payment-img {\n    margin: 2rem;\n    height: 3rem;\n}\n\n.footer .credit {\n    text-align: center;\n    margin-top: 2rem;\n    padding: 1rem;\n    padding-top: 2.5rem;\n    font-size: 2rem;\n    color: var(--black);\n    border-top: var(--border);\n}\n\n.footer .credit span {\n    color: var(--green);\n    font-weight: bolder;\n}\n\n@media (max-width: 991px) {\n    html {\n        font-size: 55%;\n    }\n    .Header {\n        padding: 2rem;\n    }\n    section {\n        padding: 2rem;\n    }\n}\n\n@media (max-width: 768px) {\n    #menu-btn {\n        display: inline-block;\n    }\n    .Header .navbar {\n        position: absolute;\n        top: 110%;\n        right: -110%;\n        width: 30rem;\n        box-shadow: var(--box-shadow);\n        border-radius: .5rem;\n        background: #fff;\n    }\n    .Header .navbar.active {\n        right: 2rem;\n        transition: .4s linear;\n    }\n    .Header .navbar a {\n        font-size: 2rem;\n        margin: 2rem 2.5rem;\n        display: block;\n    }\n}\n\n@media (max-width: 450px) {\n    html {\n        font-size: 50%;\n    }\n    .heading {\n        font-size: 2.5rem;\n    }\n    .footer {\n        text-align: center;\n    }\n}
===================================================================
diff --git a/src/main/webapp/css/index.css b/src/main/webapp/css/index.css
--- a/src/main/webapp/css/index.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/css/index.css	(date 1743780650000)
@@ -1,7 +1,6 @@
 @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
 
 :root {
-   /* --green: #27ae60; */
     --green: green;
     --red: #e74c3c;
     --black: #130f40;
@@ -64,6 +63,7 @@
     background: #fff;
     box-shadow: var(--box-shadow);
     z-index: 1000;
+    height: 80px; /* Fixed height for the header */
 }
 
 .Header .logo {
@@ -90,21 +90,21 @@
 }
 
 .Header .navbar a:hover {
-    color:  #27ae60;
+    color: #27ae60;
 }
 
 .Header .icons {
-    display: flex; /* Changed to flex */
-    flex-direction: row; /* Ensures horizontal layout */
-    gap: 0.5rem; /* Adds spacing between icons */
-    align-items: center; /* Vertically centers the icons */
+    display: flex;
+    flex-direction: row;
+    gap: 0.5rem;
+    align-items: center;
 }
 
 .Header .icons div, .Header .icons a {
     height: 4.5rem;
     width: 4.5rem;
     line-height: 4.5rem;
-    border-radius: 50%; /* Changed to 50% for circular shape */
+    border-radius: 50%;
     background: none;
     color: var(--black);
     font-size: 2rem;
@@ -120,7 +120,6 @@
     color: var(--green);
 }
 
-/* Icon Link Styling */
 .icons .icon-link {
     display: inline-block;
     margin-left: 10px;
@@ -131,11 +130,11 @@
 }
 
 .icons .icon-link i {
-    font-size: 2rem; /* Font size for icons */
-    width: 4.5rem; /* Match container width */
-    height: 4.5rem; /* Match container height */
-    line-height: 4.5rem; /* Vertically center the icon */
-    border-radius: 50%; /* Ensure circular shape */
+    font-size: 2rem;
+    width: 4.5rem;
+    height: 4.5rem;
+    line-height: 4.5rem;
+    border-radius: 50%;
     cursor: pointer;
     transition: background-color 0.3s, color 0.3s;
     display: flex;
@@ -144,40 +143,155 @@
     text-align: center;
 }
 
-/* Before login: Login Icon (Red background) */
 .icons .icon-link .login-icon {
-    background-color: var(--red); /* Red background */
-    color: white; /* White icon color */
+    background-color: var(--red);
+    color: white;
 }
 
 .icons .icon-link:hover .login-icon {
-    background-color: #ff7061; /* Slightly lighter red on hover */
+    background-color: #ff7061;
 }
 
-/* After login: Profile Icon (Green background) */
 .icons .icon-link .profile-icon {
-    background-color: var(--green); /* Green background */
-    color: white; /* White icon color */
+    background-color: var(--green);
+    color: white;
 }
 
 .icons .icon-link:hover .profile-icon {
-    background-color: #2ecc71; /* Slightly lighter green on hover */
+    background-color: #2ecc71;
 }
 
-/* After login: Logout Icon (Red background) */
 .icons .icon-link .logout-icon {
-    background-color: var(--red); /* Red background */
-    color: white; /* White icon color */
+    background-color: var(--red);
+    color: white;
 }
 
 .icons .icon-link:hover .logout-icon {
-    background-color: #ff7061; /* Slightly lighter red on hover */
+    background-color: #ff7061;
 }
 
 #menu-btn {
     display: none;
 }
 
+/* Banner Section */
+.Banner {
+    width: 100%;
+    height: 100vh; /* Full viewport height */
+    position: relative;
+    margin-top: 80px; /* Offset for the fixed header */
+    overflow: hidden;
+}
+
+.home-slider {
+    width: 100%;
+    height: 100%;
+}
+
+.home-slider .swiper-slide {
+    width: 100%;
+    height: 100%;
+    background-size: cover;
+    background-position: center;
+    background-repeat: no-repeat;
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    position: relative;
+}
+
+/* Overlay for better text readability */
+.home-slider .swiper-slide::before {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background: rgba(0, 0, 0, 0.4); /* Dark overlay */
+    z-index: 1;
+}
+
+.home-slider .content {
+    position: relative;
+    z-index: 2;
+    text-align: center;
+    color: #fff;
+    max-width: 600px;
+    padding: 2rem;
+}
+
+.home-slider .content h3 {
+    font-size: 4.5rem;
+    font-weight: 600;
+    margin-bottom: 1rem;
+    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
+}
+
+.home-slider .content h3 span {
+    color: #27ae60;
+}
+
+.home-slider .content p {
+    font-size: 1.8rem;
+    margin-bottom: 2rem;
+    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
+}
+
+.home-slider .content .btn {
+    display: inline-block;
+    padding: 1rem 3rem;
+    background: #27ae60;
+    color: #fff;
+    font-size: 1.7rem;
+    border-radius: 5px;
+    border: none;
+    margin-top: 0; /* Remove the excessive margin */
+    text-shadow: none;
+}
+
+.home-slider .content .btn:hover {
+    background: #2ecc71;
+}
+
+.swiper-button-next,
+.swiper-button-prev {
+    color: #fff;
+    background: rgba(0, 0, 0, 0.5);
+    width: 50px;
+    height: 50px;
+    border-radius: 50%;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    transition: background 0.3s;
+}
+
+.swiper-button-next:hover,
+.swiper-button-prev:hover {
+    background: rgba(0, 0, 0, 0.8);
+}
+
+.swiper-button-next::after,
+.swiper-button-prev::after {
+    font-size: 2rem;
+}
+
+.swiper-pagination {
+    bottom: 20px !important;
+}
+
+.swiper-pagination-bullet {
+    background: #fff;
+    opacity: 0.7;
+}
+
+.swiper-pagination-bullet-active {
+    background: #27ae60;
+    opacity: 1;
+}
+
+/* Other Sections */
 .home {
     display: flex;
     justify-content: center;
@@ -447,6 +561,9 @@
     section {
         padding: 2rem;
     }
+    .Banner {
+        height: 70vh;
+    }
 }
 
 @media (max-width: 768px) {
@@ -471,6 +588,15 @@
         margin: 2rem 2.5rem;
         display: block;
     }
+    .Banner {
+        height: 60vh;
+    }
+    .home-slider .content h3 {
+        font-size: 3rem;
+    }
+    .home-slider .content p {
+        font-size: 1.5rem;
+    }
 }
 
 @media (max-width: 450px) {
@@ -483,4 +609,13 @@
     .footer {
         text-align: center;
     }
+    .Banner {
+        height: 50vh;
+    }
+    .home-slider .content h3 {
+        font-size: 2.5rem;
+    }
+    .home-slider .content p {
+        font-size: 1.3rem;
+    }
 }
\ No newline at end of file
Index: src/main/webapp/userLogin/login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body>\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/userLogin/login.jsp b/src/main/webapp/userLogin/login.jsp
--- a/src/main/webapp/userLogin/login.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/userLogin/login.jsp	(date 1746800182000)
@@ -7,8 +7,87 @@
     <link rel="stylesheet" href="${pageContext.request.contextPath}/css/logIn.css">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <style>
+        .popup {
+            display: none;
+            position: fixed;
+            top: 50%;
+            left: 50%;
+            transform: translate(-50%, -50%) scale(0.8);
+            background: rgba(255, 255, 255, 0.98);
+            border-radius: 15px;
+            padding: 30px;
+            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
+            max-width: 400px;
+            width: 90%;
+            text-align: center;
+            z-index: 1000;
+            border: 3px solid #3E7B27;
+            opacity: 0;
+            transition: opacity 0.3s ease, transform 0.3s ease;
+        }
+        .popup.active {
+            display: block;
+            opacity: 1;
+            transform: translate(-50%, -50%) scale(1);
+        }
+        .popup-content {
+            position: relative;
+        }
+        .popup-icon {
+            color: #3E7B27;
+            font-size: 24px;
+            margin-bottom: 15px;
+        }
+        .popup-content p {
+            margin: 0 0 20px;
+            font-size: 15px;
+            color: #721c24;
+            line-height: 1.5;
+        }
+        .popup-content .ok-btn {
+            background: #5CB338;
+            color: white;
+            border: none;
+            padding: 10px 20px;
+            border-radius: 8px;
+            cursor: pointer;
+            font-size: 14px;
+            text-transform: uppercase;
+            letter-spacing: 1px;
+            transition: background 0.3s, transform 0.2s;
+        }
+        .popup-content .ok-btn:hover {
+            background: #3E7B27;
+            transform: translateY(-2px);
+        }
+        .overlay {
+            display: none;
+            position: fixed;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            background: rgba(0, 0, 0, 0.6);
+            z-index: 999;
+            opacity: 0;
+            transition: opacity 0.3s ease;
+        }
+        .overlay.active {
+            display: block;
+            opacity: 1;
+        }
+    </style>
 </head>
 <body>
+<div class="overlay" id="popupOverlay"></div>
+<div class="popup" id="errorPopup">
+    <div class="popup-content">
+        <i class="fas fa-exclamation-circle popup-icon"></i>
+        <p id="popupMessage"></p>
+        <button class="ok-btn" onclick="closePopup()">OK</button>
+    </div>
+</div>
 <div class="container">
     <input type="checkbox" id="flip">
     <div class="cover">
@@ -32,14 +111,12 @@
             <div class="login-form">
                 <div class="title">Login</div>
                 <%
-                    // Check for error from LoginServlet (invalid credentials)
                     String error = (String) request.getAttribute("error");
                     if (error != null) {
                 %>
                 <p style="color: red;"><%= error %></p>
                 <%
                     }
-                    // Check for error from CartServlet (not logged in)
                     String loginError = request.getParameter("error");
                     if ("notLoggedIn".equals(loginError)) {
                 %>
@@ -57,7 +134,7 @@
                             <i class="fas fa-lock"></i>
                             <input type="password" name="password" placeholder="Enter your password" required>
                         </div>
-                        <div class="text"><a href="#">Forgot password?</a></div>
+                        <div class="text"><a href="${pageContext.request.contextPath}/userLogin/forgotPassword.jsp">Forgot password?</a></div>
                         <div class="button input-box">
                             <input type="submit" value="Submit">
                         </div>
@@ -67,15 +144,7 @@
             </div>
             <div class="signup-form">
                 <div class="title">Signup</div>
-                <%
-                    error = (String) request.getAttribute("error");
-                    if (error != null) {
-                %>
-                <p style="color: red;"><%= error %></p>
-                <%
-                    }
-                %>
-                <form action="${pageContext.request.contextPath}/RegisterServlet" method="post">
+                <form id="signupForm" action="${pageContext.request.contextPath}/RegisterServlet" method="post">
                     <div class="input-boxes">
                         <div class="input-box">
                             <i class="fas fa-user"></i>
@@ -95,7 +164,7 @@
                         </div>
                         <div class="input-box">
                             <i class="fas fa-lock"></i>
-                            <input type="password" name="password" placeholder="Enter your password" required>
+                            <input type="password" id="password" name="password" placeholder="Enter your password" required>
                         </div>
                         <div class="button input-box">
                             <input type="submit" value="Submit">
@@ -107,5 +176,38 @@
         </div>
     </div>
 </div>
+<script>
+    const signupForm = document.getElementById('signupForm');
+    const passwordInput = document.getElementById('password');
+    const popup = document.getElementById('errorPopup');
+    const popupMessage = document.getElementById('popupMessage');
+    const popupOverlay = document.getElementById('popupOverlay');
+
+    signupForm.addEventListener('submit', handleSubmit);
+    popupOverlay.addEventListener('click', closePopup);
+
+    function showPopup(message) {
+        popupMessage.textContent = message;
+        popup.classList.add('active');
+        popupOverlay.classList.add('active');
+    }
+
+    function closePopup() {
+        popup.classList.remove('active');
+        popupOverlay.classList.remove('active');
+    }
+
+    function handleSubmit(event) {
+        const password = passwordInput.value;
+        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@#$!%*?&])[A-Za-z\d@#$!%*?&]{8,}$/;
+
+        if (!passwordRegex.test(password)) {
+            event.preventDefault();
+            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');
+            return false;
+        }
+        return true;
+    }
+</script>
 </body>
 </html>
\ No newline at end of file
Index: src/main/webapp/userLogin/Success.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Success</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\">\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            height: 100vh; /* Full viewport height */\n            background-image: url('https://images6.alphacoders.com/124/1240065.jpg');\n            background-size: cover;\n            background-repeat: no-repeat;\n            display: flex; /* Use flexbox to center */\n            justify-content: center; /* Center horizontally */\n            align-items: center; /* Center vertically */\n        }\n\n        #card {\n            width: 1000px;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 10px;\n            overflow: hidden;\n            margin: 0 auto; /* Horizontal centering fallback */\n            text-align: center;\n            font-family: 'Source Sans Pro', sans-serif;\n            animation: fadeIn 1s ease-in-out; /* Keep the fadeIn animation */\n        }\n\n        #upper-side {\n            padding: 4em;\n            background-color: #8BC34A;\n            background: rgba(0, 255, 0, 0.3);\n            display: block;\n            color: #fff;\n            border-top-right-radius: 8px;\n            border-top-left-radius: 8px;\n        }\n\n        #checkmark {\n            font-weight: lighter;\n            fill: #3E7B27;\n            margin: -3.5em auto auto 65px;\n        }\n\n        #status {\n            font-weight: lighter;\n            text-transform: uppercase;\n            letter-spacing: 2px;\n            font-size: 1.2em; /* Slightly larger for emphasis */\n            margin-top: -0.2em;\n            margin-bottom: 10px;\n            color: #3E7B27;\n        }\n\n        #lower-side {\n            padding: 2em 2em 5em 2em;\n            background: #fff;\n            display: block;\n            border-bottom-right-radius: 8px;\n            border-bottom-left-radius: 8px;\n        }\n\n        #message {\n            margin-top: -0.5em;\n            color: #757575;\n            letter-spacing: 1px;\n            font-size: 1.1em; /* Improved readability */\n            line-height: 1.5;\n        }\n\n        #contBtn {\n            position: relative;\n            top: 1.5em;\n            text-decoration: none;\n            background: #8BC34A;\n            color: #fff;\n            margin: auto;\n            padding: 0.8em 3em;\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);\n            border-radius: 25px;\n            transition: all 0.4s ease;\n            font-size: 1.1em; /* Slightly larger for better visibility */\n            text-transform: uppercase;\n        }\n\n        #contBtn:hover {\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);\n            transition: all 0.4s ease;\n        }\n    </style>\n</head>\n<body>\n<div id='card'>\n    <div id='upper-side'>\n        <svg version=\"1.1\" id=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" xml:space=\"preserve\">\n            <path d=\"M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65\n            c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382\n            c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209\n            c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091\n            c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027\n            c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865\n            C131.967,94.755,132.296,93.271,131.583,92.152z\" />\n            <circle fill=\"none\" stroke=\"#3E7B27\" stroke-width=\"5\" stroke-miterlimit=\"10\" cx=\"109.486\" cy=\"104.353\" r=\"32.53\" />\n        </svg>\n        <h3 id='status'>Success</h3>\n    </div>\n    <div id='lower-side'>\n        <p id='message'>\n            <%\n                String type = request.getParameter(\"type\");\n                if (\"login\".equals(type)) {\n            %>\n            Login successful! Welcome back to your account.\n            <% } else if (\"signup\".equals(type)) { %>\n            Congratulations! Your account has been successfully created.\n            <% } else { %>\n            An action was completed successfully.\n            <% }\n            %>\n        </p>\n        <a href=\"${pageContext.request.contextPath}/index.jsp\" id=\"contBtn\">Go to Main Page</a>\n    </div>\n</div>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/userLogin/Success.jsp b/src/main/webapp/userLogin/Success.jsp
--- a/src/main/webapp/userLogin/Success.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/userLogin/Success.jsp	(date 1743855932000)
@@ -11,7 +11,7 @@
             margin: 0;
             padding: 0;
             height: 100vh; /* Full viewport height */
-            background-image: url('https://images6.alphacoders.com/124/1240065.jpg');
+            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');
             background-size: cover;
             background-repeat: no-repeat;
             display: flex; /* Use flexbox to center */
Index: src/main/webapp/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ page import=\"model.User\" %>\n<%@ page import=\"model.FileUtil\" %>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <link rel=\"icon\" type=\"image/icon\" href=\"./indexCJI/Images/favicon.PNG\">\n    <meta charset=\"UTF-8\">\n    <title>Online Grocery Order Management System</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css\" />\n    <link rel=\"stylesheet\" href=\"css/index.css\">\n</head>\n<body>\n<header class=\"Header\">\n    <a href=\"#\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> Grocery</a>\n    <nav class=\"navbar\">\n        <a href=\"#home\">Home</a>\n        <a href=\"#features\">Features</a>\n        <a href=\"#Deals\">Deals</a>\n        <a href=\"#categories\">Categories</a>\n    </nav>\n    <div class=\"icons\">\n        <div class=\"fa-solid fa-bars\" id=\"menu-btn\"></div>\n        <%\n            String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n            String loggedInUserFile = basePath + \"loggedInUser.txt\";\n            User loggedInUser = (User) session.getAttribute(\"user\");\n            User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);\n            if (loggedInUser != null || fileUser != null) {\n                if (loggedInUser == null) {\n                    loggedInUser = fileUser; // Fallback to file if session expired\n                    session.setAttribute(\"user\", loggedInUser); // Restore session\n                }\n                FileUtil.writeLoggedInUser(loggedInUserFile, loggedInUser); // Ensure file is updated\n        %>\n        <a href=\"${pageContext.request.contextPath}/userLogin/userProfile.jsp\" class=\"icon-link\">\n            <i class=\"fa-solid fa-user profile-icon\"></i> <!-- Added profile-icon class -->\n        </a>\n        <a href=\"${pageContext.request.contextPath}/LogoutServlet\" class=\"icon-link\">\n            <i class=\"fa-solid fa-sign-out-alt logout-icon\"></i> <!-- Added logout-icon class -->\n        </a>\n        <% } else { %>\n        <a href=\"${pageContext.request.contextPath}/userLogin/login.jsp\" class=\"icon-link\">\n            <i class=\"fa-solid fa-user login-icon\"></i> <!-- Added login-icon class -->\n        </a>\n        <% } %>\n    </div>\n</header>\n\n<section class=\"home\" id=\"home\">\n    <div class=\"content\">\n        <h3>Fresh and <span>Organic</span> Product For You</h3>\n        <p>\"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.\"</p>\n        <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n    </div>\n</section>\n\n<section class=\"features\" id=\"features\">\n    <h1 class=\"heading\">Our <span>Features</span></h1>\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwMUypuoJ7jxCE6Ltc7o0v9mHbWFLyHj55VA&s\">\n            <h3>Fresh And Organic</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://png.pngtree.com/png-clipart/20230211/original/pngtree-free-delivery-truck-icon-png-image_8951758.png\">\n            <h3>Free Delivery</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/free-vector/hands-holding-credit-card-mobile-phone-with-banking-app-person-paying-with-bank-card-transferring-money-shopping-online-flat-vector-illustration-payment-finance-concept_74855-24760.jpg\">\n            <h3>Easy Payment</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n    </div>\n</section>\n\n<section class=\"Deals\" id=\"Deals\">\n    <h1 class=\"heading\">New <span>Deals</span></h1>\n    <div class=\"swiper product-slider\">\n        <div class=\"swiper-wrapper\">\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-1.png\">\n                <h1>Fresh Orange</h1>\n                <div class=\"price\">$4.99/- - $8.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-2.png\">\n                <h1>Fresh Onion</h1>\n                <div class=\"price\">$2.99/- - $5.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-3.png\">\n                <h1>Fresh Meat</h1>\n                <div class=\"price\">$9.99/- - $14.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-4.png\">\n                <h1>Fresh Cabbage</h1>\n                <div class=\"price\">$3.99/- - $6.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-5.png\">\n                <h1>Fresh Potato</h1>\n                <div class=\"price\">$2.99/- - $5.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-6.png\">\n                <h1>Fresh Avocado</h1>\n                <div class=\"price\">$3.99/- - $4.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-7.png\">\n                <h1>Fresh Carrot</h1>\n                <div class=\"price\">$3.99/- - $6.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-8.png\">\n                <h1>Fresh Lemon</h1>\n                <div class=\"price\">$0.99/- - $2.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n        </div>\n        <div class=\"swiper-pagination\"></div>\n    </div>\n</section>\n\n<section class=\"categories\" id=\"categories\">\n    <h1 class=\"heading\">Product <span>Category</span></h1>\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <img src=\"https://t4.ftcdn.net/jpg/00/51/27/87/360_F_51278711_lK9RGYczSSU1GXlIwjwyM4QzVmPfuLSV.jpg\">\n            <h3>Produce</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://media.istockphoto.com/id/1185677996/photo/group-of-raw-seafood-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=dS10THUgufhCZPdO1Kn5LOhtpc2ZSlHXKmI9SdfXpoQ=\">\n            <h3>Proteins</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/premium-photo/different-fresh-dairy-products-isolated-white-background-isometry_660230-86599.jpg\">\n            <h3>Dairy</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://s1.1zoom.me/big0/970/Pastry_Buns_Bread_White_background_547126_1280x938.jpg\">\n            <h3>Bakery</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://media.istockphoto.com/id/504102317/photo/stack-of-different-sprouting-seeds-growing-in-a-glass-jar.jpg?s=612x612&w=0&k=20&c=_tG4Xl41hHrBBKo_sHDbZ3xYQRMebdUyiPb9txj_IfQ=\">\n            <h3>Pantry</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/premium-photo/assorted-american-junk-food-assortment-isolated-white-background-isometry_660230-86599.jpg\">\n            <h3>Snacks</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\" class=\"btn\">Shop Now</a>\n        </div>\n    </div>\n</section>\n\n<section class=\"home\" id=\"home\">\n    <div class=\"content\">\n        <h3>Fresh and <span>Organic</span> Product For You</h3>\n        <p>\"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.\"</p>\n        <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n    </div>\n</section>\n\n<section class=\"footer\" id=\"footer\">\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <h3><i class=\"fa-solid fa-basket-shopping\"></i> Grocery</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque pretium lacus porttitor placerat malesuada.</p>\n            <div class=\"share\">\n                <a href=\"#\" class=\"fa-brands fa-facebook-f\"></a>\n                <a href=\"#\" class=\"fa-brands fa-x-twitter\"></a>\n                <a href=\"#\" class=\"fa-brands fa-instagram\"></a>\n                <a href=\"#\" class=\"fa-brands fa-linkedin-in\"></a>\n            </div>\n        </div>\n        <div class=\"box\">\n            <h3>Contact Info</h3>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-phone\"></i> +94 711641638</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-phone\"></i> +94 704563428</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-envelope\"></i> example@gmail.com</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-location-dot\"></i> Sliit, Sri Lanka - 10115</a>\n        </div>\n        <div class=\"box\">\n            <h3>Quick Links</h3>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Home</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Features</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Deals</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Categories</a>\n        </div>\n        <div class=\"box\">\n            <h3>News Letter</h3>\n            <p>Subscribe For Latest Grocery Update</p>\n            <input type=\"email\" placeholder=\"Your Email\" class=\"email\">\n            <input type=\"submit\" value=\"Subscribe\" class=\"btn\">\n            <img src=\"https://www.shutterstock.com/image-vector/rivne-ukraine-may-25-2023-260nw-2308151527.jpg\" class=\"payment-img\">\n        </div>\n    </div>\n    <div class=\"credit\">PGNO-<span>278</span> | All Rights Reserved</div>\n</section>\n\n<script src=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js\"></script>\n<script src=\"js/index.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/index.jsp b/src/main/webapp/index.jsp
--- a/src/main/webapp/index.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/index.jsp	(date 1744551786000)
@@ -1,6 +1,7 @@
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
 <%@ page import="model.User" %>
-<%@ page import="model.FileUtil" %>
+<%@ page import="model.GroceryItem" %>
+<%@ page import="java.util.List" %>
 <!DOCTYPE html>
 <html lang="en">
 <head>
@@ -12,11 +13,20 @@
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
     <link rel="stylesheet" href="css/index.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
+<!-- Invoke DealServlet to fetch deal products -->
+<%
+    // Call DealServlet to set the dealProducts attribute
+    request.getRequestDispatcher("/DealServlet").include(request, response);
+%>
+
 <header class="Header">
     <a href="#" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
     <nav class="navbar">
-        <a href="#home">Home</a>
+        <a href="#Banner">Home</a>
         <a href="#features">Features</a>
         <a href="#Deals">Deals</a>
         <a href="#categories">Categories</a>
@@ -24,168 +34,151 @@
     <div class="icons">
         <div class="fa-solid fa-bars" id="menu-btn"></div>
         <%
-            String basePath = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/";
-            String loggedInUserFile = basePath + "loggedInUser.txt";
             User loggedInUser = (User) session.getAttribute("user");
-            User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);
-            if (loggedInUser != null || fileUser != null) {
-                if (loggedInUser == null) {
-                    loggedInUser = fileUser; // Fallback to file if session expired
-                    session.setAttribute("user", loggedInUser); // Restore session
-                }
-                FileUtil.writeLoggedInUser(loggedInUserFile, loggedInUser); // Ensure file is updated
+            if (loggedInUser != null) {
         %>
-        <a href="${pageContext.request.contextPath}/userLogin/userProfile.jsp" class="icon-link">
-            <i class="fa-solid fa-user profile-icon"></i> <!-- Added profile-icon class -->
+        <a href="${pageContext.request.contextPath}/UserProfileServlet" class="icon-link">
+            <i class="fa-solid fa-user profile-icon"></i>
         </a>
         <a href="${pageContext.request.contextPath}/LogoutServlet" class="icon-link">
-            <i class="fa-solid fa-sign-out-alt logout-icon"></i> <!-- Added logout-icon class -->
+            <i class="fa-solid fa-sign-out-alt logout-icon"></i>
         </a>
         <% } else { %>
         <a href="${pageContext.request.contextPath}/userLogin/login.jsp" class="icon-link">
-            <i class="fa-solid fa-user login-icon"></i> <!-- Added login-icon class -->
+            <i class="fa-solid fa-user login-icon"></i>
         </a>
         <% } %>
     </div>
 </header>
 
-<section class="home" id="home">
-    <div class="content">
-        <h3>Fresh and <span>Organic</span> Product For You</h3>
-        <p>"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle."</p>
-        <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
+<!-- Home Banners -->
+<section class="Banner" id="Banner">
+    <div class="swiper home-slider">
+        <div class="swiper-wrapper">
+            <!-- Slide 1 -->
+            <div class="swiper-slide slide" style="background: url('https://essstr.blob.core.windows.net/uiimg/Carousel/FreshVegetables/FreshVegetablesWebBanner.png') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Vegetables</span></h3>
+                    <p>Discover the best organic produce for your healthy lifestyle.</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 2 -->
+            <div class="swiper-slide slide" style="background: url('https://essstr.blob.core.windows.net/uiimg/Carousel/slide1.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Exclusive <span>Deals</span></h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="#categories" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 3 -->
+            <div class="swiper-slide slide" style="background: url('https://t3.ftcdn.net/jpg/06/14/08/90/360_F_614089075_9zP2Ybcr5fwsnHCzGsPNLLkpThUru9Zq.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Proteins</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Proteins" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 4 -->
+            <div class="swiper-slide slide" style="background: url('https://media.istockphoto.com/id/1471438213/photo/dairy-products-bottles-of-milk-cheese-cottage-cheese-yogurt-butter-on-meadow-of-cows.jpg?s=612x612&w=0&k=20&c=hIUSgarP7-7h1KDF4AuPzzMNCPbJ5h5ofPF30G0rGhc=') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Dairy</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Dairy" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 5 -->
+            <div class="swiper-slide slide" style="background: url('https://t4.ftcdn.net/jpg/06/27/46/27/360_F_627462785_DyaFl6hi7cAmpmB4obBFewgFrM6A488N.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Bakery</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Bakery" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 6 -->
+            <div class="swiper-slide slide" style="background: url('https://media.istockphoto.com/id/1227210244/photo/flat-lay-view-at-kitchen-table-full-with-non-perishable-foods-spase-for-text.jpg?s=612x612&w=0&k=20&c=yoKYTbSTaHdBtRjgOUsDYBSB_0B10QxrR6lKH_36Hps=') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Pantry</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Pantry" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 7 -->
+            <div class="swiper-slide slide" style="background: url('https://as1.ftcdn.net/jpg/03/68/66/94/1000_F_368669476_Cl7gGRuBWRYnPLwwY8pBgmeH1lGvpQ1r.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Tasty <span>Snacks</span></h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Snacks" class="btn">Shop Now</a>
+                </div>
+            </div>
+        </div>
+        <!-- Pagination -->
+        <div class="swiper-pagination"></div>
+        <!-- Navigation buttons -->
+        <div class="swiper-button-next"></div>
+        <div class="swiper-button-prev"></div>
     </div>
 </section>
 
+<%--features section--%>
 <section class="features" id="features">
     <h1 class="heading">Our <span>Features</span></h1>
     <div class="box-container">
         <div class="box">
             <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwMUypuoJ7jxCE6Ltc7o0v9mHbWFLyHj55VA&s">
             <h3>Fresh And Organic</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Enjoy nutrient-rich, organic produce sourced from local farmers for a healthier, sustainable lifestyle.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/freshAndOrganic.jsp" class="btn">Read More</a>
         </div>
         <div class="box">
             <img src="https://png.pngtree.com/png-clipart/20230211/original/pngtree-free-delivery-truck-icon-png-image_8951758.png">
             <h3>Free Delivery</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Get your groceries delivered to your door for free on orders above a minimum amount.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/freeDelivery.jsp" class="btn">Read More</a>
         </div>
         <div class="box">
             <img src="https://img.freepik.com/free-vector/hands-holding-credit-card-mobile-phone-with-banking-app-person-paying-with-bank-card-transferring-money-shopping-online-flat-vector-illustration-payment-finance-concept_74855-24760.jpg">
             <h3>Easy Payment</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Checkout effortlessly with secure, flexible payment options tailored for your convenience.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/easyPayment.jsp" class="btn">Read More</a>
         </div>
     </div>
 </section>
 
+<%--deals section--%>
 <section class="Deals" id="Deals">
     <h1 class="heading">New <span>Deals</span></h1>
     <div class="swiper product-slider">
         <div class="swiper-wrapper">
+            <%
+                // Retrieve the dealProducts list set by DealServlet
+                List<GroceryItem> dealProducts = (List<GroceryItem>) request.getAttribute("dealProducts");
+                if (dealProducts != null && !dealProducts.isEmpty()) {
+                    for (GroceryItem item : dealProducts) {
+            %>
             <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-1.png">
-                <h1>Fresh Orange</h1>
-                <div class="price">$4.99/- - $8.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
+                <a href="${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>">
+                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>">
+                    <h1><%= item.getProductName() %></h1>
+                    <div class="price">RS.<%= String.format("%.2f", item.getProductPrice()) %>/-</div>
+                </a>
             </div>
+            <%
+                }
+            } else {
+            %>
             <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-2.png">
-                <h1>Fresh Onion</h1>
-                <div class="price">$2.99/- - $5.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-3.png">
-                <h1>Fresh Meat</h1>
-                <div class="price">$9.99/- - $14.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-4.png">
-                <h1>Fresh Cabbage</h1>
-                <div class="price">$3.99/- - $6.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-5.png">
-                <h1>Fresh Potato</h1>
-                <div class="price">$2.99/- - $5.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-6.png">
-                <h1>Fresh Avocado</h1>
-                <div class="price">$3.99/- - $4.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-7.png">
-                <h1>Fresh Carrot</h1>
-                <div class="price">$3.99/- - $6.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-8.png">
-                <h1>Fresh Lemon</h1>
-                <div class="price">$0.99/- - $2.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
+                <h1>No Deals Available</h1>
+            </div>
+            <%
+                }
+            %>
         </div>
         <div class="swiper-pagination"></div>
     </div>
 </section>
 
+<%--category section--%>
 <section class="categories" id="categories">
     <h1 class="heading">Product <span>Category</span></h1>
     <div class="box-container">
@@ -231,7 +224,7 @@
 <section class="home" id="home">
     <div class="content">
         <h3>Fresh and <span>Organic</span> Product For You</h3>
-        <p>"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle."</p>
+        <p>Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.</p>
         <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
     </div>
 </section>
@@ -240,7 +233,7 @@
     <div class="box-container">
         <div class="box">
             <h3><i class="fa-solid fa-basket-shopping"></i> Grocery</h3>
-            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque pretium lacus porttitor placerat malesuada.</p>
+            <p>Your one-stop shop for fresh, affordable, organic groceries delivered fast.</p>
             <div class="share">
                 <a href="#" class="fa-brands fa-facebook-f"></a>
                 <a href="#" class="fa-brands fa-x-twitter"></a>
@@ -257,10 +250,10 @@
         </div>
         <div class="box">
             <h3>Quick Links</h3>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Home</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Features</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Deals</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Categories</a>
+            <a href="#Banner" class="links"><i class="fa-solid fa-arrow-right"></i> Home</a>
+            <a href="#features" class="links"><i class="fa-solid fa-arrow-right"></i> Features</a>
+            <a href="#Deals" class="links"><i class="fa-solid fa-arrow-right"></i> Deals</a>
+            <a href="#categories" class="links"><i class="fa-solid fa-arrow-right"></i> Categories</a>
         </div>
         <div class="box">
             <h3>News Letter</h3>
Index: target/OnlineGroceryOrderSystem/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for UserProfileServlet -->\n  <servlet>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <servlet-class>servlet.UserProfileServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserProfileServlet -->\n  <servlet-mapping>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <url-pattern>/UserProfileServlet</url-pattern>\n  </servlet-mapping>\n\n  <servlet>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <url-pattern>/UserProfileSearchServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Add AdminServlet mapping -->\n  <servlet>\n    <servlet-name>AdminServlet</servlet-name>\n    <servlet-class>servlet.AdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>AdminServlet</servlet-name>\n    <url-pattern>/AdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Define the OrderAdminServlet -->\n  <servlet>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <servlet-class>servlet.OrderAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <url-pattern>/OrderAdminServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for StockAdminServlet -->\n  <servlet>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <servlet-class>servlet.StockAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <url-pattern>/StockAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for ProductAdminServlet -->\n  <servlet>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <servlet-class>servlet.ProductAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <url-pattern>/ProductAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for UserAdminServlet -->\n  <servlet>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <servlet-class>servlet.UserAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserAdminServlet -->\n  <servlet-mapping>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <url-pattern>/UserAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for DealServlet -->\n  <servlet>\n    <servlet-name>DealServlet</servlet-name>\n    <servlet-class>servlet.DealServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for DealServlet -->\n  <servlet-mapping>\n    <servlet-name>DealServlet</servlet-name>\n    <url-pattern>/DealServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml
--- a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(date 1746805159017)
@@ -62,6 +62,7 @@
   <servlet-mapping>
     <servlet-name>LoginServlet</servlet-name>
     <url-pattern>/LoginServlet</url-pattern>
+    <url-pattern>/forgotPassword</url-pattern>
   </servlet-mapping>
 
   <!-- Map log out -->
@@ -167,6 +168,17 @@
   </servlet-mapping>
 
 
+  <!-- Filter Configuration -->
+  <filter>
+    <filter-name>SessionCheckFilter</filter-name>
+    <filter-class>servlet.SessionCheckFilter</filter-class>
+  </filter>
+  <filter-mapping>
+    <filter-name>SessionCheckFilter</filter-name>
+    <url-pattern>/*</url-pattern>
+  </filter-mapping>
+
+
   <!-- Optional: Welcome file list -->
   <welcome-file-list>
     <welcome-file>index.jsp</welcome-file>
Index: target/OnlineGroceryOrderSystem/css/logIn.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Poppins\", sans-serif;\n}\nbody {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #6EC207;\n    padding: 30px;\n}\n.container {\n    position: relative;\n    max-width: 850px;\n    width: 100%;\n    background: #fff;\n    padding: 40px 30px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    perspective: 2700px;\n}\n.container .cover {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 50%;\n    z-index: 98;\n    transition: all 1s ease;\n    transform-origin: left;\n    transform-style: preserve-3d;\n    backface-visibility: hidden;\n}\n.container #flip:checked ~ .cover {\n    transform: rotateY(-180deg);\n}\n.container #flip:checked ~ .forms .login-form {\n    pointer-events: none;\n}\n.container .cover .front,\n.container .cover .back {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n.cover .back {\n    transform: rotateY(180deg);\n}\n.container .cover img {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    z-index: 10;\n}\n.container .cover .text {\n    position: absolute;\n    z-index: 10;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.container .cover .text::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    opacity: 0.5;\n    background: #0C9463;\n}\n.cover .text .text-1,\n.cover .text .text-2 {\n    z-index: 20;\n    font-size: 26px;\n    font-weight: 600;\n    color: #fff;\n    text-align: center;\n}\n.cover .text .text-2 {\n    font-size: 15px;\n    font-weight: 500;\n}\n.container .forms {\n    height: 100%;\n    width: 100%;\n    background: #fff;\n}\n.container .form-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.form-content .login-form,\n.form-content .signup-form {\n    width: calc(100% / 2 - 25px);\n}\n.forms .form-content .title {\n    position: relative;\n    font-size: 24px;\n    font-weight: 500;\n    color: #333;\n}\n.forms .form-content .title:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 3px;\n    width: 25px;\n    background: #3E7B27;\n}\n.forms .signup-form .title:before {\n    width: 20px;\n}\n.forms .form-content .input-boxes {\n    margin-top: 30px;\n}\n.forms .form-content .input-box {\n    display: flex;\n    align-items: center;\n    height: 50px;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n}\n.form-content .input-box input {\n    height: 100%;\n    width: 100%;\n    outline: none;\n    border: none;\n    padding: 0 30px;\n    font-size: 16px;\n    font-weight: 500;\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n}\n.form-content .input-box input:focus,\n.form-content .input-box input:valid {\n    border-color: #3E7B27;\n}\n.form-content .input-box i {\n    position: absolute;\n    color: #3E7B27;\n    font-size: 17px;\n}\n.forms .form-content .text {\n    font-size: 14px;\n    font-weight: 500;\n    color: #3E7B27;\n}\n.forms .form-content .text a {\n    color:#3E7B27;\n    text-decoration: none;\n}\n.forms .form-content .text a:hover {\n    text-decoration: underline;\n}\n.forms .form-content .button {\n    color: #fff;\n    margin-top: 40px;\n}\n.forms .form-content .button input {\n    color: #fff;\n    background: #5CB338;\n    border-radius: 6px;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.4s ease;\n}\n.forms .form-content .button input:hover {\n    background: #3E7B27;\n}\n.forms .form-content label {\n    color: #191919;\n    cursor: pointer;\n}\n.forms .form-content label:hover {\n    text-decoration: underline;\n}\n.forms .form-content .login-text,\n.forms .form-content .sign-up-text {\n    text-align: center;\n    margin-top: 25px;\n}\n.container #flip {\n    display: none;\n}\n@media (max-width: 730px) {\n    .container .cover {\n        display: none;\n    }\n    .form-content .login-form,\n    .form-content .signup-form {\n        width: 100%;\n    }\n    .form-content .signup-form {\n        display: none;\n    }\n    .container #flip:checked ~ .forms .signup-form {\n        display: block;\n    }\n    .container #flip:checked ~ .forms .login-form {\n        display: none;\n    }\n}
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/css/logIn.css b/target/OnlineGroceryOrderSystem/css/logIn.css
--- a/target/OnlineGroceryOrderSystem/css/logIn.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/css/logIn.css	(date 1746805159009)
@@ -6,11 +6,12 @@
     font-family: "Poppins", sans-serif;
 }
 body {
+    background: url("https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg");
     min-height: 100vh;
     display: flex;
     align-items: center;
     justify-content: center;
-    background: #6EC207;
+    /*background: #6EC207;*/
     padding: 30px;
 }
 .container {
Index: target/OnlineGroceryOrderSystem/userLogin/login.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover\">\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html> <!-- LogIn branch-->
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/userLogin/login.jsp b/target/OnlineGroceryOrderSystem/userLogin/login.jsp
--- a/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(date 1746805159012)
@@ -7,8 +7,87 @@
     <link rel="stylesheet" href="${pageContext.request.contextPath}/css/logIn.css">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <style>
+        .popup {
+            display: none;
+            position: fixed;
+            top: 50%;
+            left: 50%;
+            transform: translate(-50%, -50%) scale(0.8);
+            background: rgba(255, 255, 255, 0.98);
+            border-radius: 15px;
+            padding: 30px;
+            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
+            max-width: 400px;
+            width: 90%;
+            text-align: center;
+            z-index: 1000;
+            border: 3px solid #3E7B27;
+            opacity: 0;
+            transition: opacity 0.3s ease, transform 0.3s ease;
+        }
+        .popup.active {
+            display: block;
+            opacity: 1;
+            transform: translate(-50%, -50%) scale(1);
+        }
+        .popup-content {
+            position: relative;
+        }
+        .popup-icon {
+            color: #3E7B27;
+            font-size: 24px;
+            margin-bottom: 15px;
+        }
+        .popup-content p {
+            margin: 0 0 20px;
+            font-size: 15px;
+            color: #721c24;
+            line-height: 1.5;
+        }
+        .popup-content .ok-btn {
+            background: #5CB338;
+            color: white;
+            border: none;
+            padding: 10px 20px;
+            border-radius: 8px;
+            cursor: pointer;
+            font-size: 14px;
+            text-transform: uppercase;
+            letter-spacing: 1px;
+            transition: background 0.3s, transform 0.2s;
+        }
+        .popup-content .ok-btn:hover {
+            background: #3E7B27;
+            transform: translateY(-2px);
+        }
+        .overlay {
+            display: none;
+            position: fixed;
+            top: 0;
+            left: 0;
+            width: 100%;
+            height: 100%;
+            background: rgba(0, 0, 0, 0.6);
+            z-index: 999;
+            opacity: 0;
+            transition: opacity 0.3s ease;
+        }
+        .overlay.active {
+            display: block;
+            opacity: 1;
+        }
+    </style>
 </head>
-<body style="background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover">
+<body>
+<div class="overlay" id="popupOverlay"></div>
+<div class="popup" id="errorPopup">
+    <div class="popup-content">
+        <i class="fas fa-exclamation-circle popup-icon"></i>
+        <p id="popupMessage"></p>
+        <button class="ok-btn" onclick="closePopup()">OK</button>
+    </div>
+</div>
 <div class="container">
     <input type="checkbox" id="flip">
     <div class="cover">
@@ -32,14 +111,12 @@
             <div class="login-form">
                 <div class="title">Login</div>
                 <%
-                    // Check for error from LoginServlet (invalid credentials)
                     String error = (String) request.getAttribute("error");
                     if (error != null) {
                 %>
                 <p style="color: red;"><%= error %></p>
                 <%
                     }
-                    // Check for error from CartServlet (not logged in)
                     String loginError = request.getParameter("error");
                     if ("notLoggedIn".equals(loginError)) {
                 %>
@@ -57,7 +134,7 @@
                             <i class="fas fa-lock"></i>
                             <input type="password" name="password" placeholder="Enter your password" required>
                         </div>
-                        <div class="text"><a href="#">Forgot password?</a></div>
+                        <div class="text"><a href="${pageContext.request.contextPath}/userLogin/forgotPassword.jsp">Forgot password?</a></div>
                         <div class="button input-box">
                             <input type="submit" value="Submit">
                         </div>
@@ -67,15 +144,7 @@
             </div>
             <div class="signup-form">
                 <div class="title">Signup</div>
-                <%
-                    error = (String) request.getAttribute("error");
-                    if (error != null) {
-                %>
-                <p style="color: red;"><%= error %></p>
-                <%
-                    }
-                %>
-                <form action="${pageContext.request.contextPath}/RegisterServlet" method="post">
+                <form id="signupForm" action="${pageContext.request.contextPath}/RegisterServlet" method="post">
                     <div class="input-boxes">
                         <div class="input-box">
                             <i class="fas fa-user"></i>
@@ -95,7 +164,7 @@
                         </div>
                         <div class="input-box">
                             <i class="fas fa-lock"></i>
-                            <input type="password" name="password" placeholder="Enter your password" required>
+                            <input type="password" id="password" name="password" placeholder="Enter your password" required>
                         </div>
                         <div class="button input-box">
                             <input type="submit" value="Submit">
@@ -107,5 +176,38 @@
         </div>
     </div>
 </div>
+<script>
+    const signupForm = document.getElementById('signupForm');
+    const passwordInput = document.getElementById('password');
+    const popup = document.getElementById('errorPopup');
+    const popupMessage = document.getElementById('popupMessage');
+    const popupOverlay = document.getElementById('popupOverlay');
+
+    signupForm.addEventListener('submit', handleSubmit);
+    popupOverlay.addEventListener('click', closePopup);
+
+    function showPopup(message) {
+        popupMessage.textContent = message;
+        popup.classList.add('active');
+        popupOverlay.classList.add('active');
+    }
+
+    function closePopup() {
+        popup.classList.remove('active');
+        popupOverlay.classList.remove('active');
+    }
+
+    function handleSubmit(event) {
+        const password = passwordInput.value;
+        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@#$!%*?&])[A-Za-z\d@#$!%*?&]{8,}$/;
+
+        if (!passwordRegex.test(password)) {
+            event.preventDefault();
+            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');
+            return false;
+        }
+        return true;
+    }
+</script>
 </body>
-</html> <!-- LogIn branch-->
\ No newline at end of file
+</html>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
===================================================================
diff --git a/src/main/webapp/WEB-INF/web.xml b/src/main/webapp/WEB-INF/web.xml
--- a/src/main/webapp/WEB-INF/web.xml	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/WEB-INF/web.xml	(date 1746799742000)
@@ -62,6 +62,7 @@
   <servlet-mapping>
     <servlet-name>LoginServlet</servlet-name>
     <url-pattern>/LoginServlet</url-pattern>
+    <url-pattern>/forgotPassword</url-pattern>
   </servlet-mapping>
 
   <!-- Map log out -->
@@ -73,6 +74,109 @@
     <servlet-name>LogoutServlet</servlet-name>
     <url-pattern>/LogoutServlet</url-pattern>
   </servlet-mapping>
+
+  <!-- Servlet Definition for UserProfileServlet -->
+  <servlet>
+    <servlet-name>UserProfileServlet</servlet-name>
+    <servlet-class>servlet.UserProfileServlet</servlet-class>
+  </servlet>
+
+  <!-- Servlet Mapping for UserProfileServlet -->
+  <servlet-mapping>
+    <servlet-name>UserProfileServlet</servlet-name>
+    <url-pattern>/UserProfileServlet</url-pattern>
+  </servlet-mapping>
+
+  <servlet>
+    <servlet-name>UserProfileSearchServlet</servlet-name>
+    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>
+  </servlet>
+  <servlet-mapping>
+    <servlet-name>UserProfileSearchServlet</servlet-name>
+    <url-pattern>/UserProfileSearchServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Add AdminServlet mapping -->
+  <servlet>
+    <servlet-name>AdminServlet</servlet-name>
+    <servlet-class>servlet.AdminServlet</servlet-class>
+  </servlet>
+  <servlet-mapping>
+    <servlet-name>AdminServlet</servlet-name>
+    <url-pattern>/AdminServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Define the OrderAdminServlet -->
+  <servlet>
+    <servlet-name>OrderAdminServlet</servlet-name>
+    <servlet-class>servlet.OrderAdminServlet</servlet-class>
+  </servlet>
+
+  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->
+  <servlet-mapping>
+    <servlet-name>OrderAdminServlet</servlet-name>
+    <url-pattern>/OrderAdminServlet</url-pattern>
+  </servlet-mapping>
+
+  <!-- Servlet Definition for StockAdminServlet -->
+  <servlet>
+    <servlet-name>StockAdminServlet</servlet-name>
+    <servlet-class>servlet.StockAdminServlet</servlet-class>
+  </servlet>
+  <servlet-mapping>
+    <servlet-name>StockAdminServlet</servlet-name>
+    <url-pattern>/StockAdminServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Servlet Definition for ProductAdminServlet -->
+  <servlet>
+    <servlet-name>ProductAdminServlet</servlet-name>
+    <servlet-class>servlet.ProductAdminServlet</servlet-class>
+  </servlet>
+  <servlet-mapping>
+    <servlet-name>ProductAdminServlet</servlet-name>
+    <url-pattern>/ProductAdminServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Servlet Definition for UserAdminServlet -->
+  <servlet>
+    <servlet-name>UserAdminServlet</servlet-name>
+    <servlet-class>servlet.UserAdminServlet</servlet-class>
+  </servlet>
+
+  <!-- Servlet Mapping for UserAdminServlet -->
+  <servlet-mapping>
+    <servlet-name>UserAdminServlet</servlet-name>
+    <url-pattern>/UserAdminServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Servlet Definition for DealServlet -->
+  <servlet>
+    <servlet-name>DealServlet</servlet-name>
+    <servlet-class>servlet.DealServlet</servlet-class>
+  </servlet>
+
+  <!-- Servlet Mapping for DealServlet -->
+  <servlet-mapping>
+    <servlet-name>DealServlet</servlet-name>
+    <url-pattern>/DealServlet</url-pattern>
+  </servlet-mapping>
+
+
+  <!-- Filter Configuration -->
+  <filter>
+    <filter-name>SessionCheckFilter</filter-name>
+    <filter-class>servlet.SessionCheckFilter</filter-class>
+  </filter>
+  <filter-mapping>
+    <filter-name>SessionCheckFilter</filter-name>
+    <url-pattern>/*</url-pattern>
+  </filter-mapping>
 
 
   <!-- Optional: Welcome file list -->
Index: src/main/webapp/js/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var swiper = new Swiper(\".product-slider\", {\n    loop: true,\n    spaceBetween: 20,\n    autoplay: {\n        delay: 3500,\n        disableOnInteraction: false,\n    },\n    pagination: {\n        el: \".swiper-pagination\",\n    },\n    breakpoints: {\n        0: {\n            slidesPerView: 1,\n        },\n        768: {\n            slidesPerView: 2,\n        },\n        1020: {\n            slidesPerView: 3,\n        },\n    },\n});
===================================================================
diff --git a/src/main/webapp/js/index.js b/src/main/webapp/js/index.js
--- a/src/main/webapp/js/index.js	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/js/index.js	(date 1744551786000)
@@ -2,12 +2,14 @@
     loop: true,
     spaceBetween: 20,
     autoplay: {
-        delay: 3500,
+        delay: 2500,
         disableOnInteraction: false,
     },
     pagination: {
         el: ".swiper-pagination",
+        clickable: true,
     },
+
     breakpoints: {
         0: {
             slidesPerView: 1,
@@ -19,4 +21,26 @@
             slidesPerView: 3,
         },
     },
+});
+
+// Initialize Swiper for the home section
+const homeSwiper = new Swiper('.home-slider', {
+    loop: true,
+    autoplay: {
+        delay: 3500,
+        disableOnInteraction: false,
+    },
+    pagination: {
+        el: '.swiper-pagination',
+        clickable: true,
+    },
+    navigation: {
+        nextEl: '.swiper-button-next',
+        prevEl: '.swiper-button-prev',
+    },
+    speed: 800, // Smooth transition speed
+    effect: 'fade', // Add a fade effect for smoother transitions
+    fadeEffect: {
+        crossFade: true,
+    },
 });
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"java.util.List\" %>\n<%@ page import=\"java.util.ArrayList\" %>\n<%@ page import=\"model.GroceryItem\" %>\n<%@ page import=\"model.User\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Cart Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n</head>\n<body>\n<%\n  User loggedInUser = (User) session.getAttribute(\"user\");\n  if (loggedInUser == null) {\n    response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=Please log in to access the cart.\");\n    return;\n  }\n\n  List<GroceryItem> items = (List<GroceryItem>) request.getAttribute(\"items\");\n  if (items == null) {\n    items = new ArrayList<>();\n  }\n  String category = request.getParameter(\"category\");\n  if (category == null || category.isEmpty()) {\n    category = \"Produce\"; // Default category\n  }\n%>\n<header>\n  <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n  <nav class=\"navbar\">\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\">Produce</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\">Proteins</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\">Dairy</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\">Bakery</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\">Pantry</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\">Snacks</a>\n  </nav>\n  <div class=\"search-container\">\n    <form class=\"search-bar\" id=\"search-form\" action=\"${pageContext.request.contextPath}/CartServlet\" method=\"get\">\n      <input type=\"text\" placeholder=\"Search groceries...\" name=\"name\" id=\"name\">\n      <button type=\"submit\" class=\"search-btn\">Search</button>\n      <span class=\"dropdown-toggle\" id=\"dropdown-toggle\">▼</span>\n    </form>\n    <div class=\"dropdown-menu\" id=\"dropdown-menu\">\n      <div class=\"filter-item\">\n        <label for=\"category\">Category:</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"\">All</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Proteins\">Proteins</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Bakery\">Bakery</option>\n          <option value=\"Pantry\">Pantry</option>\n          <option value=\"Snacks\">Snacks</option>\n        </select>\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"minPrice\">Min Price:</label>\n        <input type=\"number\" name=\"minPrice\" id=\"minPrice\" min=\"0\" step=\"0.01\" placeholder=\"0.00\">\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"maxPrice\">Max Price:</label>\n        <input type=\"number\" name=\"maxPrice\" id=\"maxPrice\" min=\"0\" step=\"0.01\" placeholder=\"100.00\">\n      </div>\n    </div>\n  </div>\n  <div class=\"cart-icon\" id=\"cart-icon\">\n    <i class=\"fas fa-shopping-cart\"></i>\n    <span class=\"cart-item-count\">0</span>\n  </div>\n</header>\n<section class=\"shop\">\n  <h2 class=\"section-title\">Shop <%= category %></h2>\n  <div class=\"product-content\">\n    <%\n      if (items.isEmpty()) {\n        out.println(\"<p>No products available in the \" + category + \" category.</p>\");\n      } else {\n        for (GroceryItem item : items) {\n          boolean outOfStock = item.getQuantity() <= 0;\n    %>\n    <div class=\"product-box\">\n      <div class=\"img-box\">\n        <a href=\"${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>\">\n          <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n        </a>\n      </div>\n      <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n      <div class=\"price-and-cart\">\n        <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n        <% if (outOfStock) { %>\n        <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n        <% } else { %>\n        <button class=\"add-cart\" data-item-id=\"<%= item.getProductID() %>\"><i class=\"fas fa-shopping-cart\"></i></button>\n        <% } %>\n      </div>\n    </div>\n    <%\n        }\n      }\n    %>\n  </div>\n</section>\n<div class=\"cart\">\n  <h2 class=\"cart-title\">Your Cart</h2>\n  <i class=\"ri-close-line\" id=\"cart-close\"></i>\n  <div class=\"cart-content\">\n    <p>Your cart is empty.</p>\n  </div>\n  <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n    <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n    <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n  </div>\n</div>\n<script>\n  window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
--- a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(date 1746805159008)
@@ -13,7 +13,10 @@
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css">
   <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <%
   User loggedInUser = (User) session.getAttribute("user");
   if (loggedInUser == null) {
@@ -25,10 +28,17 @@
   if (items == null) {
     items = new ArrayList<>();
   }
-  String category = request.getParameter("category");
+  String category = (String) request.getAttribute("category");
   if (category == null || category.isEmpty()) {
-    category = "Produce"; // Default category
+    category = "All"; // Default category for display
   }
+  Boolean isSearchResult = (Boolean) request.getAttribute("isSearchResult");
+  if (isSearchResult == null) {
+    isSearchResult = false;
+  }
+  String minPrice = request.getParameter("minPrice");
+  String maxPrice = request.getParameter("maxPrice");
+  String name = request.getParameter("name");
 %>
 <header>
   <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> GROCERY</a>
@@ -42,32 +52,39 @@
   </nav>
   <div class="search-container">
     <form class="search-bar" id="search-form" action="${pageContext.request.contextPath}/CartServlet" method="get">
-      <input type="text" placeholder="Search groceries..." name="name" id="name">
+      <input type="text" placeholder="Search groceries..." name="name" id="name" value="<%= name != null ? name : "" %>">
       <button type="submit" class="search-btn">Search</button>
       <span class="dropdown-toggle" id="dropdown-toggle">▼</span>
-    </form>
-    <div class="dropdown-menu" id="dropdown-menu">
-      <div class="filter-item">
-        <label for="category">Category:</label>
-        <select name="category" id="category">
-          <option value="">All</option>
-          <option value="Produce">Produce</option>
-          <option value="Proteins">Proteins</option>
-          <option value="Dairy">Dairy</option>
-          <option value="Bakery">Bakery</option>
-          <option value="Pantry">Pantry</option>
-          <option value="Snacks">Snacks</option>
-        </select>
-      </div>
-      <div class="filter-item">
-        <label for="minPrice">Min Price:</label>
-        <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0.00">
-      </div>
-      <div class="filter-item">
-        <label for="maxPrice">Max Price:</label>
-        <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100.00">
-      </div>
-    </div>
+      <div class="dropdown-menu" id="dropdown-menu">
+        <div class="filter-item">
+          <label for="category">Category:</label>
+          <select name="category" id="category">
+            <option value="All" <%= (category == null || "All".equals(category)) ? "selected" : "" %>>All</option>
+            <option value="Produce" <%= "Produce".equals(category) ? "selected" : "" %>>Produce</option>
+            <option value="Proteins" <%= "Proteins".equals(category) ? "selected" : "" %>>Proteins</option>
+            <option value="Dairy" <%= "Dairy".equals(category) ? "selected" : "" %>>Dairy</option>
+            <option value="Bakery" <%= "Bakery".equals(category) ? "selected" : "" %>>Bakery</option>
+            <option value="Pantry" <%= "Pantry".equals(category) ? "selected" : "" %>>Pantry</option>
+            <option value="Snacks" <%= "Snacks".equals(category) ? "selected" : "" %>>Snacks</option>
+          </select>
+        </div>
+        <div class="filter-item">
+          <label for="minPrice">Min Price:</label>
+          <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0.00" value="<%= minPrice != null ? minPrice : "" %>">
+        </div>
+        <div class="filter-item">
+          <label for="maxPrice">Max Price:</label>
+          <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100.00" value="<%= maxPrice != null ? maxPrice : "" %>">
+        </div>
+        <div class="filter-item">
+          <label for="sortBy">Sort By:</label>
+          <select name="sortBy" id="sortBy">
+            <option value="name" <%= "name".equals(request.getParameter("sortBy")) ? "selected" : "" %>>Name</option>
+            <option value="price" <%= "price".equals(request.getParameter("sortBy")) ? "selected" : "" %>>Price</option>
+          </select>
+        </div>
+      </div>
+    </form>
   </div>
   <div class="cart-icon" id="cart-icon">
     <i class="fas fa-shopping-cart"></i>
@@ -75,11 +92,19 @@
   </div>
 </header>
 <section class="shop">
-  <h2 class="section-title">Shop <%= category %></h2>
+  <h2 class="section-title">
+    <%= isSearchResult ? "Search Results" : "Shop " + category %>
+  </h2>
   <div class="product-content">
     <%
       if (items.isEmpty()) {
-        out.println("<p>No products available in the " + category + " category.</p>");
+        String message;
+        if (category != null && !category.equals("All")) {
+          message = "No products available in the " + category + ".";
+        } else {
+          message = "No products available in the Entire Shop.";
+        }
+        out.println("<p>" + message + "</p>");
       } else {
         for (GroceryItem item : items) {
           boolean outOfStock = item.getQuantity() <= 0;
Index: target/OnlineGroceryOrderSystem/css/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');\n\n:root {\n   /* --green: #27ae60; */\n    --green: green;\n    --red: #e74c3c;\n    --black: #130f40;\n    --light-color: #666;\n    --box-shadow: 0 .1rem 1.5rem rgba(0,0,0,0.1);\n    --border: .2rem solid rgba(0,0,0,0.1);\n    --outline: .1rem solid rgba(0,0,0,0.1);\n}\n\n* {\n    font-family: 'Poppins', sans-serif;\n    font-style: normal;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: none;\n    border: none;\n    text-decoration: none;\n    text-transform: capitalize;\n    transition: all .2s linear;\n}\n\nhtml {\n    font-size: 62.5%;\n    overflow-x: hidden;\n    scroll-behavior: smooth;\n    scroll-padding-top: 8rem;\n}\n\nbody {\n    background: #eee;\n}\n\n.btn {\n    border: 2px solid var(--black);\n    margin-top: 1rem;\n    display: inline-block;\n    padding: .8rem 3rem;\n    font-size: 1.7rem;\n    border-radius: .5rem;\n    color: var(--black);\n    cursor: pointer;\n    background: none;\n}\n\n.btn:hover {\n    background: var(--green);\n    color: white;\n}\n\n.Header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 2rem 9%;\n    background: #fff;\n    box-shadow: var(--box-shadow);\n    z-index: 1000;\n}\n\n.Header .logo {\n    font-size: 2.5rem;\n    font-weight: bolder;\n    color: var(--black);\n}\n\n.Header .logo i {\n    color: var(--green);\n    padding-right: 0.5rem;\n}\n\n.Header .navbar {\n    display: flex;\n    align-items: center;\n}\n\n.Header .navbar a {\n    font-size: 1.7rem;\n    font-weight: 500;\n    margin: 0 1rem;\n    color: var(--black);\n}\n\n.Header .navbar a:hover {\n    color:  #27ae60;\n}\n\n.Header .icons {\n    display: flex; /* Changed to flex */\n    flex-direction: row; /* Ensures horizontal layout */\n    gap: 0.5rem; /* Adds spacing between icons */\n    align-items: center; /* Vertically centers the icons */\n}\n\n.Header .icons div, .Header .icons a {\n    height: 4.5rem;\n    width: 4.5rem;\n    line-height: 4.5rem;\n    border-radius: 50%; /* Changed to 50% for circular shape */\n    background: none;\n    color: var(--black);\n    font-size: 2rem;\n    margin-left: 0.3rem;\n    text-align: center;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.Header .icons div:hover, .Header .icons a:hover {\n    color: var(--green);\n}\n\n/* Icon Link Styling */\n.icons .icon-link {\n    display: inline-block;\n    margin-left: 10px;\n    text-decoration: none;\n    height: 4.5rem;\n    width: 4.5rem;\n    position: relative;\n}\n\n.icons .icon-link i {\n    font-size: 2rem; /* Font size for icons */\n    width: 4.5rem; /* Match container width */\n    height: 4.5rem; /* Match container height */\n    line-height: 4.5rem; /* Vertically center the icon */\n    border-radius: 50%; /* Ensure circular shape */\n    cursor: pointer;\n    transition: background-color 0.3s, color 0.3s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n}\n\n/* Before login: Login Icon (Red background) */\n.icons .icon-link .login-icon {\n    background-color: var(--red); /* Red background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .login-icon {\n    background-color: #ff7061; /* Slightly lighter red on hover */\n}\n\n/* After login: Profile Icon (Green background) */\n.icons .icon-link .profile-icon {\n    background-color: var(--green); /* Green background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .profile-icon {\n    background-color: #2ecc71; /* Slightly lighter green on hover */\n}\n\n/* After login: Logout Icon (Red background) */\n.icons .icon-link .logout-icon {\n    background-color: var(--red); /* Red background */\n    color: white; /* White icon color */\n}\n\n.icons .icon-link:hover .logout-icon {\n    background-color: #ff7061; /* Slightly lighter red on hover */\n}\n\n#menu-btn {\n    display: none;\n}\n\n.home {\n    display: flex;\n    justify-content: center;\n    background: url(\"https://png.pngtree.com/background/20210710/original/pngtree-green-fresh-fruit-and-vegetable-shop-reform-poster-background-material-picture-image_997132.jpg\") no-repeat;\n    background-position: center;\n    background-size: cover;\n    padding-top: 17rem;\n    padding-bottom: 10rem;\n}\n\n.home .content {\n    text-align: center;\n    width: 60rem;\n}\n\n.home .content h3 {\n    color: var(--black);\n    font-size: 3rem;\n}\n\n.home .content h3 span {\n    color: var(--green);\n}\n\n.home .content p {\n    color: var(--light-color);\n    font-size: 1.7rem;\n    padding: 1rem 0;\n    line-height: 1.8;\n}\n\n.heading {\n    text-align: center;\n    padding: 2rem 0;\n    padding-bottom: 3rem;\n    font-size: 3.5rem;\n    color: var(--black);\n}\n\n.heading span {\n    background: var(--green);\n    color: #fff;\n    display: inline-block;\n    padding: .5rem 3rem;\n    clip-path: polygon(100% 0, 93% 50%, 100% 99%, 0% 100%, 7% 50%, 0% 0);\n}\n\n.features .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n}\n\n.features .box-container .box {\n    padding: 3rem 2rem;\n    background: #fff;\n    outline: var(--outline);\n    outline-offset: -1rem;\n    text-align: center;\n    box-shadow: var(--box-shadow);\n    border-radius: 3rem;\n}\n\n.features .box-container .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.features .box-container .box img {\n    margin: 1rem 0;\n    height: 15rem;\n}\n\n.features .box-container .box h3 {\n    font-size: 2.5rem;\n    line-height: 1.8;\n    color: var(--black);\n}\n\n.features .box-container .box p {\n    font-size: 1.5rem;\n    line-height: 1.8;\n    color: var(--light-color);\n    padding-bottom: 1rem;\n}\n\n.Deals .product-slider {\n    margin: 0 10%;\n    padding: 1rem;\n}\n\n.Deals .product-slider:first-child {\n    margin-bottom: 2rem;\n}\n\n.Deals .product-slider .box {\n    background: #fff;\n    border-radius: 3rem;\n    text-align: center;\n    padding: 3rem 2rem;\n    outline-offset: -1rem;\n    outline: var(--outline);\n    box-shadow: var(--box-shadow);\n    transition: .2s linear;\n}\n\n.Deals .product-slider .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.Deals .product-slider .box img {\n    height: 20rem;\n}\n\n.Deals .product-slider .box h1 {\n    font-size: 2.5rem;\n    color: var(--black);\n}\n\n.Deals .product-slider .box .price {\n    font-size: 2rem;\n    color: var(--light-color);\n    padding: .5rem 0;\n}\n\n.Deals .product-slider .box .starts {\n    font-size: 1.7rem;\n    color: orange;\n    padding: .5rem;\n}\n\n.categories .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(26rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n    padding-bottom: 2rem;\n}\n\n.categories .box-container .box {\n    padding: 3rem 0;\n    background: #fff;\n    border-radius: 3rem;\n    box-shadow: var(--box-shadow);\n    outline-offset: -1rem;\n    outline: var(--outline);\n    text-align: center;\n}\n\n.categories .box-container .box:hover {\n    box-shadow: 2px 2px 10px 2px var(--green);\n}\n\n.categories .box-container .box img {\n    margin: 1rem 0;\n    height: 18rem;\n}\n\n.categories .box-container .box h3 {\n    font-size: 2rem;\n    color: var(--black);\n}\n\n.categories .box-container .box p {\n    font-size: 1.7rem;\n    color: var(--light-color);\n    line-height: 1.8;\n}\n\n.footer {\n    background: #fff;\n}\n\n.footer .box-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(26rem, 1fr));\n    gap: 1.5rem;\n    margin: 0 10%;\n}\n\n.footer .box-container .box h3 {\n    font-size: 2.5rem;\n    color: var(--black);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box h3 i {\n    color: var(--green);\n}\n\n.footer .box-container .box .links {\n    display: block;\n    font-size: 1.5rem;\n    color: var(--light-color);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box i {\n    color: var(--green);\n    padding-right: .5rem;\n}\n\n.footer .box-container .box .links:hover i {\n    padding-right: 2rem;\n}\n\n.footer .box-container .box p {\n    line-height: 1.8;\n    font-size: 1.5rem;\n    color: var(--light-color);\n    padding: 1rem 0;\n}\n\n.footer .box-container .box .share a {\n    height: 4rem;\n    width: 4rem;\n    line-height: 4rem;\n    border-radius: .5rem;\n    font-size: 2rem;\n    color: var(--black);\n    background: #eee;\n    text-align: center;\n}\n\n.footer .box-container .box .share a:hover {\n    background: var(--green);\n    color: #fff;\n}\n\n.footer .box-container .box .email {\n    margin: .7rem 0;\n    padding: 1rem;\n    border-radius: .5rem;\n    background: #eee;\n    font-size: 1.6rem;\n    color: var(--black);\n    width: 100%;\n}\n\n.footer .box-container .box .payment-img {\n    margin: 2rem;\n    height: 3rem;\n}\n\n.footer .credit {\n    text-align: center;\n    margin-top: 2rem;\n    padding: 1rem;\n    padding-top: 2.5rem;\n    font-size: 2rem;\n    color: var(--black);\n    border-top: var(--border);\n}\n\n.footer .credit span {\n    color: var(--green);\n    font-weight: bolder;\n}\n\n@media (max-width: 991px) {\n    html {\n        font-size: 55%;\n    }\n    .Header {\n        padding: 2rem;\n    }\n    section {\n        padding: 2rem;\n    }\n}\n\n@media (max-width: 768px) {\n    #menu-btn {\n        display: inline-block;\n    }\n    .Header .navbar {\n        position: absolute;\n        top: 110%;\n        right: -110%;\n        width: 30rem;\n        box-shadow: var(--box-shadow);\n        border-radius: .5rem;\n        background: #fff;\n    }\n    .Header .navbar.active {\n        right: 2rem;\n        transition: .4s linear;\n    }\n    .Header .navbar a {\n        font-size: 2rem;\n        margin: 2rem 2.5rem;\n        display: block;\n    }\n}\n\n@media (max-width: 450px) {\n    html {\n        font-size: 50%;\n    }\n    .heading {\n        font-size: 2.5rem;\n    }\n    .footer {\n        text-align: center;\n    }\n}
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/css/index.css b/target/OnlineGroceryOrderSystem/css/index.css
--- a/target/OnlineGroceryOrderSystem/css/index.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/css/index.css	(date 1746805159007)
@@ -1,7 +1,6 @@
 @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
 
 :root {
-   /* --green: #27ae60; */
     --green: green;
     --red: #e74c3c;
     --black: #130f40;
@@ -64,6 +63,7 @@
     background: #fff;
     box-shadow: var(--box-shadow);
     z-index: 1000;
+    height: 80px; /* Fixed height for the header */
 }
 
 .Header .logo {
@@ -90,21 +90,21 @@
 }
 
 .Header .navbar a:hover {
-    color:  #27ae60;
+    color: #27ae60;
 }
 
 .Header .icons {
-    display: flex; /* Changed to flex */
-    flex-direction: row; /* Ensures horizontal layout */
-    gap: 0.5rem; /* Adds spacing between icons */
-    align-items: center; /* Vertically centers the icons */
+    display: flex;
+    flex-direction: row;
+    gap: 0.5rem;
+    align-items: center;
 }
 
 .Header .icons div, .Header .icons a {
     height: 4.5rem;
     width: 4.5rem;
     line-height: 4.5rem;
-    border-radius: 50%; /* Changed to 50% for circular shape */
+    border-radius: 50%;
     background: none;
     color: var(--black);
     font-size: 2rem;
@@ -120,7 +120,6 @@
     color: var(--green);
 }
 
-/* Icon Link Styling */
 .icons .icon-link {
     display: inline-block;
     margin-left: 10px;
@@ -131,11 +130,11 @@
 }
 
 .icons .icon-link i {
-    font-size: 2rem; /* Font size for icons */
-    width: 4.5rem; /* Match container width */
-    height: 4.5rem; /* Match container height */
-    line-height: 4.5rem; /* Vertically center the icon */
-    border-radius: 50%; /* Ensure circular shape */
+    font-size: 2rem;
+    width: 4.5rem;
+    height: 4.5rem;
+    line-height: 4.5rem;
+    border-radius: 50%;
     cursor: pointer;
     transition: background-color 0.3s, color 0.3s;
     display: flex;
@@ -144,40 +143,155 @@
     text-align: center;
 }
 
-/* Before login: Login Icon (Red background) */
 .icons .icon-link .login-icon {
-    background-color: var(--red); /* Red background */
-    color: white; /* White icon color */
+    background-color: var(--red);
+    color: white;
 }
 
 .icons .icon-link:hover .login-icon {
-    background-color: #ff7061; /* Slightly lighter red on hover */
+    background-color: #ff7061;
 }
 
-/* After login: Profile Icon (Green background) */
 .icons .icon-link .profile-icon {
-    background-color: var(--green); /* Green background */
-    color: white; /* White icon color */
+    background-color: var(--green);
+    color: white;
 }
 
 .icons .icon-link:hover .profile-icon {
-    background-color: #2ecc71; /* Slightly lighter green on hover */
+    background-color: #2ecc71;
 }
 
-/* After login: Logout Icon (Red background) */
 .icons .icon-link .logout-icon {
-    background-color: var(--red); /* Red background */
-    color: white; /* White icon color */
+    background-color: var(--red);
+    color: white;
 }
 
 .icons .icon-link:hover .logout-icon {
-    background-color: #ff7061; /* Slightly lighter red on hover */
+    background-color: #ff7061;
 }
 
 #menu-btn {
     display: none;
 }
 
+/* Banner Section */
+.Banner {
+    width: 100%;
+    height: 100vh; /* Full viewport height */
+    position: relative;
+    margin-top: 80px; /* Offset for the fixed header */
+    overflow: hidden;
+}
+
+.home-slider {
+    width: 100%;
+    height: 100%;
+}
+
+.home-slider .swiper-slide {
+    width: 100%;
+    height: 100%;
+    background-size: cover;
+    background-position: center;
+    background-repeat: no-repeat;
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    position: relative;
+}
+
+/* Overlay for better text readability */
+.home-slider .swiper-slide::before {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: 0;
+    width: 100%;
+    height: 100%;
+    background: rgba(0, 0, 0, 0.4); /* Dark overlay */
+    z-index: 1;
+}
+
+.home-slider .content {
+    position: relative;
+    z-index: 2;
+    text-align: center;
+    color: #fff;
+    max-width: 600px;
+    padding: 2rem;
+}
+
+.home-slider .content h3 {
+    font-size: 4.5rem;
+    font-weight: 600;
+    margin-bottom: 1rem;
+    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
+}
+
+.home-slider .content h3 span {
+    color: #27ae60;
+}
+
+.home-slider .content p {
+    font-size: 1.8rem;
+    margin-bottom: 2rem;
+    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
+}
+
+.home-slider .content .btn {
+    display: inline-block;
+    padding: 1rem 3rem;
+    background: #27ae60;
+    color: #fff;
+    font-size: 1.7rem;
+    border-radius: 5px;
+    border: none;
+    margin-top: 0; /* Remove the excessive margin */
+    text-shadow: none;
+}
+
+.home-slider .content .btn:hover {
+    background: #2ecc71;
+}
+
+.swiper-button-next,
+.swiper-button-prev {
+    color: #fff;
+    background: rgba(0, 0, 0, 0.5);
+    width: 50px;
+    height: 50px;
+    border-radius: 50%;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    transition: background 0.3s;
+}
+
+.swiper-button-next:hover,
+.swiper-button-prev:hover {
+    background: rgba(0, 0, 0, 0.8);
+}
+
+.swiper-button-next::after,
+.swiper-button-prev::after {
+    font-size: 2rem;
+}
+
+.swiper-pagination {
+    bottom: 20px !important;
+}
+
+.swiper-pagination-bullet {
+    background: #fff;
+    opacity: 0.7;
+}
+
+.swiper-pagination-bullet-active {
+    background: #27ae60;
+    opacity: 1;
+}
+
+/* Other Sections */
 .home {
     display: flex;
     justify-content: center;
@@ -447,6 +561,9 @@
     section {
         padding: 2rem;
     }
+    .Banner {
+        height: 70vh;
+    }
 }
 
 @media (max-width: 768px) {
@@ -471,6 +588,15 @@
         margin: 2rem 2.5rem;
         display: block;
     }
+    .Banner {
+        height: 60vh;
+    }
+    .home-slider .content h3 {
+        font-size: 3rem;
+    }
+    .home-slider .content p {
+        font-size: 1.5rem;
+    }
 }
 
 @media (max-width: 450px) {
@@ -483,4 +609,13 @@
     .footer {
         text-align: center;
     }
+    .Banner {
+        height: 50vh;
+    }
+    .home-slider .content h3 {
+        font-size: 2.5rem;
+    }
+    .home-slider .content p {
+        font-size: 1.3rem;
+    }
 }
\ No newline at end of file
Index: src/main/webapp/cartAndOrders/processCheckOut.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<html>\n<head>\n    <title>Order Confirmation - Grocery</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/processCheckOut.css\">\n</head>\n<body>\n<div class=\"container\">\n    <h1>Order Confirmation</h1>\n    <p>Thank you for your order!</p>\n    <div class=\"order-details\">\n        <p><strong>Order Number:</strong> <%= request.getAttribute(\"orderNumber\") %></p>\n        <p><strong>Full Name:</strong> <%= request.getAttribute(\"fullName\") %></p>\n        <p><strong>Phone Number:</strong> <%= request.getAttribute(\"phoneNumber\") %></p>\n        <p><strong>Address:</strong> <%= request.getAttribute(\"address\") %></p>\n        <p><strong>Delivery Method:</strong> <%= request.getAttribute(\"deliveryMethod\") %></p>\n        <% String deliveryDate = (String) request.getAttribute(\"deliveryDate\"); %>\n        <% if (deliveryDate != null && !deliveryDate.isEmpty()) { %>\n        <p><strong>Delivery Date:</strong> <%= deliveryDate %></p>\n        <% } %>\n        <p><strong>Payment Method:</strong> <%= request.getAttribute(\"paymentMethod\") %></p>\n        <p><strong>Payment Status:</strong> <%= request.getAttribute(\"paymentStatus\") %></p>\n        <p><strong>Delivery Status:</strong> <%= request.getAttribute(\"deliveryStatus\") %></p>\n        <p><strong>Order Status:</strong> <%= request.getAttribute(\"orderStatus\") %></p> <!-- Added orderStatus -->\n        <p><strong>Total Price:</strong> RS. <%= request.getAttribute(\"totalPrice\") %></p>\n    </div>\n    <div class=\"links\">\n        <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"btn\">Back to Home</a>\n        <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Back to Shopping</a>\n    </div>\n</div>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/cartAndOrders/processCheckOut.jsp b/src/main/webapp/cartAndOrders/processCheckOut.jsp
--- a/src/main/webapp/cartAndOrders/processCheckOut.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/cartAndOrders/processCheckOut.jsp	(date 1743851648000)
@@ -4,12 +4,18 @@
     <title>Order Confirmation - Grocery</title>
     <link rel="stylesheet" href="${pageContext.request.contextPath}/css/processCheckOut.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <div class="container">
     <h1>Order Confirmation</h1>
     <p>Thank you for your order!</p>
     <div class="order-details">
         <p><strong>Order Number:</strong> <%= request.getAttribute("orderNumber") %></p>
+        <%-- Debug: Log the userNumber value --%>
+        <% System.out.println("User ID in JSP: " + request.getAttribute("userNumber")); %>
+        <p><strong>User ID:</strong> <%= request.getAttribute("userNumber") != null ? request.getAttribute("userNumber") : "" %></p>
         <p><strong>Full Name:</strong> <%= request.getAttribute("fullName") %></p>
         <p><strong>Phone Number:</strong> <%= request.getAttribute("phoneNumber") %></p>
         <p><strong>Address:</strong> <%= request.getAttribute("address") %></p>
@@ -21,7 +27,7 @@
         <p><strong>Payment Method:</strong> <%= request.getAttribute("paymentMethod") %></p>
         <p><strong>Payment Status:</strong> <%= request.getAttribute("paymentStatus") %></p>
         <p><strong>Delivery Status:</strong> <%= request.getAttribute("deliveryStatus") %></p>
-        <p><strong>Order Status:</strong> <%= request.getAttribute("orderStatus") %></p> <!-- Added orderStatus -->
+        <p><strong>Order Status:</strong> <%= request.getAttribute("orderStatus") %></p>
         <p><strong>Total Price:</strong> RS. <%= request.getAttribute("totalPrice") %></p>
     </div>
     <div class="links">
Index: src/main/webapp/userLogin/userProfile.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ page import=\"model.User\" %>\n<%@ page import=\"model.FileUtil\" %>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>User Profile</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background-color: #f4f4f4;\n      margin: 0;\n      padding: 20px;\n    }\n    .profile-container {\n      max-width: 600px;\n      margin: 0 auto;\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    }\n    .profile-container h2 {\n      text-align: center;\n      color: #333;\n    }\n    .profile-container p {\n      font-size: 16px;\n      color: #555;\n      margin: 10px 0;\n    }\n    .profile-container .edit-btn {\n      display: inline-block;\n      margin-top: 10px;\n      text-decoration: none;\n      color: #fff;\n      background-color: #8bc34a;\n      padding: 8px 15px;\n      border-radius: 5px;\n    }\n    .profile-container .edit-btn:hover {\n      background-color: #689f38;\n    }\n    .back-button {\n      display: block;\n      text-align: center;\n      margin-top: 20px;\n    }\n    .back-button a {\n      text-decoration: none;\n      color: #fff;\n      background-color: #8bc34a;\n      padding: 10px 20px;\n      border-radius: 5px;\n    }\n    .back-button a:hover {\n      background-color: #689f38;\n    }\n  </style>\n</head>\n<body>\n<div class=\"profile-container\">\n  <h2>User Profile</h2>\n  <%\n    User loggedInUser = (User) session.getAttribute(\"user\");\n    String loggedInUserFile = application.getRealPath(\"/data/loggedInUser.txt\");\n    User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);\n    if (loggedInUser == null && fileUser == null) {\n  %>\n  <p>You must be logged in to view this page.</p>\n  <p><a href=\"${pageContext.request.contextPath}/userLogin/login.jsp\">Log In</a></p>\n  <% } else {\n    User userToDisplay = (loggedInUser != null) ? loggedInUser : fileUser;\n    if (userToDisplay != null) {\n  %>\n  <p><strong>Full Name:</strong> <%= userToDisplay.getFullName() %></p>\n  <p><strong>Email:</strong> <%= userToDisplay.getEmail() %></p>\n  <p><strong>Phone Number:</strong> <%= userToDisplay.getPhoneNumber() %></p>\n  <p><strong>Address:</strong> <%= userToDisplay.getAddress() != null ? userToDisplay.getAddress() : \"Not provided\" %></p>\n  <a href=\"${pageContext.request.contextPath}/userLogin/editProfile.jsp\" class=\"edit-btn\">Edit Profile</a>\n  <% } else { %>\n  <p>No user data available. Please log in again.</p>\n  <p><a href=\"${pageContext.request.contextPath}/userLogin/login.jsp\">Log In</a></p>\n  <% }\n  } %>\n  <div class=\"back-button\">\n    <a href=\"${pageContext.request.contextPath}/index.jsp\">Back to Home</a>\n  </div>\n</div>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/userLogin/userProfile.jsp b/src/main/webapp/userLogin/userProfile.jsp
--- a/src/main/webapp/userLogin/userProfile.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/userLogin/userProfile.jsp	(date 1743852331000)
@@ -1,92 +1,162 @@
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
 <%@ page import="model.User" %>
-<%@ page import="model.FileUtil" %>
+<%@ page import="model.FileUtil.Order" %>
+<%@ page import="java.util.List" %>
 <!DOCTYPE html>
 <html lang="en">
 <head>
   <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>User Profile</title>
-  <style>
-    body {
-      font-family: Arial, sans-serif;
-      background-color: #f4f4f4;
-      margin: 0;
-      padding: 20px;
-    }
-    .profile-container {
-      max-width: 600px;
-      margin: 0 auto;
-      background: #fff;
-      padding: 20px;
-      border-radius: 8px;
-      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
-    }
-    .profile-container h2 {
-      text-align: center;
-      color: #333;
-    }
-    .profile-container p {
-      font-size: 16px;
-      color: #555;
-      margin: 10px 0;
-    }
-    .profile-container .edit-btn {
-      display: inline-block;
-      margin-top: 10px;
-      text-decoration: none;
-      color: #fff;
-      background-color: #8bc34a;
-      padding: 8px 15px;
-      border-radius: 5px;
-    }
-    .profile-container .edit-btn:hover {
-      background-color: #689f38;
-    }
-    .back-button {
-      display: block;
-      text-align: center;
-      margin-top: 20px;
-    }
-    .back-button a {
-      text-decoration: none;
-      color: #fff;
-      background-color: #8bc34a;
-      padding: 10px 20px;
-      border-radius: 5px;
-    }
-    .back-button a:hover {
-      background-color: #689f38;
-    }
-  </style>
+  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userProfile.css">
+  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
 </head>
-<body>
-<div class="profile-container">
-  <h2>User Profile</h2>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
+<header>
+  <a href="${pageContext.request.contextPath}/index.jsp" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
+  <a  class="logo"><i class="fa-solid fa-user"></i> User Profile</a>
+<%--  <a href="${pageContext.request.contextPath}/index.jsp"></a>--%>
+</header>
+
+<div class="content">
   <%
     User loggedInUser = (User) session.getAttribute("user");
-    String loggedInUserFile = application.getRealPath("/data/loggedInUser.txt");
-    User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);
-    if (loggedInUser == null && fileUser == null) {
+    if (loggedInUser == null) {
   %>
   <p>You must be logged in to view this page.</p>
   <p><a href="${pageContext.request.contextPath}/userLogin/login.jsp">Log In</a></p>
-  <% } else {
-    User userToDisplay = (loggedInUser != null) ? loggedInUser : fileUser;
-    if (userToDisplay != null) {
-  %>
-  <p><strong>Full Name:</strong> <%= userToDisplay.getFullName() %></p>
-  <p><strong>Email:</strong> <%= userToDisplay.getEmail() %></p>
-  <p><strong>Phone Number:</strong> <%= userToDisplay.getPhoneNumber() %></p>
-  <p><strong>Address:</strong> <%= userToDisplay.getAddress() != null ? userToDisplay.getAddress() : "Not provided" %></p>
-  <a href="${pageContext.request.contextPath}/userLogin/editProfile.jsp" class="edit-btn">Edit Profile</a>
   <% } else { %>
-  <p>No user data available. Please log in again.</p>
-  <p><a href="${pageContext.request.contextPath}/userLogin/login.jsp">Log In</a></p>
-  <% }
-  } %>
-  <div class="back-button">
-    <a href="${pageContext.request.contextPath}/index.jsp">Back to Home</a>
-  </div>
-</div>
+  <div class="profile-container">
+    <div class="user-info">
+      <div class="user-info-header">
+        <h2>User Info</h2>
+        <button id="edit-btn" class="edit-btn"><i class="fas fa-edit"></i> Edit Profile</button>
+      </div>
+      <div class="user-details">
+        <div class="user-details-left">
+          <div class="user-icon">
+            <i class="fas fa-user-circle"></i>
+          </div>
+          <div class="user-details-text">
+            <p><strong>User Number:</strong> <span id="userNumberDisplay"><%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %></span></p>
+            <p><strong>Email:</strong> <span id="emailDisplay"><%= loggedInUser.getEmail() %></span></p>
+            <p><strong>Full Name:</strong> <span id="fullNameDisplay"><%= loggedInUser.getFullName() %></span></p>
+            <p><strong>Address:</strong> <span id="addressDisplay"><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "Not provided" %></span></p>
+            <p><strong>Phone Number:</strong> <span id="phoneNumberDisplay"><%= loggedInUser.getPhoneNumber() %></span></p>
+          </div>
+        </div>
+      </div>
+    </div>
+
+    <div id="profile-form-container" style="display: none;">
+      <form id="profile-form" action="${pageContext.request.contextPath}/UserProfileServlet" method="post">
+        <div class="form-group">
+          <label for="userNumber">User Number:</label>
+          <input type="text" id="userNumber" name="userNumber" value="<%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %>" readonly>
+        </div>
+        <div class="form-group">
+          <label for="email">Email:</label>
+          <input type="email" id="email" name="email" value="<%= loggedInUser.getEmail() %>" readonly>
+        </div>
+        <div class="form-group">
+          <label for="fullName">Full Name:</label>
+          <input type="text" id="fullName" name="fullName" value="<%= loggedInUser.getFullName() %>" required>
+        </div>
+        <div class="form-group">
+          <label for="address">Address:</label>
+          <textarea id="address" name="address" required><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "" %></textarea>
+        </div>
+        <div class="form-group">
+          <label for="phoneNumber">Phone Number:</label>
+          <input type="text" id="phoneNumber" name="phoneNumber" value="<%= loggedInUser.getPhoneNumber() %>" required>
+        </div>
+        <div class="form-buttons">
+          <button type="submit" name="action" value="save" class="save-btn">Save</button>
+          <button type="button" id="delete-btn" class="delete-btn">Delete Account</button>
+        </div>
+      </form>
+    </div>
+  </div>
+
+  <div class="profile-container">
+    <div class="activity-section">
+      <div class="activity-tabs">
+        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Active" class="tab <%= "Active".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Active</a>
+        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Delivered" class="tab <%= "Delivered".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Delivered</a>
+        <div class="search-bar">
+          <form action="${pageContext.request.contextPath}/UserProfileSearchServlet" method="get">
+            <input type="hidden" name="tab" value="${activeTab != null ? activeTab : 'Active'}">
+            <input type="text" name="searchQuery" placeholder="Search OrderID" value="${param.searchQuery}">
+            <button type="submit"><i class="fas fa-search"></i></button>
+          </form>
+        </div>
+      </div>
+      <div class="activity-list">
+        <%
+          List<Order> orders = (List<Order>) request.getAttribute("orders");
+          if (orders == null || orders.isEmpty()) {
+        %>
+        <div class="activity-item">
+          <p>No orders found.</p>
+        </div>
+        <%
+        } else {
+          for (Order order : orders) {
+            String statusClass = "pending";
+            if ("Delivered".equalsIgnoreCase(order.getDeliveryStatus())) {
+              statusClass = "completed";
+            } else if ("Cancelled".equalsIgnoreCase(order.getOrderStatus())) {
+              statusClass = "disabled";
+            }
+        %>
+        <div class="activity-item">
+          <i class="fas fa-shopping-cart"></i>
+          <p>
+            Order <%= order.getOrderNumber() %> placed on <%= order.getConfirmationDate() %>
+            (Status: <span class="status <%= statusClass %>"><%= order.getDeliveryStatus() %></span>)
+            <% if ("Active".equals(request.getAttribute("activeTab")) && !"Cancelled".equalsIgnoreCase(order.getOrderStatus())) { %>
+            <a href="${pageContext.request.contextPath}/userLogin/orderCancel.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
+            <% } else if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
+            <a href="${pageContext.request.contextPath}/userLogin/orderCheck.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
+            <% } %>
+          </p>
+          <span class="timestamp">
+            <% if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
+              <%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %>
+            <% } else { %>
+              <%= order.getConfirmationDate() %>
+            <% } %>
+          </span>
+        </div>
+        <%
+            }
+          }
+        %>
+      </div>
+    </div>
+  </div>
+
+  <!-- Delete Confirmation Modal -->
+  <div id="deleteModal" class="modal">
+    <div class="modal-content">
+      <div class="modal-header">
+        <h3>Warning</h3>
+      </div>
+      <div class="modal-body">
+        <p>Are you sure you want to delete your account? This action cannot be undone.</p>
+        <div class="modal-buttons">
+          <button id="confirmDelete" class="modal-btn confirm-btn">Confirm</button>
+          <button id="cancelDelete" class="modal-btn cancel-btn">Cancel</button>
+        </div>
+      </div>
+    </div>
+  </div>
+  <% } %>
+</div>
+
+<script src="${pageContext.request.contextPath}/js/userProfile.js"></script>
 </body>
 </html>
\ No newline at end of file
Index: src/main/webapp/cartAndOrders/checkOut.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Checkout - Grocery</title>\n  <base href=\"${pageContext.request.contextPath}/\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/checkOut.css\">\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\" />\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n</head>\n<body>\n<header>\n  <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> Grocery</a>\n  <nav class=\"navbar\">\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\">Produce</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\">Proteins</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\">Dairy</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\">Bakery</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\">Pantry</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\">Snacks</a>\n    <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\">Checkout</a>\n  </nav>\n  <div class=\"search-container\">\n    <form class=\"search-bar\" id=\"searchForm\">\n      <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Search groceries\">\n      <button type=\"submit\" class=\"search-btn\">Search</button>\n      <span class=\"dropdown-toggle\" id=\"dropdown-toggle\">▼</span>\n    </form>\n    <div class=\"dropdown-menu\" id=\"dropdown-menu\">\n      <div class=\"filter-item\">\n        <label for=\"category\">Product Category</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"\">All</option>\n          <option value=\"produce\">Produce</option>\n          <option value=\"proteins\">Proteins</option>\n          <option value=\"dairy\">Dairy</option>\n          <option value=\"bakery\">Bakery</option>\n          <option value=\"pantry\">Pantry</option>\n          <option value=\"snacks\">Snacks</option>\n        </select>\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"minPrice\">Min Price</label>\n        <input type=\"number\" name=\"minPrice\" id=\"minPrice\" min=\"0\" step=\"0.01\" placeholder=\"0\" value=\"0\">\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"maxPrice\">Max Price</label>\n        <input type=\"number\" name=\"maxPrice\" id=\"maxPrice\" min=\"0\" step=\"0.01\" placeholder=\"100\" value=\"100\">\n      </div>\n    </div>\n  </div>\n  <!--<div class=\"cart-icon\" id=\"cart-icon\">\n    <i class=\"ri-shopping-cart-line\"></i>\n    <span class=\"cart-item-count\">0</span>\n  </div>-->\n</header>\n\n<div class=\"cart\">\n  <h2 class=\"cart-title\">Your Cart</h2>\n  <div class=\"cart-content\"></div>\n  <div class=\"total\">\n    <div class=\"total-price\">Total RS. 0</div>\n    <button class=\"btn-buy\">Buy Now</button>\n    <i class=\"ri-close-line\" id=\"cart-close\"></i>\n  </div>\n</div>\n\n<section class=\"checkout-container\">\n  <div class=\"cart-section\">\n    <h2 class=\"section-title\">List Product In Cart</h2>\n    <div class=\"cart-items\" id=\"cart-items\"></div>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"keep-shopping\">Keep shopping</a>\n  </div>\n\n  <div class=\"checkout-form\">\n    <h2 class=\"section-title\">CHECKOUT</h2>\n    <form action=\"${pageContext.request.contextPath}/OrderServlet\" method=\"post\" id=\"checkout-form\">\n      <input type=\"text\" name=\"fullName\" placeholder=\"Full Name\" required>\n      <input type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\" required>\n      <input type=\"text\" name=\"address\" placeholder=\"Address\" required>\n      <select name=\"deliveryMethod\" id=\"deliveryMethod\" required>\n        <option value=\"\">Select Delivery Method</option>\n        <option value=\"store pickup\">Store Pickup</option>\n        <option value=\"same-day\">Same-Day Delivery</option>\n        <option value=\"scheduled\">Scheduled Delivery</option>\n      </select>\n      <input type=\"date\" name=\"deliveryDate\" id=\"deliveryDate\" style=\"display: none;\" min=\"<%= java.time.LocalDate.now().toString() %>\">\n      <select name=\"paymentMethod\" id=\"paymentMethod\" required>\n        <option value=\"\">Select Payment Method</option>\n        <option value=\"online card\">Online Card Payment</option>\n        <option value=\"cash on delivery\">Cash on Delivery</option>\n      </select>\n      <div class=\"total-info\" id=\"total-info\">\n        <span>Total Quantity: <span id=\"total-quantity\">0</span></span>\n        <span>Total Price: RS. <span id=\"total-price\">0.00</span></span>\n      </div>\n      <button type=\"submit\" class=\"checkout-btn\">CHECKOUT</button>\n    </form>\n  </div>\n</section>\n\n<div class=\"search-results\" id=\"search-results\"></div>\n\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n<script src=\"${pageContext.request.contextPath}/js/checkOut.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/cartAndOrders/checkOut.jsp b/src/main/webapp/cartAndOrders/checkOut.jsp
--- a/src/main/webapp/cartAndOrders/checkOut.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/cartAndOrders/checkOut.jsp	(date 1743851621000)
@@ -1,4 +1,6 @@
 <%@ page contentType="text/html;charset=UTF-8" language="java" %>
+<%@ page import="model.FileUtil" %>
+<%@ page import="model.User" %>
 <!DOCTYPE html>
 <html>
 <head>
@@ -11,7 +13,10 @@
   <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <header>
   <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
   <nav class="navbar">
@@ -77,10 +82,22 @@
 
   <div class="checkout-form">
     <h2 class="section-title">CHECKOUT</h2>
+    <%
+      String loggedInUserFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
+      User loggedInUser = FileUtil.readLoggedInUser(loggedInUserFile);
+      String fullName = "";
+      String phoneNumber = "";
+      String address = "";
+      if (loggedInUser != null) {
+        fullName = loggedInUser.getFullName() != null ? loggedInUser.getFullName() : "";
+        phoneNumber = loggedInUser.getPhoneNumber() != null ? loggedInUser.getPhoneNumber() : "";
+        address = loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "";
+      }
+    %>
     <form action="${pageContext.request.contextPath}/OrderServlet" method="post" id="checkout-form">
-      <input type="text" name="fullName" placeholder="Full Name" required>
-      <input type="text" name="phoneNumber" placeholder="Phone Number" required>
-      <input type="text" name="address" placeholder="Address" required>
+      <input type="text" name="fullName" placeholder="Full Name" value="<%= fullName %>" required>
+      <input type="text" name="phoneNumber" placeholder="Phone Number" value="<%= phoneNumber %>" required>
+      <input type="text" name="address" placeholder="Address" value="<%= address %>" required>
       <select name="deliveryMethod" id="deliveryMethod" required>
         <option value="">Select Delivery Method</option>
         <option value="store pickup">Store Pickup</option>
@@ -107,4 +124,4 @@
 <script src="${pageContext.request.contextPath}/js/cart.js"></script>
 <script src="${pageContext.request.contextPath}/js/checkOut.js"></script>
 </body>
-</html>
\ No newline at end of file
+</html> <!-- checkOut branch -->
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/data/users.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--- User Start: US143000078979 ---\nuserNumber=US143000078979\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\npassword=123456\n--- User End ---\n\n--- User Start: US434197982790 ---\nuserNumber=US434197982790\nfullName=tester123\nemail=tester@gmail.com\nphoneNumber=123456\naddress=tester,home\npassword=123456\n--- User End ---\n\n--- User Start: US860888769492 ---\nuserNumber=US860888769492\nfullName=jayashan guruge\nemail=jguruge2021@gmail.com\nphoneNumber=0764350677\naddress=\"Sampatha\"\npassword=12345678\n--- User End ---\n\n
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/data/users.txt b/target/OnlineGroceryOrderSystem/data/users.txt
--- a/target/OnlineGroceryOrderSystem/data/users.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/data/users.txt	(date 1746805159016)
@@ -1,27 +1,40 @@
---- User Start: US143000078979 ---
-userNumber=US143000078979
-fullName=aloka warnakula
+--- User Start: US021583101081 ---
+username=alokawarnakula77@gmail.com
+password=12345678A@a
+userNumber=US021583101081
+fullName=aloka warnakula mn
 email=alokawarnakula77@gmail.com
 phoneNumber=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-password=123456
 --- User End ---
 
---- User Start: US434197982790 ---
-userNumber=US434197982790
-fullName=tester123
-email=tester@gmail.com
-phoneNumber=123456
-address=tester,home
-password=123456
+--- User Start: US181627987900 ---
+username=user@gmail.com
+password=123
+userNumber=US181627987900
+fullName=user
+email=user@gmail.com
+phoneNumber=0000000000
+address=xxxxxxxyyyyyyyzzzzzzzz
 --- User End ---
 
---- User Start: US860888769492 ---
-userNumber=US860888769492
+--- User Start: US030548082274 ---
+username=jguruge2021@gmail.com
+password=123456
+userNumber=US030548082274
 fullName=jayashan guruge
 email=jguruge2021@gmail.com
 phoneNumber=0764350677
 address="Sampatha"
-password=12345678
+--- User End ---
+
+--- User Start: US155435209024 ---
+username=abc@gmail.com
+password=123
+userNumber=US155435209024
+fullName=abc
+email=abc@gmail.com
+phoneNumber=4553
+address=34
 --- User End ---
 
Index: src/main/webapp/css/processCheckOut.css
===================================================================
diff --git a/src/main/webapp/css/processCheckOut.css b/src/main/webapp/css/processCheckOut.css
--- a/src/main/webapp/css/processCheckOut.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/css/processCheckOut.css	(date 1742486229000)
@@ -1,0 +1,79 @@
+/* processCheckout.css */
+@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
+
+body {
+    font-family: 'Poppins', sans-serif;
+    background-color: #f4f4f4;
+    margin: 0;
+    padding: 0;
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    min-height: 100vh;
+}
+
+.container {
+    background-color: #6a5acd; /* Purple background */
+    padding: 40px;
+    border-radius: 10px;
+    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
+    color: #fff;
+    width: 100%;
+    max-width: 500px;
+    text-align: center;
+}
+
+h1 {
+    font-size: 30px;
+    margin-bottom: 20px;
+    color: #fff;
+}
+
+p {
+    font-size: 16px;
+    margin: 10px 0;
+    line-height: 1.5;
+}
+
+.order-details {
+    text-align: left;
+    background: rgba(255, 255, 255, 0.2);
+    padding: 15px;
+    border-radius: 5px;
+    margin: 15px 0;
+}
+
+.links {
+    margin-top: 20px;
+}
+
+.btn {
+    background-color: #20b2aa;
+    color: #fff;
+    padding: 10px 15px;
+    text-decoration: none;
+    font-weight: bold;
+    border-radius: 5px;
+    transition: background 0.3s;
+    display: inline-block;
+    margin: 5px;
+}
+
+.btn:hover {
+    background-color: #19a99d;
+}
+
+@media screen and (max-width: 768px) {
+    .container {
+        padding: 20px;
+        margin: 20px;
+    }
+
+    h1 {
+        font-size: 24px;
+    }
+
+    p {
+        font-size: 14px;
+    }
+}
Index: src/main/webapp/css/checkOut.css
===================================================================
diff --git a/src/main/webapp/css/checkOut.css b/src/main/webapp/css/checkOut.css
--- a/src/main/webapp/css/checkOut.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/css/checkOut.css	(date 1742661588000)
@@ -1,0 +1,244 @@
+/* checkOut.css */
+@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
+*{
+    font-family: 'Poppins', sans-serif;
+}
+
+header {
+    position: fixed;
+    top: 0;
+    left: 0;
+    width: 100%;
+    padding: 20px 9%;
+    background: #ffffff;
+    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+    z-index: 99;
+}
+
+.logo {
+    font-size: 18px;
+    color: #333;
+    text-decoration: none;
+    font-weight: 600;
+    display: flex;
+    align-items: center;
+}
+
+.logo i {
+    color: #27ae60;
+    margin-right: 5px;
+    font-size: 24px;
+}
+
+.navbar {
+    display: flex;
+    justify-content: space-around;
+    align-items: center;
+    width: 60%;
+    max-width: 800px;
+    background: #ffffff;
+    padding: 10px 15px;
+    border-radius: 25px;
+    box-shadow: none;
+}
+
+.navbar a {
+    font-size: 16px;
+    color: #34495e;
+    text-decoration: none;
+    font-weight: 500;
+    padding: 10px 20px;
+    transition: color 0.3s ease;
+}
+
+.navbar a:hover {
+    color: #27ae60;
+}
+
+.cart-icon {
+    position: relative;
+    display: flex;
+    align-items: center;
+    font-size: 24px;
+    cursor: pointer;
+}
+
+.cart-icon i {
+    color: #333;
+}
+
+.cart-item-count {
+    position: absolute;
+    top: -8px;
+    right: -10px;
+    background: #ff4444;
+    color: #fff;
+    border-radius: 50%;
+    width: 16px;
+    height: 16px;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    font-size: 10px;
+    font-weight: 500;
+    visibility: hidden;
+}
+
+.checkout-container {
+    display: flex;
+    justify-content: space-between;
+    padding: 120px 9% 30px;
+    max-width: 1500px;
+    margin: 0 auto;
+}
+
+.cart-section, .checkout-form {
+    flex: 1;
+    padding: 20px;
+}
+
+.cart-section {
+    background: #fff;
+    border-radius: 10px;
+    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
+    margin-right: 20px;
+}
+
+.checkout-form {
+    background: #6a5acd;
+    border-radius: 10px;
+    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
+    color: #fff;
+    padding: 30px;
+}
+
+.checkout-form .section-title {
+    color: #fff;
+    margin-bottom: 20px;
+    font-size: 30px;
+    text-align: center;
+}
+
+.cart-items {
+    margin-bottom: 20px;
+}
+
+.cart-item {
+    display: flex;
+    align-items: center;
+    background: #fff;
+    padding: 10px;
+    border-radius: 10px;
+    margin-bottom: 10px;
+    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
+    color: #333;
+}
+
+.cart-item-img {
+    width: 50px;
+    height: 50px;
+    margin-right: 10px;
+    border-radius: 5px;
+    object-fit: cover;
+}
+
+.cart-item-details {
+    flex-grow: 1;
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+    width: 100%;
+}
+
+.cart-product-title {
+    font-size: 16px;
+    font-weight: 500;
+    flex-shrink: 0;
+    margin-right: 10px;
+}
+
+.cart-price {
+    font-size: 16px;
+    margin-right: 10px;
+}
+
+.cart-total {
+    font-size: 16px;
+    font-weight: 500;
+    white-space: nowrap;
+}
+
+.keep-shopping {
+    display: block;
+    text-align: center;
+    color: #6a5acd;
+    text-decoration: none;
+    font-size: 16px;
+    margin-top: 10px;
+}
+
+.keep-shopping:hover {
+    text-decoration: underline;
+}
+
+.checkout-form input,
+.checkout-form select {
+    width: 100%;
+    padding: 12px;
+    margin-bottom: 15px;
+    border: none;
+    border-radius: 25px;
+    font-size: 16px;
+    background: rgba(255, 255, 255, 0.2);
+    color: #fff;
+    outline: none;
+}
+
+.checkout-form input[type="date"] {
+    padding: 10px;
+}
+
+.checkout-form input::placeholder,
+.checkout-form select option {
+    color: #fff;
+}
+
+.total-info {
+    margin: 20px 0;
+    font-size: 16px;
+    color: #fff;
+}
+
+.total-info span {
+    display: block;
+    margin-bottom: 10px;
+}
+
+.checkout-btn {
+    width: 100%;
+    padding: 12px;
+    background: #20b2aa;
+    border: none;
+    border-radius: 25px;
+    font-size: 16px;
+    color: #fff;
+    cursor: pointer;
+    transition: background 0.3s;
+}
+
+.checkout-btn:hover {
+    background: #19a99d;
+}
+
+@media screen and (max-width: 768px) {
+    .checkout-container {
+        flex-direction: column;
+    }
+    .cart-section {
+        margin-right: 0;
+        margin-bottom: 20px;
+    }
+}
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/data/orders.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--- Order Start: OD431569765512 ---\norderNumber=OD431569765512\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6/A soma\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-16\nconfirmationDate=2025-03-16 21:10:58\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=2\nproductID=2, quantity=2\n[total]\ntotalPrice=1.60\n--- Order End ---\n\n--- Order Start: OD083338893972 ---\norderNumber=OD083338893972\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:12:33\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=3\nproductID=2, quantity=3\n[total]\ntotalPrice=2.40\n--- Order End ---\n\n--- Order Start: OD089517536572 ---\norderNumber=OD089517536572\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:51:12\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\nproductID=2, quantity=10\n[total]\ntotalPrice=8.00\n--- Order End ---\n\n--- Order Start: OD003506322177 ---\norderNumber=OD003506322177\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=00\naddress=21/6/6/A soma\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 22:33:09\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD028829163551 ---\norderNumber=OD028829163551\nuserNumber=US111111111111\nname=jayashan guruge\nphoneNum=0764350677\naddress=\"Sampatha\"\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-18\nconfirmationDate=2025-03-17 08:13:05\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD434364219642 ---\norderNumber=OD434364219642\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 12:03:51\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=2, quantity=10\n[total]\ntotalPrice=4500.00\n--- Order End ---\n\n--- Order Start: OD480097990033 ---\norderNumber=OD480097990033\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-26\nconfirmationDate=2025-03-17 12:12:04\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\n[total]\ntotalPrice=2000.00\n--- Order End ---\n\n--- Order Start: OD327152255237 ---\norderNumber=OD327152255237\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-21\nconfirmationDate=2025-03-17 12:22:12\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=28, quantity=10\n[total]\ntotalPrice=2500.00\n--- Order End ---\n\n--- Order Start: OD256910041043 ---\norderNumber=OD256910041043\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6/A soma\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 21:15:13\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\n[total]\ntotalPrice=2000.00\n--- Order End ---\n\n--- Order Start: OD739299191466 ---\norderNumber=OD739299191466\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 22:18:34\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\nproductID=2, quantity=10\n[total]\ntotalPrice=6500.00\n--- Order End ---\n\n
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/data/orders.txt b/target/OnlineGroceryOrderSystem/data/orders.txt
--- a/target/OnlineGroceryOrderSystem/data/orders.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/data/orders.txt	(date 1746805159004)
@@ -1,194 +1,185 @@
---- Order Start: OD431569765512 ---
-orderNumber=OD431569765512
-userNumber=US111111111111
+--- Order Start: OD092021244402 ---
+orderNumber=OD092021244402
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
-address=21/6/6/A soma
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=same-day
-paymentMethod=cash on delivery
-deliveryDate=2025-03-16
-confirmationDate=2025-03-16 21:10:58
-paymentStatus=Pending
+paymentMethod=online card
+deliveryDate=
+confirmationDate=2025-03-31 09:48:55
+paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=2
-productID=2, quantity=2
+productID=29, quantity=1
 [total]
-totalPrice=1.60
+totalPrice=1460.00
 --- Order End ---
 
---- Order Start: OD083338893972 ---
-orderNumber=OD083338893972
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD543785297309 ---
+orderNumber=OD543785297309
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:12:33
+deliveryDate=
+confirmationDate=2025-04-01 10:24:30
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=3
-productID=2, quantity=3
+productID=18, quantity=4
 [total]
-totalPrice=2.40
+totalPrice=96.00
 --- Order End ---
 
---- Order Start: OD089517536572 ---
-orderNumber=OD089517536572
-userNumber=US111111111111
+--- Order Start: OD261952394242 ---
+orderNumber=OD261952394242
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:51:12
-paymentStatus=Paid
+deliveryMethod=same-day
+paymentMethod=cash on delivery
+deliveryDate=
+confirmationDate=2025-04-01 11:28:45
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
-productID=2, quantity=10
+productID=15, quantity=1
 [total]
-totalPrice=8.00
+totalPrice=1458.00
 --- Order End ---
 
---- Order Start: OD003506322177 ---
-orderNumber=OD003506322177
-userNumber=US111111111111
+--- Order Start: OD753079415721 ---
+orderNumber=OD753079415721
+userNumber=US021583101081
 name=aloka warnakula
-phoneNum=00
-address=21/6/6/A soma
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 22:33:09
-paymentStatus=Paid
-deliveryStatus=Pending
-orderStatus=active
-[products]
-productID=27, quantity=10
-[total]
-totalPrice=700.00
---- Order End ---
-
---- Order Start: OD028829163551 ---
-orderNumber=OD028829163551
-userNumber=US111111111111
-name=jayashan guruge
-phoneNum=0764350677
-address="Sampatha"
+phoneNum=0711641638
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-18
-confirmationDate=2025-03-17 08:13:05
+deliveryDate=
+confirmationDate=2025-04-05 16:42:44
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=27, quantity=10
+productID=27, quantity=15
+productID=41, quantity=1
 [total]
-totalPrice=700.00
+totalPrice=20511.00
 --- Order End ---
 
---- Order Start: OD434364219642 ---
-orderNumber=OD434364219642
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD113125118289 ---
+orderNumber=OD113125118289
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 12:03:51
+deliveryDate=
+confirmationDate=2025-04-05 16:43:56
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=2, quantity=10
+productID=27, quantity=1
 [total]
-totalPrice=4500.00
+totalPrice=1337.00
 --- Order End ---
 
---- Order Start: OD480097990033 ---
-orderNumber=OD480097990033
-userNumber=US111111111111
+--- Order Start: OD959211235390 ---
+orderNumber=OD959211235390
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-26
-confirmationDate=2025-03-17 12:12:04
+deliveryDate=
+confirmationDate=2025-04-05 16:44:35
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
+productID=41, quantity=1
 [total]
-totalPrice=2000.00
+totalPrice=456.00
 --- Order End ---
 
---- Order Start: OD327152255237 ---
-orderNumber=OD327152255237
-userNumber=US111111111111
-name=aloka warnakula
+--- Order Start: OD529482646567 ---
+orderNumber=OD529482646567
+userNumber=US021583101081
+name=aloka warnakula 
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-21
-confirmationDate=2025-03-17 12:22:12
+confirmationDate=2025-05-02 11:15:12
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=28, quantity=10
+productID=49, quantity=1
 [total]
-totalPrice=2500.00
+totalPrice=70.00
 --- Order End ---
 
---- Order Start: OD256910041043 ---
-orderNumber=OD256910041043
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD176924944754 ---
+orderNumber=OD176924944754
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
-address=21/6/6/A soma
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 21:15:13
-paymentStatus=Paid
+paymentMethod=cash on delivery
+confirmationDate=2025-05-04 19:50:39
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
+productID=27, quantity=3
+productID=15, quantity=1
+productID=5, quantity=1
+productID=9, quantity=1
+productID=2, quantity=1
+productID=22, quantity=1
+productID=29, quantity=1
+productID=25, quantity=1
 [total]
-totalPrice=2000.00
+totalPrice=8803.00
 --- Order End ---
 
---- Order Start: OD739299191466 ---
-orderNumber=OD739299191466
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD997161013374 ---
+orderNumber=OD997161013374
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 22:18:34
-paymentStatus=Paid
+deliveryMethod=same-day
+paymentMethod=cash on delivery
+confirmationDate=2025-05-06 08:57:36
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
-productID=2, quantity=10
+productID=15, quantity=1
 [total]
-totalPrice=6500.00
+totalPrice=1458.00
 --- Order End ---
 
Index: src/main/webapp/cartAndOrders/cartIndex.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"java.util.List\" %>\n<%@ page import=\"java.util.ArrayList\" %>\n<%@ page import=\"model.GroceryItem\" %>\n<%@ page import=\"model.User\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Cart Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n</head>\n<body>\n<%\n  User loggedInUser = (User) session.getAttribute(\"user\");\n  if (loggedInUser == null) {\n    response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=Please log in to access the cart.\");\n    return;\n  }\n\n  List<GroceryItem> items = (List<GroceryItem>) request.getAttribute(\"items\");\n  if (items == null) {\n    items = new ArrayList<>();\n  }\n  String category = request.getParameter(\"category\");\n  if (category == null || category.isEmpty()) {\n    category = \"Produce\"; // Default category\n  }\n%>\n<header>\n  <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n  <nav class=\"navbar\">\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\">Produce</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\">Proteins</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\">Dairy</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\">Bakery</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\">Pantry</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\">Snacks</a>\n  </nav>\n  <div class=\"search-container\">\n    <form class=\"search-bar\" id=\"search-form\" action=\"${pageContext.request.contextPath}/CartServlet\" method=\"get\">\n      <input type=\"text\" placeholder=\"Search groceries...\" name=\"name\" id=\"name\">\n      <button type=\"submit\" class=\"search-btn\">Search</button>\n      <span class=\"dropdown-toggle\" id=\"dropdown-toggle\">▼</span>\n    </form>\n    <div class=\"dropdown-menu\" id=\"dropdown-menu\">\n      <div class=\"filter-item\">\n        <label for=\"category\">Category:</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"\">All</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Proteins\">Proteins</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Bakery\">Bakery</option>\n          <option value=\"Pantry\">Pantry</option>\n          <option value=\"Snacks\">Snacks</option>\n        </select>\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"minPrice\">Min Price:</label>\n        <input type=\"number\" name=\"minPrice\" id=\"minPrice\" min=\"0\" step=\"0.01\" placeholder=\"0.00\">\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"maxPrice\">Max Price:</label>\n        <input type=\"number\" name=\"maxPrice\" id=\"maxPrice\" min=\"0\" step=\"0.01\" placeholder=\"100.00\">\n      </div>\n    </div>\n  </div>\n  <div class=\"cart-icon\" id=\"cart-icon\">\n    <i class=\"fas fa-shopping-cart\"></i>\n    <span class=\"cart-item-count\">0</span>\n  </div>\n</header>\n<section class=\"shop\">\n  <h2 class=\"section-title\">Shop <%= category %></h2>\n  <div class=\"product-content\">\n    <%\n      if (items.isEmpty()) {\n        out.println(\"<p>No products available in the \" + category + \" category.</p>\");\n      } else {\n        for (GroceryItem item : items) {\n          boolean outOfStock = item.getQuantity() <= 0;\n    %>\n    <div class=\"product-box\">\n      <div class=\"img-box\">\n        <a href=\"${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>\">\n          <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n        </a>\n      </div>\n      <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n      <div class=\"price-and-cart\">\n        <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n        <% if (outOfStock) { %>\n        <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n        <% } else { %>\n        <button class=\"add-cart\" data-item-id=\"<%= item.getProductID() %>\"><i class=\"fas fa-shopping-cart\"></i></button>\n        <% } %>\n      </div>\n    </div>\n    <%\n        }\n      }\n    %>\n  </div>\n</section>\n<div class=\"cart\">\n  <h2 class=\"cart-title\">Your Cart</h2>\n  <i class=\"ri-close-line\" id=\"cart-close\"></i>\n  <div class=\"cart-content\">\n    <p>Your cart is empty.</p>\n  </div>\n  <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n    <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n    <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n  </div>\n</div>\n<script>\n  window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html> <!--cart -->
===================================================================
diff --git a/src/main/webapp/cartAndOrders/cartIndex.jsp b/src/main/webapp/cartAndOrders/cartIndex.jsp
--- a/src/main/webapp/cartAndOrders/cartIndex.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/cartAndOrders/cartIndex.jsp	(date 1743852140000)
@@ -13,7 +13,10 @@
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css">
   <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <%
   User loggedInUser = (User) session.getAttribute("user");
   if (loggedInUser == null) {
@@ -25,10 +28,17 @@
   if (items == null) {
     items = new ArrayList<>();
   }
-  String category = request.getParameter("category");
+  String category = (String) request.getAttribute("category");
   if (category == null || category.isEmpty()) {
-    category = "Produce"; // Default category
+    category = "All"; // Default category for display
   }
+  Boolean isSearchResult = (Boolean) request.getAttribute("isSearchResult");
+  if (isSearchResult == null) {
+    isSearchResult = false;
+  }
+  String minPrice = request.getParameter("minPrice");
+  String maxPrice = request.getParameter("maxPrice");
+  String name = request.getParameter("name");
 %>
 <header>
   <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> GROCERY</a>
@@ -42,32 +52,39 @@
   </nav>
   <div class="search-container">
     <form class="search-bar" id="search-form" action="${pageContext.request.contextPath}/CartServlet" method="get">
-      <input type="text" placeholder="Search groceries..." name="name" id="name">
+      <input type="text" placeholder="Search groceries..." name="name" id="name" value="<%= name != null ? name : "" %>">
       <button type="submit" class="search-btn">Search</button>
       <span class="dropdown-toggle" id="dropdown-toggle">▼</span>
-    </form>
-    <div class="dropdown-menu" id="dropdown-menu">
-      <div class="filter-item">
-        <label for="category">Category:</label>
-        <select name="category" id="category">
-          <option value="">All</option>
-          <option value="Produce">Produce</option>
-          <option value="Proteins">Proteins</option>
-          <option value="Dairy">Dairy</option>
-          <option value="Bakery">Bakery</option>
-          <option value="Pantry">Pantry</option>
-          <option value="Snacks">Snacks</option>
-        </select>
-      </div>
-      <div class="filter-item">
-        <label for="minPrice">Min Price:</label>
-        <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0.00">
-      </div>
-      <div class="filter-item">
-        <label for="maxPrice">Max Price:</label>
-        <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100.00">
-      </div>
-    </div>
+      <div class="dropdown-menu" id="dropdown-menu">
+        <div class="filter-item">
+          <label for="category">Category:</label>
+          <select name="category" id="category">
+            <option value="All" <%= (category == null || "All".equals(category)) ? "selected" : "" %>>All</option>
+            <option value="Produce" <%= "Produce".equals(category) ? "selected" : "" %>>Produce</option>
+            <option value="Proteins" <%= "Proteins".equals(category) ? "selected" : "" %>>Proteins</option>
+            <option value="Dairy" <%= "Dairy".equals(category) ? "selected" : "" %>>Dairy</option>
+            <option value="Bakery" <%= "Bakery".equals(category) ? "selected" : "" %>>Bakery</option>
+            <option value="Pantry" <%= "Pantry".equals(category) ? "selected" : "" %>>Pantry</option>
+            <option value="Snacks" <%= "Snacks".equals(category) ? "selected" : "" %>>Snacks</option>
+          </select>
+        </div>
+        <div class="filter-item">
+          <label for="minPrice">Min Price:</label>
+          <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0.00" value="<%= minPrice != null ? minPrice : "" %>">
+        </div>
+        <div class="filter-item">
+          <label for="maxPrice">Max Price:</label>
+          <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100.00" value="<%= maxPrice != null ? maxPrice : "" %>">
+        </div>
+        <div class="filter-item">
+          <label for="sortBy">Sort By:</label>
+          <select name="sortBy" id="sortBy">
+            <option value="name" <%= "name".equals(request.getParameter("sortBy")) ? "selected" : "" %>>Name</option>
+            <option value="price" <%= "price".equals(request.getParameter("sortBy")) ? "selected" : "" %>>Price</option>
+          </select>
+        </div>
+      </div>
+    </form>
   </div>
   <div class="cart-icon" id="cart-icon">
     <i class="fas fa-shopping-cart"></i>
@@ -75,11 +92,19 @@
   </div>
 </header>
 <section class="shop">
-  <h2 class="section-title">Shop <%= category %></h2>
+  <h2 class="section-title">
+    <%= isSearchResult ? "Search Results" : "Shop " + category %>
+  </h2>
   <div class="product-content">
     <%
       if (items.isEmpty()) {
-        out.println("<p>No products available in the " + category + " category.</p>");
+        String message;
+        if (category != null && !category.equals("All")) {
+          message = "No products available in the " + category + ".";
+        } else {
+          message = "No products available in the Entire Shop.";
+        }
+        out.println("<p>" + message + "</p>");
       } else {
         for (GroceryItem item : items) {
           boolean outOfStock = item.getQuantity() <= 0;
@@ -122,4 +147,4 @@
 </script>
 <script src="${pageContext.request.contextPath}/js/cart.js"></script>
 </body>
-</html> <!--cart -->
\ No newline at end of file
+</html>
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/index.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ page import=\"model.User\" %>\n<%@ page import=\"model.FileUtil\" %>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <link rel=\"icon\" type=\"image/icon\" href=\"./indexCJI/Images/favicon.PNG\">\n    <meta charset=\"UTF-8\">\n    <title>Online Grocery Order Management System</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css\" />\n    <link rel=\"stylesheet\" href=\"css/index.css\">\n</head>\n<body>\n<header class=\"Header\">\n    <a href=\"#\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> Grocery</a>\n    <nav class=\"navbar\">\n        <a href=\"#home\">Home</a>\n        <a href=\"#features\">Features</a>\n        <a href=\"#Deals\">Deals</a>\n        <a href=\"#categories\">Categories</a>\n    </nav>\n    <div class=\"icons\">\n        <div class=\"fa-solid fa-bars\" id=\"menu-btn\"></div>\n        <%\n            String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n            String loggedInUserFile = basePath + \"loggedInUser.txt\";\n            User loggedInUser = (User) session.getAttribute(\"user\");\n            User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);\n            if (loggedInUser != null || fileUser != null) {\n                if (loggedInUser == null) {\n                    loggedInUser = fileUser; // Fallback to file if session expired\n                    session.setAttribute(\"user\", loggedInUser); // Restore session\n                }\n                FileUtil.writeLoggedInUser(loggedInUserFile, loggedInUser); // Ensure file is updated\n        %>\n        <a href=\"${pageContext.request.contextPath}/userLogin/userProfile.jsp\" class=\"icon-link\">\n            <i class=\"fa-solid fa-user profile-icon\"></i> <!-- Added profile-icon class -->\n        </a>\n        <a href=\"${pageContext.request.contextPath}/LogoutServlet\" class=\"icon-link\">\n            <i class=\"fa-solid fa-sign-out-alt logout-icon\"></i> <!-- Added logout-icon class -->\n        </a>\n        <% } else { %>\n        <a href=\"${pageContext.request.contextPath}/userLogin/login.jsp\" class=\"icon-link\">\n            <i class=\"fa-solid fa-user login-icon\"></i> <!-- Added login-icon class -->\n        </a>\n        <% } %>\n    </div>\n</header>\n\n<section class=\"home\" id=\"home\">\n    <div class=\"content\">\n        <h3>Fresh and <span>Organic</span> Product For You</h3>\n        <p>\"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.\"</p>\n        <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n    </div>\n</section>\n\n<section class=\"features\" id=\"features\">\n    <h1 class=\"heading\">Our <span>Features</span></h1>\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwMUypuoJ7jxCE6Ltc7o0v9mHbWFLyHj55VA&s\">\n            <h3>Fresh And Organic</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://png.pngtree.com/png-clipart/20230211/original/pngtree-free-delivery-truck-icon-png-image_8951758.png\">\n            <h3>Free Delivery</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/free-vector/hands-holding-credit-card-mobile-phone-with-banking-app-person-paying-with-bank-card-transferring-money-shopping-online-flat-vector-illustration-payment-finance-concept_74855-24760.jpg\">\n            <h3>Easy Payment</h3>\n            <p>\"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet.\"</p>\n            <a href=\"#\" class=\"btn\">Read More</a>\n        </div>\n    </div>\n</section>\n\n<section class=\"Deals\" id=\"Deals\">\n    <h1 class=\"heading\">New <span>Deals</span></h1>\n    <div class=\"swiper product-slider\">\n        <div class=\"swiper-wrapper\">\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-1.png\">\n                <h1>Fresh Orange</h1>\n                <div class=\"price\">$4.99/- - $8.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-2.png\">\n                <h1>Fresh Onion</h1>\n                <div class=\"price\">$2.99/- - $5.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-3.png\">\n                <h1>Fresh Meat</h1>\n                <div class=\"price\">$9.99/- - $14.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-4.png\">\n                <h1>Fresh Cabbage</h1>\n                <div class=\"price\">$3.99/- - $6.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-5.png\">\n                <h1>Fresh Potato</h1>\n                <div class=\"price\">$2.99/- - $5.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-6.png\">\n                <h1>Fresh Avocado</h1>\n                <div class=\"price\">$3.99/- - $4.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-7.png\">\n                <h1>Fresh Carrot</h1>\n                <div class=\"price\">$3.99/- - $6.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n            <div class=\"swiper-slide box\">\n                <img src=\"./indexCJI/Images/product-8.png\">\n                <h1>Fresh Lemon</h1>\n                <div class=\"price\">$0.99/- - $2.99/-</div>\n                <div class=\"starts\">\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star\"></i>\n                    <i class=\"fa-solid fa-star-half-stroke\"></i>\n                </div>\n            </div>\n        </div>\n        <div class=\"swiper-pagination\"></div>\n    </div>\n</section>\n\n<section class=\"categories\" id=\"categories\">\n    <h1 class=\"heading\">Product <span>Category</span></h1>\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <img src=\"https://t4.ftcdn.net/jpg/00/51/27/87/360_F_51278711_lK9RGYczSSU1GXlIwjwyM4QzVmPfuLSV.jpg\">\n            <h3>Produce</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://media.istockphoto.com/id/1185677996/photo/group-of-raw-seafood-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=dS10THUgufhCZPdO1Kn5LOhtpc2ZSlHXKmI9SdfXpoQ=\">\n            <h3>Proteins</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/premium-photo/different-fresh-dairy-products-isolated-white-background-isometry_660230-86599.jpg\">\n            <h3>Dairy</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://s1.1zoom.me/big0/970/Pastry_Buns_Bread_White_background_547126_1280x938.jpg\">\n            <h3>Bakery</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://media.istockphoto.com/id/504102317/photo/stack-of-different-sprouting-seeds-growing-in-a-glass-jar.jpg?s=612x612&w=0&k=20&c=_tG4Xl41hHrBBKo_sHDbZ3xYQRMebdUyiPb9txj_IfQ=\">\n            <h3>Pantry</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\" class=\"btn\">Shop Now</a>\n        </div>\n        <div class=\"box\">\n            <img src=\"https://img.freepik.com/premium-photo/assorted-american-junk-food-assortment-isolated-white-background-isometry_660230-86599.jpg\">\n            <h3>Snacks</h3>\n            <p>Upto 15% Off</p>\n            <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\" class=\"btn\">Shop Now</a>\n        </div>\n    </div>\n</section>\n\n<section class=\"home\" id=\"home\">\n    <div class=\"content\">\n        <h3>Fresh and <span>Organic</span> Product For You</h3>\n        <p>\"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.\"</p>\n        <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"btn\">Shop Now</a>\n    </div>\n</section>\n\n<section class=\"footer\" id=\"footer\">\n    <div class=\"box-container\">\n        <div class=\"box\">\n            <h3><i class=\"fa-solid fa-basket-shopping\"></i> Grocery</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque pretium lacus porttitor placerat malesuada.</p>\n            <div class=\"share\">\n                <a href=\"#\" class=\"fa-brands fa-facebook-f\"></a>\n                <a href=\"#\" class=\"fa-brands fa-x-twitter\"></a>\n                <a href=\"#\" class=\"fa-brands fa-instagram\"></a>\n                <a href=\"#\" class=\"fa-brands fa-linkedin-in\"></a>\n            </div>\n        </div>\n        <div class=\"box\">\n            <h3>Contact Info</h3>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-phone\"></i> +94 711641638</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-phone\"></i> +94 704563428</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-envelope\"></i> example@gmail.com</a>\n            <a href=\"#\" class=\"links\"> <i class=\"fa-solid fa-location-dot\"></i> Sliit, Sri Lanka - 10115</a>\n        </div>\n        <div class=\"box\">\n            <h3>Quick Links</h3>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Home</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Features</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Deals</a>\n            <a href=\"#\" class=\"links\"><i class=\"fa-solid fa-arrow-right\"></i> Categories</a>\n        </div>\n        <div class=\"box\">\n            <h3>News Letter</h3>\n            <p>Subscribe For Latest Grocery Update</p>\n            <input type=\"email\" placeholder=\"Your Email\" class=\"email\">\n            <input type=\"submit\" value=\"Subscribe\" class=\"btn\">\n            <img src=\"https://www.shutterstock.com/image-vector/rivne-ukraine-may-25-2023-260nw-2308151527.jpg\" class=\"payment-img\">\n        </div>\n    </div>\n    <div class=\"credit\">PGNO-<span>278</span> | All Rights Reserved</div>\n</section>\n\n<script src=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js\"></script>\n<script src=\"js/index.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/index.jsp b/target/OnlineGroceryOrderSystem/index.jsp
--- a/target/OnlineGroceryOrderSystem/index.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/index.jsp	(date 1746805159013)
@@ -1,6 +1,7 @@
 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
 <%@ page import="model.User" %>
-<%@ page import="model.FileUtil" %>
+<%@ page import="model.GroceryItem" %>
+<%@ page import="java.util.List" %>
 <!DOCTYPE html>
 <html lang="en">
 <head>
@@ -12,11 +13,20 @@
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
     <link rel="stylesheet" href="css/index.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
+<!-- Invoke DealServlet to fetch deal products -->
+<%
+    // Call DealServlet to set the dealProducts attribute
+    request.getRequestDispatcher("/DealServlet").include(request, response);
+%>
+
 <header class="Header">
     <a href="#" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
     <nav class="navbar">
-        <a href="#home">Home</a>
+        <a href="#Banner">Home</a>
         <a href="#features">Features</a>
         <a href="#Deals">Deals</a>
         <a href="#categories">Categories</a>
@@ -24,168 +34,151 @@
     <div class="icons">
         <div class="fa-solid fa-bars" id="menu-btn"></div>
         <%
-            String basePath = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/";
-            String loggedInUserFile = basePath + "loggedInUser.txt";
             User loggedInUser = (User) session.getAttribute("user");
-            User fileUser = FileUtil.readLoggedInUser(loggedInUserFile);
-            if (loggedInUser != null || fileUser != null) {
-                if (loggedInUser == null) {
-                    loggedInUser = fileUser; // Fallback to file if session expired
-                    session.setAttribute("user", loggedInUser); // Restore session
-                }
-                FileUtil.writeLoggedInUser(loggedInUserFile, loggedInUser); // Ensure file is updated
+            if (loggedInUser != null) {
         %>
-        <a href="${pageContext.request.contextPath}/userLogin/userProfile.jsp" class="icon-link">
-            <i class="fa-solid fa-user profile-icon"></i> <!-- Added profile-icon class -->
+        <a href="${pageContext.request.contextPath}/UserProfileServlet" class="icon-link">
+            <i class="fa-solid fa-user profile-icon"></i>
         </a>
         <a href="${pageContext.request.contextPath}/LogoutServlet" class="icon-link">
-            <i class="fa-solid fa-sign-out-alt logout-icon"></i> <!-- Added logout-icon class -->
+            <i class="fa-solid fa-sign-out-alt logout-icon"></i>
         </a>
         <% } else { %>
         <a href="${pageContext.request.contextPath}/userLogin/login.jsp" class="icon-link">
-            <i class="fa-solid fa-user login-icon"></i> <!-- Added login-icon class -->
+            <i class="fa-solid fa-user login-icon"></i>
         </a>
         <% } %>
     </div>
 </header>
 
-<section class="home" id="home">
-    <div class="content">
-        <h3>Fresh and <span>Organic</span> Product For You</h3>
-        <p>"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle."</p>
-        <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
+<!-- Home Banners -->
+<section class="Banner" id="Banner">
+    <div class="swiper home-slider">
+        <div class="swiper-wrapper">
+            <!-- Slide 1 -->
+            <div class="swiper-slide slide" style="background: url('https://essstr.blob.core.windows.net/uiimg/Carousel/FreshVegetables/FreshVegetablesWebBanner.png') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Vegetables</span></h3>
+                    <p>Discover the best organic produce for your healthy lifestyle.</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 2 -->
+            <div class="swiper-slide slide" style="background: url('https://essstr.blob.core.windows.net/uiimg/Carousel/slide1.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Exclusive <span>Deals</span></h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="#categories" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 3 -->
+            <div class="swiper-slide slide" style="background: url('https://t3.ftcdn.net/jpg/06/14/08/90/360_F_614089075_9zP2Ybcr5fwsnHCzGsPNLLkpThUru9Zq.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Proteins</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Proteins" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 4 -->
+            <div class="swiper-slide slide" style="background: url('https://media.istockphoto.com/id/1471438213/photo/dairy-products-bottles-of-milk-cheese-cottage-cheese-yogurt-butter-on-meadow-of-cows.jpg?s=612x612&w=0&k=20&c=hIUSgarP7-7h1KDF4AuPzzMNCPbJ5h5ofPF30G0rGhc=') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Dairy</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Dairy" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 5 -->
+            <div class="swiper-slide slide" style="background: url('https://t4.ftcdn.net/jpg/06/27/46/27/360_F_627462785_DyaFl6hi7cAmpmB4obBFewgFrM6A488N.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Bakery</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Bakery" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 6 -->
+            <div class="swiper-slide slide" style="background: url('https://media.istockphoto.com/id/1227210244/photo/flat-lay-view-at-kitchen-table-full-with-non-perishable-foods-spase-for-text.jpg?s=612x612&w=0&k=20&c=yoKYTbSTaHdBtRjgOUsDYBSB_0B10QxrR6lKH_36Hps=') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Fresh <span>Pantry</span> Products</h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Pantry" class="btn">Shop Now</a>
+                </div>
+            </div>
+            <!-- Slide 7 -->
+            <div class="swiper-slide slide" style="background: url('https://as1.ftcdn.net/jpg/03/68/66/94/1000_F_368669476_Cl7gGRuBWRYnPLwwY8pBgmeH1lGvpQ1r.jpg') no-repeat center/cover;">
+                <div class="content">
+                    <h3>Tasty <span>Snacks</span></h3>
+                    <p>Save big on your favorite grocery items this week!</p>
+                    <a href="${pageContext.request.contextPath}/CartServlet?category=Snacks" class="btn">Shop Now</a>
+                </div>
+            </div>
+        </div>
+        <!-- Pagination -->
+        <div class="swiper-pagination"></div>
+        <!-- Navigation buttons -->
+        <div class="swiper-button-next"></div>
+        <div class="swiper-button-prev"></div>
     </div>
 </section>
 
+<%--features section--%>
 <section class="features" id="features">
     <h1 class="heading">Our <span>Features</span></h1>
     <div class="box-container">
         <div class="box">
             <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwMUypuoJ7jxCE6Ltc7o0v9mHbWFLyHj55VA&s">
             <h3>Fresh And Organic</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Enjoy nutrient-rich, organic produce sourced from local farmers for a healthier, sustainable lifestyle.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/freshAndOrganic.jsp" class="btn">Read More</a>
         </div>
         <div class="box">
             <img src="https://png.pngtree.com/png-clipart/20230211/original/pngtree-free-delivery-truck-icon-png-image_8951758.png">
             <h3>Free Delivery</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Get your groceries delivered to your door for free on orders above a minimum amount.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/freeDelivery.jsp" class="btn">Read More</a>
         </div>
         <div class="box">
             <img src="https://img.freepik.com/free-vector/hands-holding-credit-card-mobile-phone-with-banking-app-person-paying-with-bank-card-transferring-money-shopping-online-flat-vector-illustration-payment-finance-concept_74855-24760.jpg">
             <h3>Easy Payment</h3>
-            <p>"Savor the crisp, nutrient-rich taste of our fresh, organic vegetables, grown naturally for your health and the planet."</p>
-            <a href="#" class="btn">Read More</a>
+            <p>Checkout effortlessly with secure, flexible payment options tailored for your convenience.</p>
+            <a href="${pageContext.request.contextPath}/ourFeatures/easyPayment.jsp" class="btn">Read More</a>
         </div>
     </div>
 </section>
 
+<%--deals section--%>
 <section class="Deals" id="Deals">
     <h1 class="heading">New <span>Deals</span></h1>
     <div class="swiper product-slider">
         <div class="swiper-wrapper">
+            <%
+                // Retrieve the dealProducts list set by DealServlet
+                List<GroceryItem> dealProducts = (List<GroceryItem>) request.getAttribute("dealProducts");
+                if (dealProducts != null && !dealProducts.isEmpty()) {
+                    for (GroceryItem item : dealProducts) {
+            %>
             <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-1.png">
-                <h1>Fresh Orange</h1>
-                <div class="price">$4.99/- - $8.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
+                <a href="${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>">
+                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>">
+                    <h1><%= item.getProductName() %></h1>
+                    <div class="price">RS.<%= String.format("%.2f", item.getProductPrice()) %>/-</div>
+                </a>
             </div>
+            <%
+                }
+            } else {
+            %>
             <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-2.png">
-                <h1>Fresh Onion</h1>
-                <div class="price">$2.99/- - $5.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-3.png">
-                <h1>Fresh Meat</h1>
-                <div class="price">$9.99/- - $14.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-4.png">
-                <h1>Fresh Cabbage</h1>
-                <div class="price">$3.99/- - $6.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-5.png">
-                <h1>Fresh Potato</h1>
-                <div class="price">$2.99/- - $5.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-6.png">
-                <h1>Fresh Avocado</h1>
-                <div class="price">$3.99/- - $4.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-7.png">
-                <h1>Fresh Carrot</h1>
-                <div class="price">$3.99/- - $6.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
-            <div class="swiper-slide box">
-                <img src="./indexCJI/Images/product-8.png">
-                <h1>Fresh Lemon</h1>
-                <div class="price">$0.99/- - $2.99/-</div>
-                <div class="starts">
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star"></i>
-                    <i class="fa-solid fa-star-half-stroke"></i>
-                </div>
-            </div>
+                <h1>No Deals Available</h1>
+            </div>
+            <%
+                }
+            %>
         </div>
         <div class="swiper-pagination"></div>
     </div>
 </section>
 
+<%--category section--%>
 <section class="categories" id="categories">
     <h1 class="heading">Product <span>Category</span></h1>
     <div class="box-container">
@@ -231,7 +224,7 @@
 <section class="home" id="home">
     <div class="content">
         <h3>Fresh and <span>Organic</span> Product For You</h3>
-        <p>"Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle."</p>
+        <p>Enjoy fresh, organic produce straight from local farms naturally grown, nutrient-rich, and delivered to your door for a healthy, sustainable lifestyle.</p>
         <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Shop Now</a>
     </div>
 </section>
@@ -240,7 +233,7 @@
     <div class="box-container">
         <div class="box">
             <h3><i class="fa-solid fa-basket-shopping"></i> Grocery</h3>
-            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque pretium lacus porttitor placerat malesuada.</p>
+            <p>Your one-stop shop for fresh, affordable, organic groceries delivered fast.</p>
             <div class="share">
                 <a href="#" class="fa-brands fa-facebook-f"></a>
                 <a href="#" class="fa-brands fa-x-twitter"></a>
@@ -257,10 +250,10 @@
         </div>
         <div class="box">
             <h3>Quick Links</h3>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Home</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Features</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Deals</a>
-            <a href="#" class="links"><i class="fa-solid fa-arrow-right"></i> Categories</a>
+            <a href="#Banner" class="links"><i class="fa-solid fa-arrow-right"></i> Home</a>
+            <a href="#features" class="links"><i class="fa-solid fa-arrow-right"></i> Features</a>
+            <a href="#Deals" class="links"><i class="fa-solid fa-arrow-right"></i> Deals</a>
+            <a href="#categories" class="links"><i class="fa-solid fa-arrow-right"></i> Categories</a>
         </div>
         <div class="box">
             <h3>News Letter</h3>
Index: target/OnlineGroceryOrderSystem/data/items.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1,Produce,Apple,200.00,https://st.depositphotos.com/1002351/1943/i/950/depositphotos_19439353-stock-photo-red-apple.jpg,10,Fresh and crisp apples perfect for snacking or baking\n2,Produce,Banana,450.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Banana-Single.jpg/2324px-Banana-Single.jpg,0,Sweet and ripe bananas great for a quick energy boost\n27,Produce,Orange,70.00,https://media.istockphoto.com/id/1194662606/photo/orange-isolated-on-white-background-clipping-path-full-depth-of-field.jpg?s=612x612&w=0&k=20&c=rhITc7KJiHKvRe_aVnC_3Tjae4B67MrvAcH6HpxC8xM=,0,Sweet and tasty fucker\n28,Produce,Water Mellon,250.00,https://img.goodfon.com/original/5000x3125/c/3b/arbuz-lakomstvo-iagoda-belyi-fon.jpg,0,Tasty mellon\n3,Dairy,Milk,2.00,https://i.pinimg.com/736x/9b/29/22/9b2922288ec6e3b7522bfbee422b3593.jpg,5,Creamy and fresh milk sourced from local farms\n4,Proteins,Chicken,5.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/chicken-image.jpg,0,Lean chicken breast perfect for grilling\n5,Proteins,Salmon,8.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Salmon.jpg/2324px-Salmon.jpg,0,Fresh salmon rich in omega-3\n6,Proteins,Tofu,3.00,https://i.pinimg.com/736x/9b/29/22/tofu-image.jpg,0,Organic tofu great for vegetarian dishes\n7,Proteins,Beef,6.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/beef-image.jpg,0,Grass-fed beef for a hearty meal\n8,Proteins,Pork,4.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pork.jpg/2324px-Pork.jpg,0,Tender pork ideal for roasting\n9,Dairy,Cheese,3.50,https://i.pinimg.com/736x/9b/29/22/cheese-image.jpg,0,Cheddar cheese aged to perfection\n10,Dairy,Yogurt,1.50,https://c4.wallpaperflare.com/wallpaper/471/516/832/yogurt-image.jpg,0,Creamy yogurt with live cultures\n11,Dairy,Butter,2.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Butter.jpg/2324px-Butter.jpg,0,Unsalted butter for baking\n12,Dairy,Cream,2.00,https://i.pinimg.com/736x/9b/29/22/cream-image.jpg,0,Heavy cream for desserts\n13,Dairy,Eggs,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/eggs-image.jpg,0,Free-range eggs\n14,Bakery,Bread,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bread.jpg/2324px-Bread.jpg,0,Freshly baked sourdough bread\n15,Bakery,Croissant,1.00,https://i.pinimg.com/736x/9b/29/22/croissant-image.jpg,0,Buttery and flaky croissants\n16,Bakery,Muffin,1.20,https://c4.wallpaperflare.com/wallpaper/471/516/832/muffin-image.jpg,0,Blueberry muffins fresh from the oven\n17,Bakery,Bagel,1.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bagel.jpg/2324px-Bagel.jpg,0,Chewy bagels perfect for breakfast\n18,Bakery,Cake,5.00,https://i.pinimg.com/736x/9b/29/22/cake-image.jpg,0,Chocolate cake for celebrations\n19,Pantry,Rice,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/rice-image.jpg,0,Long-grain white rice\n20,Pantry,Pasta,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pasta.jpg/2324px-Pasta.jpg,0,Italian spaghetti for classic dishes\n21,Pantry,Olive Oil,4.00,https://i.pinimg.com/736x/9b/29/22/olive-oil-image.jpg,0,Extra virgin olive oil\n22,Pantry,Flour,1.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/flour-image.jpg,0,All-purpose flour for baking\n23,Snacks,Chips,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Chips.jpg/2324px-Chips.jpg,0,Crispy potato chips\n24,Snacks,Nuts,3.00,https://i.pinimg.com/736x/9b/29/22/nuts-image.jpg,0,Mixed nuts for a healthy snack\n25,Snacks,Cookies,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/cookies-image.jpg,0,Chocolate chip cookies\n26,Snacks,Crackers,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Crackers.jpg/2324px-Crackers.jpg,0,Whole-grain crackers\n
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/data/items.txt b/target/OnlineGroceryOrderSystem/data/items.txt
--- a/target/OnlineGroceryOrderSystem/data/items.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/data/items.txt	(date 1746805159010)
@@ -1,28 +1,50 @@
-1,Produce,Apple,200.00,https://st.depositphotos.com/1002351/1943/i/950/depositphotos_19439353-stock-photo-red-apple.jpg,10,Fresh and crisp apples perfect for snacking or baking
-2,Produce,Banana,450.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Banana-Single.jpg/2324px-Banana-Single.jpg,0,Sweet and ripe bananas great for a quick energy boost
-27,Produce,Orange,70.00,https://media.istockphoto.com/id/1194662606/photo/orange-isolated-on-white-background-clipping-path-full-depth-of-field.jpg?s=612x612&w=0&k=20&c=rhITc7KJiHKvRe_aVnC_3Tjae4B67MrvAcH6HpxC8xM=,0,Sweet and tasty fucker
-28,Produce,Water Mellon,250.00,https://img.goodfon.com/original/5000x3125/c/3b/arbuz-lakomstvo-iagoda-belyi-fon.jpg,0,Tasty mellon
-3,Dairy,Milk,2.00,https://i.pinimg.com/736x/9b/29/22/9b2922288ec6e3b7522bfbee422b3593.jpg,5,Creamy and fresh milk sourced from local farms
-4,Proteins,Chicken,5.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/chicken-image.jpg,0,Lean chicken breast perfect for grilling
-5,Proteins,Salmon,8.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Salmon.jpg/2324px-Salmon.jpg,0,Fresh salmon rich in omega-3
-6,Proteins,Tofu,3.00,https://i.pinimg.com/736x/9b/29/22/tofu-image.jpg,0,Organic tofu great for vegetarian dishes
-7,Proteins,Beef,6.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/beef-image.jpg,0,Grass-fed beef for a hearty meal
-8,Proteins,Pork,4.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pork.jpg/2324px-Pork.jpg,0,Tender pork ideal for roasting
-9,Dairy,Cheese,3.50,https://i.pinimg.com/736x/9b/29/22/cheese-image.jpg,0,Cheddar cheese aged to perfection
-10,Dairy,Yogurt,1.50,https://c4.wallpaperflare.com/wallpaper/471/516/832/yogurt-image.jpg,0,Creamy yogurt with live cultures
-11,Dairy,Butter,2.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Butter.jpg/2324px-Butter.jpg,0,Unsalted butter for baking
-12,Dairy,Cream,2.00,https://i.pinimg.com/736x/9b/29/22/cream-image.jpg,0,Heavy cream for desserts
-13,Dairy,Eggs,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/eggs-image.jpg,0,Free-range eggs
-14,Bakery,Bread,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bread.jpg/2324px-Bread.jpg,0,Freshly baked sourdough bread
-15,Bakery,Croissant,1.00,https://i.pinimg.com/736x/9b/29/22/croissant-image.jpg,0,Buttery and flaky croissants
-16,Bakery,Muffin,1.20,https://c4.wallpaperflare.com/wallpaper/471/516/832/muffin-image.jpg,0,Blueberry muffins fresh from the oven
-17,Bakery,Bagel,1.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bagel.jpg/2324px-Bagel.jpg,0,Chewy bagels perfect for breakfast
-18,Bakery,Cake,5.00,https://i.pinimg.com/736x/9b/29/22/cake-image.jpg,0,Chocolate cake for celebrations
-19,Pantry,Rice,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/rice-image.jpg,0,Long-grain white rice
-20,Pantry,Pasta,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pasta.jpg/2324px-Pasta.jpg,0,Italian spaghetti for classic dishes
-21,Pantry,Olive Oil,4.00,https://i.pinimg.com/736x/9b/29/22/olive-oil-image.jpg,0,Extra virgin olive oil
-22,Pantry,Flour,1.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/flour-image.jpg,0,All-purpose flour for baking
-23,Snacks,Chips,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Chips.jpg/2324px-Chips.jpg,0,Crispy potato chips
-24,Snacks,Nuts,3.00,https://i.pinimg.com/736x/9b/29/22/nuts-image.jpg,0,Mixed nuts for a healthy snack
-25,Snacks,Cookies,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/cookies-image.jpg,0,Chocolate chip cookies
-26,Snacks,Crackers,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Crackers.jpg/2324px-Crackers.jpg,0,Whole-grain crackers
+1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a
+2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
+3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
+4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
+6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
+7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
+8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
+9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g
+10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g
+11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g
+12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g
+13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g
+14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g
+15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g
+16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
+17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
+18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
+20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
+21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
+22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
+23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
+24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
+25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
+28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
+29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
+30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg
+31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg
+32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g
+33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg
+34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg
+35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg
+36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg
+37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg
+38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg
+39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg
+40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg
+42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg
+43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g
+44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g
+45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g
+46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs
+47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs
+48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g
+41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.
+49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake
+50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg
Index: target/OnlineGroceryOrderSystem/js/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var swiper = new Swiper(\".product-slider\", {\n    loop: true,\n    spaceBetween: 20,\n    autoplay: {\n        delay: 3500,\n        disableOnInteraction: false,\n    },\n    pagination: {\n        el: \".swiper-pagination\",\n    },\n    breakpoints: {\n        0: {\n            slidesPerView: 1,\n        },\n        768: {\n            slidesPerView: 2,\n        },\n        1020: {\n            slidesPerView: 3,\n        },\n    },\n});
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/js/index.js b/target/OnlineGroceryOrderSystem/js/index.js
--- a/target/OnlineGroceryOrderSystem/js/index.js	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/js/index.js	(date 1746805159011)
@@ -2,12 +2,14 @@
     loop: true,
     spaceBetween: 20,
     autoplay: {
-        delay: 3500,
+        delay: 2500,
         disableOnInteraction: false,
     },
     pagination: {
         el: ".swiper-pagination",
+        clickable: true,
     },
+
     breakpoints: {
         0: {
             slidesPerView: 1,
@@ -19,4 +21,26 @@
             slidesPerView: 3,
         },
     },
+});
+
+// Initialize Swiper for the home section
+const homeSwiper = new Swiper('.home-slider', {
+    loop: true,
+    autoplay: {
+        delay: 3500,
+        disableOnInteraction: false,
+    },
+    pagination: {
+        el: '.swiper-pagination',
+        clickable: true,
+    },
+    navigation: {
+        nextEl: '.swiper-button-next',
+        prevEl: '.swiper-button-prev',
+    },
+    speed: 800, // Smooth transition speed
+    effect: 'fade', // Add a fade effect for smoother transitions
+    fadeEffect: {
+        crossFade: true,
+    },
 });
\ No newline at end of file
Index: src/main/java/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\npublic class User {\n    private String userNumber;\n    private String fullName;\n    private String email;\n    private String phoneNumber;\n    private String address;\n    private String password;\n\n    public User(String userNumber, String fullName, String email, String phoneNumber, String address, String password) {\n        this.userNumber = userNumber;\n        this.fullName = fullName;\n        this.email = email;\n        this.phoneNumber = phoneNumber;\n        this.address = address;\n        this.password = password;\n    }\n\n    // Getters and Setters\n    public String getUserNumber() { return userNumber; }\n    public void setUserNumber(String userNumber) { this.userNumber = userNumber; }\n    public String getFullName() { return fullName; }\n    public void setFullName(String fullName) { this.fullName = fullName; }\n    public String getEmail() { return email; }\n    public void setEmail(String email) { this.email = email; }\n    public String getPhoneNumber() { return phoneNumber; }\n    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }\n    public String getAddress() { return address; }\n    public void setAddress(String address) { this.address = address; }\n    public String getPassword() { return password; }\n    public void setPassword(String password) { this.password = password; }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"userNumber='\" + userNumber + '\\'' +\n                \", fullName='\" + fullName + '\\'' +\n                \", email='\" + email + '\\'' +\n                \", phoneNumber='\" + phoneNumber + '\\'' +\n                \", address='\" + address + '\\'' +\n                \", password='\" + password + '\\'' +\n                '}';\n    }\n}
===================================================================
diff --git a/src/main/java/model/User.java b/src/main/java/model/User.java
--- a/src/main/java/model/User.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/model/User.java	(date 1742452587000)
@@ -1,45 +1,84 @@
 package model;
 
 public class User {
+    private String username;
+    private String password;
     private String userNumber;
     private String fullName;
     private String email;
     private String phoneNumber;
     private String address;
-    private String password;
 
-    public User(String userNumber, String fullName, String email, String phoneNumber, String address, String password) {
+    public User(String username, String password, String userNumber, String fullName, String email, String phoneNumber, String address) {
+        this.username = username;
+        this.password = password;
         this.userNumber = userNumber;
         this.fullName = fullName;
         this.email = email;
         this.phoneNumber = phoneNumber;
         this.address = address;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
         this.password = password;
     }
 
-    // Getters and Setters
-    public String getUserNumber() { return userNumber; }
-    public void setUserNumber(String userNumber) { this.userNumber = userNumber; }
-    public String getFullName() { return fullName; }
-    public void setFullName(String fullName) { this.fullName = fullName; }
-    public String getEmail() { return email; }
-    public void setEmail(String email) { this.email = email; }
-    public String getPhoneNumber() { return phoneNumber; }
-    public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; }
-    public String getAddress() { return address; }
-    public void setAddress(String address) { this.address = address; }
-    public String getPassword() { return password; }
-    public void setPassword(String password) { this.password = password; }
+    public String getUserNumber() {
+        return userNumber;
+    }
+
+    public void setUserNumber(String userNumber) {
+        this.userNumber = userNumber;
+    }
+
+    public String getFullName() {
+        return fullName;
+    }
+
+    public void setFullName(String fullName) {
+        this.fullName = fullName;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public String getPhoneNumber() {
+        return phoneNumber;
+    }
+
+    public void setPhoneNumber(String phoneNumber) {
+        this.phoneNumber = phoneNumber;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
 
     @Override
     public String toString() {
-        return "User{" +
-                "userNumber='" + userNumber + '\'' +
-                ", fullName='" + fullName + '\'' +
-                ", email='" + email + '\'' +
-                ", phoneNumber='" + phoneNumber + '\'' +
-                ", address='" + address + '\'' +
-                ", password='" + password + '\'' +
-                '}';
+        return "username=" + username + ",password=" + password + ",userNumber=" + userNumber +
+                ",fullName=" + fullName + ",email=" + email + ",phoneNumber=" + phoneNumber +
+                ",address=" + address;
     }
 }
\ No newline at end of file
Index: src/main/java/servlet/OrderServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport model.FileUtil;\nimport model.GroceryItem;\n\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.ArrayList;\nimport java.util.Random;\n\npublic class OrderServlet extends HttpServlet {\n    private static final String ITEMS_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt\";\n    private static final String CART_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt\";\n    private static final String ORDERS_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt\";\n\n    @Override\n    public void init() throws ServletException {\n        File ordersDir = new File(\"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data\");\n        if (!ordersDir.exists()) {\n            ordersDir.mkdirs();\n            System.out.println(\"Created directory: \" + ordersDir.getAbsolutePath());\n        }\n        System.out.println(\"ITEMS_FILE path: \" + ITEMS_FILE);\n        System.out.println(\"CART_FILE path: \" + CART_FILE);\n        System.out.println(\"ORDERS_FILE path: \" + ORDERS_FILE);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        ArrayList<GroceryItem> cart;\n        synchronized (this) {\n            cart = FileUtil.readItems(CART_FILE);\n            if (cart == null || cart.isEmpty()) {\n                System.out.println(\"Cart is empty or null in \" + CART_FILE);\n                response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Cart is empty\");\n                return;\n            }\n            System.out.println(\"Loaded cart from \" + CART_FILE + \": \" + cart);\n        }\n\n        // Declare variables at method scope\n        double totalPrice;\n        String orderNumber;\n        String deliveryDate;\n\n        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);\n\n        synchronized (this) {\n            // Only check if items exist, no stock validation since CartServlet reserved them\n            for (GroceryItem cartItem : cart) {\n                GroceryItem stockItem = items.stream()\n                        .filter(item -> item.getProductID() == cartItem.getProductID())\n                        .findFirst()\n                        .orElse(null);\n                if (stockItem == null) {\n                    response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Item ID \" + cartItem.getProductID() + \" not found in inventory\");\n                    return;\n                }\n                // No stock check here; stock was already deducted by CartServlet\n            }\n\n            totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n\n            String fullName = request.getParameter(\"fullName\");\n            String phoneNumber = request.getParameter(\"phoneNumber\");\n            String address = request.getParameter(\"address\");\n            String deliveryMethod = request.getParameter(\"deliveryMethod\");\n            String paymentMethod = request.getParameter(\"paymentMethod\");\n\n            // Set deliveryDate based on deliveryMethod\n            if (\"same-day\".equals(deliveryMethod)) {\n                deliveryDate = LocalDate.now().format(DateTimeFormatter.ISO_LOCAL_DATE); // e.g., \"2025-03-15\"\n            } else {\n                deliveryDate = request.getParameter(\"deliveryDate\"); // For scheduled or store pickup\n            }\n\n            if (fullName == null || phoneNumber == null || address == null ||\n                    deliveryMethod == null || paymentMethod == null ||\n                    ((\"scheduled\".equals(deliveryMethod) || \"store pickup\".equals(deliveryMethod)) && (deliveryDate == null || deliveryDate.isEmpty()))) {\n                response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Missing required fields\");\n                return;\n            }\n\n            do {\n                orderNumber = generateOrderNumber();\n            } while (!FileUtil.isOrderNumberUnique(orderNumber, ORDERS_FILE));\n\n            String userNumber = \"US111111111111\";\n            String confirmationDate = LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\n            String paymentStatus = \"online card\".equals(paymentMethod) ? \"Paid\" : \"Pending\";\n            String deliveryStatus = \"Pending\";\n            String orderStatus = \"active\"; // New field for order status\n\n            try (BufferedWriter writer = new BufferedWriter(new FileWriter(ORDERS_FILE, true))) {\n                writer.write(\"--- Order Start: \" + orderNumber + \" ---\\n\");\n                writer.write(\"orderNumber=\" + orderNumber + \"\\n\");\n                writer.write(\"userNumber=\" + userNumber + \"\\n\");\n                writer.write(\"name=\" + (fullName != null ? fullName : \"\") + \"\\n\");\n                writer.write(\"phoneNum=\" + (phoneNumber != null ? phoneNumber : \"\") + \"\\n\");\n                writer.write(\"address=\" + (address != null ? address : \"\") + \"\\n\");\n                writer.write(\"deliveryMethod=\" + (deliveryMethod != null ? deliveryMethod : \"\") + \"\\n\");\n                writer.write(\"paymentMethod=\" + (paymentMethod != null ? paymentMethod : \"\") + \"\\n\");\n                writer.write(\"deliveryDate=\" + (deliveryDate != null ? deliveryDate : \"\") + \"\\n\");\n                writer.write(\"confirmationDate=\" + confirmationDate + \"\\n\");\n                writer.write(\"paymentStatus=\" + paymentStatus + \"\\n\");\n                writer.write(\"deliveryStatus=\" + deliveryStatus + \"\\n\");\n                writer.write(\"orderStatus=\" + orderStatus + \"\\n\"); // Add orderStatus\n                writer.write(\"[products]\\n\");\n                for (GroceryItem item : cart) {\n                    writer.write(\"productID=\" + item.getProductID() + \", quantity=\" + item.getQuantity() + \"\\n\");\n                }\n                writer.write(\"[total]\\n\");\n                writer.write(\"totalPrice=\" + String.format(\"%.2f\", totalPrice) + \"\\n\");\n                writer.write(\"--- Order End ---\\n\");\n                writer.write(\"\\n\");\n                System.out.println(\"Appended order to \" + ORDERS_FILE);\n            } catch (IOException e) {\n                System.err.println(\"Failed to append order to \" + ORDERS_FILE + \": \" + e.getMessage());\n                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"Failed to save order: \" + e.getMessage());\n                return;\n            }\n\n            // No stock deduction here; CartServlet already handled it\n            cart.clear();\n            FileUtil.writeItems(CART_FILE, cart);\n            System.out.println(\"Cleared cart in \" + CART_FILE);\n        }\n\n        request.setAttribute(\"orderNumber\", orderNumber);\n        request.setAttribute(\"fullName\", request.getParameter(\"fullName\"));\n        request.setAttribute(\"phoneNumber\", request.getParameter(\"phoneNumber\"));\n        request.setAttribute(\"address\", request.getParameter(\"address\"));\n        request.setAttribute(\"deliveryMethod\", request.getParameter(\"deliveryMethod\"));\n        request.setAttribute(\"deliveryDate\", deliveryDate);\n        request.setAttribute(\"paymentMethod\", request.getParameter(\"paymentMethod\"));\n        request.setAttribute(\"totalPrice\", String.format(\"%.2f\", totalPrice));\n        request.setAttribute(\"confirmationDate\", LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n        request.setAttribute(\"paymentStatus\", \"online card\".equals(request.getParameter(\"paymentMethod\")) ? \"Paid\" : \"Pending\");\n        request.setAttribute(\"deliveryStatus\", \"Pending\");\n        request.setAttribute(\"orderStatus\", \"active\"); // Pass to JSP\n\n        request.getRequestDispatcher(\"/cartAndOrders/processCheckOut.jsp\").forward(request, response);\n    }\n\n    private String generateOrderNumber() {\n        Random random = new Random();\n        long number = Math.abs(random.nextLong() % 1000000000000L);\n        return \"OD\" + String.format(\"%012d\", number);\n    }\n}
===================================================================
diff --git a/src/main/java/servlet/OrderServlet.java b/src/main/java/servlet/OrderServlet.java
--- a/src/main/java/servlet/OrderServlet.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/servlet/OrderServlet.java	(date 1743395037000)
@@ -6,6 +6,7 @@
 import jakarta.servlet.http.HttpServletResponse;
 import model.FileUtil;
 import model.GroceryItem;
+import model.User;
 
 import java.io.BufferedWriter;
 import java.io.File;
@@ -21,6 +22,7 @@
     private static final String ITEMS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
     private static final String CART_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt";
     private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
+    private static final String LOGGED_IN_USER_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
 
     @Override
     public void init() throws ServletException {
@@ -32,10 +34,20 @@
         System.out.println("ITEMS_FILE path: " + ITEMS_FILE);
         System.out.println("CART_FILE path: " + CART_FILE);
         System.out.println("ORDERS_FILE path: " + ORDERS_FILE);
+        System.out.println("LOGGED_IN_USER_FILE path: " + LOGGED_IN_USER_FILE);
     }
 
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+        // Read the logged-in user from loggedInUser.txt
+        User loggedInUser = FileUtil.readLoggedInUser(LOGGED_IN_USER_FILE);
+        if (loggedInUser == null) {
+            System.out.println("No logged-in user found in " + LOGGED_IN_USER_FILE);
+            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "No logged-in user found");
+            return;
+        }
+        System.out.println("Logged-in user: " + loggedInUser);
+
         ArrayList<GroceryItem> cart;
         synchronized (this) {
             cart = FileUtil.readItems(CART_FILE);
@@ -50,7 +62,7 @@
         // Declare variables at method scope
         double totalPrice;
         String orderNumber;
-        String deliveryDate;
+        String userNumber;
 
         ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
 
@@ -65,7 +77,6 @@
                     response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Item ID " + cartItem.getProductID() + " not found in inventory");
                     return;
                 }
-                // No stock check here; stock was already deducted by CartServlet
             }
 
             totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
@@ -76,16 +87,8 @@
             String deliveryMethod = request.getParameter("deliveryMethod");
             String paymentMethod = request.getParameter("paymentMethod");
 
-            // Set deliveryDate based on deliveryMethod
-            if ("same-day".equals(deliveryMethod)) {
-                deliveryDate = LocalDate.now().format(DateTimeFormatter.ISO_LOCAL_DATE); // e.g., "2025-03-15"
-            } else {
-                deliveryDate = request.getParameter("deliveryDate"); // For scheduled or store pickup
-            }
-
             if (fullName == null || phoneNumber == null || address == null ||
-                    deliveryMethod == null || paymentMethod == null ||
-                    (("scheduled".equals(deliveryMethod) || "store pickup".equals(deliveryMethod)) && (deliveryDate == null || deliveryDate.isEmpty()))) {
+                    deliveryMethod == null || paymentMethod == null) {
                 response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Missing required fields");
                 return;
             }
@@ -94,11 +97,18 @@
                 orderNumber = generateOrderNumber();
             } while (!FileUtil.isOrderNumberUnique(orderNumber, ORDERS_FILE));
 
-            String userNumber = "US111111111111";
+            userNumber = loggedInUser.getUserNumber();
+            if (userNumber == null) {
+                System.err.println("User number is null for logged-in user: " + loggedInUser);
+                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "User number is missing for the logged-in user");
+                return;
+            }
+            System.out.println("User Number: " + userNumber);
+
             String confirmationDate = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
             String paymentStatus = "online card".equals(paymentMethod) ? "Paid" : "Pending";
             String deliveryStatus = "Pending";
-            String orderStatus = "active"; // New field for order status
+            String orderStatus = "Pending";
 
             try (BufferedWriter writer = new BufferedWriter(new FileWriter(ORDERS_FILE, true))) {
                 writer.write("--- Order Start: " + orderNumber + " ---\n");
@@ -109,11 +119,11 @@
                 writer.write("address=" + (address != null ? address : "") + "\n");
                 writer.write("deliveryMethod=" + (deliveryMethod != null ? deliveryMethod : "") + "\n");
                 writer.write("paymentMethod=" + (paymentMethod != null ? paymentMethod : "") + "\n");
-                writer.write("deliveryDate=" + (deliveryDate != null ? deliveryDate : "") + "\n");
                 writer.write("confirmationDate=" + confirmationDate + "\n");
                 writer.write("paymentStatus=" + paymentStatus + "\n");
                 writer.write("deliveryStatus=" + deliveryStatus + "\n");
-                writer.write("orderStatus=" + orderStatus + "\n"); // Add orderStatus
+                writer.write("orderStatus=" + orderStatus + "\n");
+                writer.write("deliveredDate=\n"); // Add placeholder for deliveredDate
                 writer.write("[products]\n");
                 for (GroceryItem item : cart) {
                     writer.write("productID=" + item.getProductID() + ", quantity=" + item.getQuantity() + "\n");
@@ -129,24 +139,27 @@
                 return;
             }
 
-            // No stock deduction here; CartServlet already handled it
             cart.clear();
             FileUtil.writeItems(CART_FILE, cart);
             System.out.println("Cleared cart in " + CART_FILE);
         }
 
+        // Set request attributes for processCheckOut.jsp
         request.setAttribute("orderNumber", orderNumber);
+        request.setAttribute("userNumber", userNumber);
         request.setAttribute("fullName", request.getParameter("fullName"));
         request.setAttribute("phoneNumber", request.getParameter("phoneNumber"));
         request.setAttribute("address", request.getParameter("address"));
         request.setAttribute("deliveryMethod", request.getParameter("deliveryMethod"));
-        request.setAttribute("deliveryDate", deliveryDate);
         request.setAttribute("paymentMethod", request.getParameter("paymentMethod"));
         request.setAttribute("totalPrice", String.format("%.2f", totalPrice));
         request.setAttribute("confirmationDate", LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));
         request.setAttribute("paymentStatus", "online card".equals(request.getParameter("paymentMethod")) ? "Paid" : "Pending");
         request.setAttribute("deliveryStatus", "Pending");
-        request.setAttribute("orderStatus", "active"); // Pass to JSP
+        request.setAttribute("orderStatus", "Pending");
+
+        // Debug log to confirm userNumber before forwarding
+        System.out.println("Setting userNumber in request attribute: " + userNumber);
 
         request.getRequestDispatcher("/cartAndOrders/processCheckOut.jsp").forward(request, response);
     }
Index: src/main/java/model/FileUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\npublic class FileUtil {\n    // Read GroceryItem list from a file\n    public static ArrayList<GroceryItem> readItems(String filePath) {\n        ArrayList<GroceryItem> items = new ArrayList<>();\n        File file = new File(filePath);\n        if (!file.exists()) {\n            try {\n                file.getParentFile().mkdirs();\n                if (!file.createNewFile()) {\n                    throw new IOException(\"Failed to create new file: \" + filePath);\n                }\n                System.out.println(\"Created file: \" + file.getAbsolutePath());\n            } catch (IOException e) {\n                System.err.println(\"Error creating file \" + filePath + \": \" + e.getMessage());\n                return items;\n            }\n        }\n\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                line = line.trim();\n                if (line.isEmpty()) continue; // Skip empty lines\n\n                String[] parts = line.split(\",\", 7); // Split into 7 parts max\n                if (parts.length != 7) {\n                    System.err.println(\"Invalid line in file \" + filePath + \": \" + line);\n                    continue;\n                }\n                try {\n                    int productID = Integer.parseInt(parts[0].trim());\n                    String productCategory = parts[1].trim();\n                    String productName = parts[2].trim();\n                    double productPrice = Double.parseDouble(parts[3].trim());\n                    String productImageLink = parts[4].trim();\n                    int quantity = Integer.parseInt(parts[5].trim());\n                    String description = parts[6].trim();\n\n                    GroceryItem item = new GroceryItem(productID, productCategory, productName, productPrice, productImageLink, quantity, description);\n                    items.add(item);\n                } catch (NumberFormatException e) {\n                    System.err.println(\"Invalid number format in line: \" + line + \" in file \" + filePath + \": \" + e.getMessage());\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error reading file \" + filePath + \": \" + e.getMessage());\n        }\n        System.out.println(\"Read \" + items.size() + \" items from \" + filePath);\n        return items;\n    }\n\n    // Write GroceryItem list to a file\n    public static void writeItems(String filePath, ArrayList<GroceryItem> items) throws IOException {\n        File file = new File(filePath);\n        if (!file.exists()) {\n            try {\n                file.getParentFile().mkdirs();\n                if (!file.createNewFile()) {\n                    throw new IOException(\"Failed to create new file: \" + filePath);\n                }\n                System.out.println(\"Created file: \" + file.getAbsolutePath());\n            } catch (IOException e) {\n                System.err.println(\"Error creating file \" + filePath + \": \" + e.getMessage());\n                throw e;\n            }\n        }\n\n        // Check write permissions\n        if (!file.canWrite()) {\n            throw new IOException(\"No write permission for file: \" + filePath);\n        }\n\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {\n            for (GroceryItem item : items) {\n                writer.write(String.format(\"%d,%s,%s,%.2f,%s,%d,%s\\n\",\n                        item.getProductID(),\n                        item.getProductCategory(),\n                        item.getProductName(),\n                        item.getProductPrice(),\n                        item.getProductImageLink(),\n                        item.getQuantity(),\n                        item.getDescription() != null ? item.getDescription() : \"\"));\n            }\n            writer.flush(); // Ensure data is written to the file\n            System.out.println(\"Successfully wrote \" + items.size() + \" items to \" + filePath + \" with content: \" + items);\n        } catch (IOException e) {\n            System.err.println(\"Error writing to file \" + filePath + \": \" + e.getMessage());\n            throw e; // Propagate the exception to halt execution\n        }\n    }\n\n    // Check if an order number is unique in the orders file\n    public static boolean isOrderNumberUnique(String orderNumber, String filePath) {\n        Set<String> orderNumbers = new HashSet<>();\n        File file = new File(filePath);\n        if (!file.exists()) {\n            System.out.println(\"No orders file found at \" + filePath + \"; order number \" + orderNumber + \" is unique.\");\n            return true;\n        }\n\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                if (line.startsWith(\"orderNumber=\")) {\n                    orderNumbers.add(line.split(\"=\", 2)[1].trim());\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error reading order numbers from \" + filePath + \": \" + e.getMessage());\n            return false;\n        }\n        boolean isUnique = !orderNumbers.contains(orderNumber);\n        System.out.println(\"Order number \" + orderNumber + \" is \" + (isUnique ? \"unique\" : \"not unique\") + \" in \" + filePath);\n        return isUnique;\n    }\n\n    // Write an order to a file\n    public static void writeOrder(String filePath, String orderNumber, String userNumber, String fullName,\n                                  String phoneNumber, String address, String deliveryMethod,\n                                  String paymentMethod, String deliveryDate, ArrayList<GroceryItem> cartItems,\n                                  double totalPrice) throws IOException {\n        File file = new File(filePath);\n        if (!file.exists()) {\n            file.getParentFile().mkdirs();\n            file.createNewFile();\n            System.out.println(\"Created new order file at: \" + file.getAbsolutePath());\n        }\n\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {\n            writer.write(\"orderNumber=\" + orderNumber + \"\\n\");\n            writer.write(\"userNumber=\" + userNumber + \"\\n\");\n            writer.write(\"name=\" + (fullName != null ? fullName : \"\") + \"\\n\");\n            writer.write(\"phoneNum=\" + (phoneNumber != null ? phoneNumber : \"\") + \"\\n\");\n            writer.write(\"address=\" + (address != null ? address : \"\") + \"\\n\");\n            writer.write(\"deliveryMethod=\" + (deliveryMethod != null ? deliveryMethod : \"\") + \"\\n\");\n            writer.write(\"paymentMethod=\" + (paymentMethod != null ? paymentMethod : \"\") + \"\\n\");\n            writer.write(\"deliveryDate=\" + (deliveryDate != null ? deliveryDate : \"\") + \"\\n\");\n            writer.write(\"[products]\\n\");\n            for (GroceryItem item : cartItems) {\n                writer.write(\"productID=\" + item.getProductID() + \", quantity=\" + item.getQuantity() + \"\\n\");\n            }\n            writer.write(\"[total]\\n\");\n            writer.write(\"totalPrice=\" + String.format(\"%.2f\", totalPrice) + \"\\n\");\n            System.out.println(\"Wrote order \" + orderNumber + \" to \" + filePath);\n        } catch (IOException e) {\n            System.err.println(\"Error writing order to file \" + filePath + \": \" + e.getMessage());\n            throw e;\n        }\n    }\n\n    // Read all orders from a directory of order files\n    public static List<Order> readAllOrders(String ordersDir) {\n        List<Order> orders = new ArrayList<>();\n        File dir = new File(ordersDir);\n        if (!dir.exists() || !dir.isDirectory()) {\n            System.out.println(\"Orders directory not found: \" + ordersDir);\n            return orders;\n        }\n\n        File[] orderFiles = dir.listFiles((d, name) -> name.endsWith(\".txt\"));\n        if (orderFiles == null) {\n            System.out.println(\"No order files found in: \" + ordersDir);\n            return orders;\n        }\n\n        for (File file : orderFiles) {\n            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n                Order order = new Order();\n                List<String[]> products = new ArrayList<>();\n                String line;\n                String currentSection = null;\n\n                while ((line = reader.readLine()) != null) {\n                    line = line.trim();\n                    if (line.isEmpty()) continue;\n\n                    if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n                        currentSection = line.substring(1, line.length() - 1);\n                        continue;\n                    }\n\n                    String[] parts = line.split(\"=\", 2);\n                    if (parts.length == 2) {\n                        String key = parts[0].trim();\n                        String value = parts[1].trim();\n\n                        switch (key) {\n                            case \"orderNumber\":\n                                order.setOrderNumber(value);\n                                break;\n                            case \"userNumber\":\n                                order.setUserNumber(value);\n                                break;\n                            case \"name\":\n                                order.setFullName(value);\n                                break;\n                            case \"phoneNum\":\n                                order.setPhoneNum(value);\n                                break;\n                            case \"address\":\n                                order.setAddress(value);\n                                break;\n                            case \"deliveryMethod\":\n                                order.setDeliveryMethod(value);\n                                break;\n                            case \"paymentMethod\":\n                                order.setPaymentMethod(value);\n                                break;\n                            case \"deliveryDate\":\n                                order.setDeliveryDate(value.isEmpty() ? null : value);\n                                break;\n                            case \"totalPrice\":\n                                if (\"total\".equals(currentSection)) {\n                                    order.setTotalPrice(Double.parseDouble(value));\n                                }\n                                break;\n                            default:\n                                if (\"products\".equals(currentSection) && key.startsWith(\"productID\")) {\n                                    String[] productParts = line.split(\", quantity=\");\n                                    if (productParts.length == 2) {\n                                        products.add(new String[]{productParts[0].split(\"=\")[1].trim(), productParts[1].trim()});\n                                    }\n                                }\n                                break;\n                        }\n                    }\n                }\n                order.setProducts(products);\n                orders.add(order);\n            } catch (IOException e) {\n                System.err.println(\"Error reading order file \" + file.getName() + \": \" + e.getMessage());\n            } catch (NumberFormatException e) {\n                System.err.println(\"Invalid number format in file \" + file.getName() + \": \" + e.getMessage());\n            }\n        }\n        System.out.println(\"Read \" + orders.size() + \" orders from \" + ordersDir);\n        return orders;\n    }\n\n    // Read all users from users.txt\n    public static List<User> readUsers(String filePath) {\n        List<User> users = new ArrayList<>();\n        File file = new File(filePath);\n        if (!file.exists()) {\n            try {\n                file.getParentFile().mkdirs();\n                file.createNewFile();\n                System.out.println(\"Created users file: \" + file.getAbsolutePath());\n            } catch (IOException e) {\n                System.err.println(\"Error creating users file \" + filePath + \": \" + e.getMessage());\n                return users;\n            }\n        }\n\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            String line;\n            String userNumber = null, fullName = null, email = null, phoneNumber = null, address = null, password = null;\n            while ((line = reader.readLine()) != null) {\n                line = line.trim();\n                if (line.isEmpty()) continue;\n\n                if (line.startsWith(\"--- User Start:\")) {\n                    try {\n                        userNumber = line.split(\":\")[1].trim().split(\" ---\")[0];\n                    } catch (ArrayIndexOutOfBoundsException e) {\n                        System.err.println(\"Invalid User Start line in \" + filePath + \": \" + line);\n                        continue;\n                    }\n                } else if (line.startsWith(\"userNumber=\")) {\n                    userNumber = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"fullName=\")) {\n                    fullName = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"email=\")) {\n                    email = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"phoneNumber=\")) {\n                    phoneNumber = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"address=\")) {\n                    address = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"password=\")) {\n                    password = line.split(\"=\", 2)[1].trim();\n                } else if (line.startsWith(\"--- User End ---\")) {\n                    if (userNumber != null && fullName != null && email != null && phoneNumber != null && address != null && password != null) {\n                        users.add(new User(userNumber, fullName, email, phoneNumber, address, password));\n                    } else {\n                        System.err.println(\"Incomplete user data in \" + filePath + \": userNumber=\" + userNumber + \", email=\" + email);\n                    }\n                    userNumber = fullName = email = phoneNumber = address = password = null; // Reset for next user\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error reading users file \" + filePath + \": \" + e.getMessage());\n        }\n        System.out.println(\"Read \" + users.size() + \" users from \" + filePath);\n        return users;\n    }\n\n    // Check if a user number is unique in users.txt\n    public static boolean isUserNumberUnique(String userNumber, String filePath) {\n        List<User> users = readUsers(filePath);\n        boolean isUnique = users.stream().noneMatch(user -> user.getUserNumber().equals(userNumber));\n        System.out.println(\"User number \" + userNumber + \" is \" + (isUnique ? \"unique\" : \"not unique\") + \" in \" + filePath);\n        return isUnique;\n    }\n\n    // Write logged-in user to loggedInUser.txt\n    public static void writeLoggedInUser(String filePath, User user) {\n        File file = new File(filePath);\n        if (!file.exists()) {\n            try {\n                file.getParentFile().mkdirs();\n                file.createNewFile();\n                System.out.println(\"Created loggedInUser file: \" + file.getAbsolutePath());\n            } catch (IOException e) {\n                System.err.println(\"Error creating loggedInUser file \" + filePath + \": \" + e.getMessage());\n                return;\n            }\n        }\n\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {\n            if (user != null) {\n                writer.write(\"userNumber=\" + (user.getUserNumber() != null ? user.getUserNumber() : \"\") + \"\\n\");\n                writer.write(\"fullName=\" + (user.getFullName() != null ? user.getFullName() : \"\") + \"\\n\");\n                writer.write(\"email=\" + (user.getEmail() != null ? user.getEmail() : \"\") + \"\\n\");\n                writer.write(\"phoneNumber=\" + (user.getPhoneNumber() != null ? user.getPhoneNumber() : \"\") + \"\\n\");\n                writer.write(\"address=\" + (user.getAddress() != null ? user.getAddress() : \"\") + \"\\n\");\n                System.out.println(\"Wrote logged-in user to \" + filePath + \": \" + user.getEmail());\n            } else {\n                System.err.println(\"Cannot write null user to \" + filePath);\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error writing to loggedInUser file \" + filePath + \": \" + e.getMessage());\n        }\n    }\n\n    // Read logged-in user from loggedInUser.txt\n    public static User readLoggedInUser(String filePath) {\n        File file = new File(filePath);\n        if (!file.exists()) {\n            System.out.println(\"No loggedInUser file found at \" + filePath);\n            return null;\n        }\n\n        String userNumber = null, fullName = null, email = null, phoneNumber = null, address = null;\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                line = line.trim();\n                if (line.isEmpty()) continue;\n\n                String[] parts = line.split(\"=\", 2);\n                if (parts.length == 2) {\n                    String key = parts[0].trim();\n                    String value = parts[1].trim();\n                    switch (key) {\n                        case \"userNumber\":\n                            userNumber = value.isEmpty() ? null : value;\n                            break;\n                        case \"fullName\":\n                            fullName = value.isEmpty() ? null : value;\n                            break;\n                        case \"email\":\n                            email = value.isEmpty() ? null : value;\n                            break;\n                        case \"phoneNumber\":\n                            phoneNumber = value.isEmpty() ? null : value;\n                            break;\n                        case \"address\":\n                            address = value.isEmpty() ? null : value;\n                            break;\n                    }\n                }\n            }\n        } catch (IOException e) {\n            System.err.println(\"Error reading loggedInUser file \" + filePath + \": \" + e.getMessage());\n            return null;\n        }\n\n        if (userNumber != null && fullName != null && email != null && phoneNumber != null && address != null) {\n            User user = new User(userNumber, fullName, email, phoneNumber, address, \"\");\n            System.out.println(\"Read logged-in user from \" + filePath + \": \" + user.getEmail());\n            return user;\n        }\n        System.err.println(\"Incomplete logged-in user data in \" + filePath);\n        return null;\n    }\n\n    // Clear loggedInUser.txt on logout\n    public static void clearLoggedInUser(String filePath) {\n        File file = new File(filePath);\n        if (file.exists()) {\n            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {\n                writer.write(\"\");\n                System.out.println(\"Cleared loggedInUser file: \" + filePath);\n            } catch (IOException e) {\n                System.err.println(\"Error clearing loggedInUser file \" + filePath + \": \" + e.getMessage());\n            }\n        } else {\n            System.out.println(\"loggedInUser file does not exist at \" + filePath + \"; nothing to clear.\");\n        }\n    }\n\n    // Order class for reading orders\n    public static class Order {\n        private String orderNumber;\n        private String userNumber;\n        private String fullName;\n        private String phoneNum;\n        private String address;\n        private String deliveryMethod;\n        private String paymentMethod;\n        private String deliveryDate;\n        private List<String[]> products; // [productID, quantity]\n        private double totalPrice;\n\n        public String getOrderNumber() { return orderNumber; }\n        public void setOrderNumber(String orderNumber) { this.orderNumber = orderNumber; }\n        public String getUserNumber() { return userNumber; }\n        public void setUserNumber(String userNumber) { this.userNumber = userNumber; }\n        public String getFullName() { return fullName; }\n        public void setFullName(String fullName) { this.fullName = fullName; }\n        public String getPhoneNum() { return phoneNum; }\n        public void setPhoneNum(String phoneNum) { this.phoneNum = phoneNum; }\n        public String getAddress() { return address; }\n        public void setAddress(String address) { this.address = address; }\n        public String getDeliveryMethod() { return deliveryMethod; }\n        public void setDeliveryMethod(String deliveryMethod) { this.deliveryMethod = deliveryMethod; }\n        public String getPaymentMethod() { return paymentMethod; }\n        public void setPaymentMethod(String paymentMethod) { this.paymentMethod = paymentMethod; }\n        public String getDeliveryDate() { return deliveryDate; }\n        public void setDeliveryDate(String deliveryDate) { this.deliveryDate = deliveryDate; }\n        public List<String[]> getProducts() { return products; }\n        public void setProducts(List<String[]> products) { this.products = products; }\n        public double getTotalPrice() { return totalPrice; }\n        public void setTotalPrice(double totalPrice) { this.totalPrice = totalPrice; }\n    }\n}
===================================================================
diff --git a/src/main/java/model/FileUtil.java b/src/main/java/model/FileUtil.java
--- a/src/main/java/model/FileUtil.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/model/FileUtil.java	(date 1743481469000)
@@ -1,13 +1,12 @@
 package model;
 
 import java.io.*;
-import java.util.ArrayList;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+import java.util.*;
 
 public class FileUtil {
-    // Read GroceryItem list from a file
+    // Read GroceryItem list from a file (unchanged)
     public static ArrayList<GroceryItem> readItems(String filePath) {
         ArrayList<GroceryItem> items = new ArrayList<>();
         File file = new File(filePath);
@@ -57,7 +56,7 @@
         return items;
     }
 
-    // Write GroceryItem list to a file
+    // Write GroceryItem list to a file (unchanged)
     public static void writeItems(String filePath, ArrayList<GroceryItem> items) throws IOException {
         File file = new File(filePath);
         if (!file.exists()) {
@@ -97,7 +96,7 @@
         }
     }
 
-    // Check if an order number is unique in the orders file
+    // Check if an order number is unique in the orders file (unchanged)
     public static boolean isOrderNumberUnique(String orderNumber, String filePath) {
         Set<String> orderNumbers = new HashSet<>();
         File file = new File(filePath);
@@ -122,10 +121,12 @@
         return isUnique;
     }
 
-    // Write an order to a file
+    // Write an order to a file (original method, unchanged)
     public static void writeOrder(String filePath, String orderNumber, String userNumber, String fullName,
                                   String phoneNumber, String address, String deliveryMethod,
-                                  String paymentMethod, String deliveryDate, ArrayList<GroceryItem> cartItems,
+                                  String paymentMethod, String deliveryDate, String confirmationDate,
+                                  String paymentStatus, String deliveryStatus, String orderStatus,
+                                  String deliveredDate, ArrayList<GroceryItem> cartItems,
                                   double totalPrice) throws IOException {
         File file = new File(filePath);
         if (!file.exists()) {
@@ -134,7 +135,8 @@
             System.out.println("Created new order file at: " + file.getAbsolutePath());
         }
 
-        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) {
+            writer.write("--- Order Start: " + orderNumber + " ---\n");
             writer.write("orderNumber=" + orderNumber + "\n");
             writer.write("userNumber=" + userNumber + "\n");
             writer.write("name=" + (fullName != null ? fullName : "") + "\n");
@@ -143,12 +145,19 @@
             writer.write("deliveryMethod=" + (deliveryMethod != null ? deliveryMethod : "") + "\n");
             writer.write("paymentMethod=" + (paymentMethod != null ? paymentMethod : "") + "\n");
             writer.write("deliveryDate=" + (deliveryDate != null ? deliveryDate : "") + "\n");
+            writer.write("confirmationDate=" + (confirmationDate != null ? confirmationDate : "") + "\n");
+            writer.write("paymentStatus=" + (paymentStatus != null ? paymentStatus : "") + "\n");
+            writer.write("deliveryStatus=" + (deliveryStatus != null ? deliveryStatus : "") + "\n");
+            writer.write("orderStatus=" + (orderStatus != null ? orderStatus : "") + "\n");
+            writer.write("deliveredDate=" + (deliveredDate != null ? deliveredDate : "") + "\n");
             writer.write("[products]\n");
             for (GroceryItem item : cartItems) {
                 writer.write("productID=" + item.getProductID() + ", quantity=" + item.getQuantity() + "\n");
             }
             writer.write("[total]\n");
             writer.write("totalPrice=" + String.format("%.2f", totalPrice) + "\n");
+            writer.write("--- Order End ---\n");
+            writer.write("\n");
             System.out.println("Wrote order " + orderNumber + " to " + filePath);
         } catch (IOException e) {
             System.err.println("Error writing order to file " + filePath + ": " + e.getMessage());
@@ -156,37 +165,78 @@
         }
     }
 
-    // Read all orders from a directory of order files
-    public static List<Order> readAllOrders(String ordersDir) {
+    // Overloaded method to write an Order object directly to a file (new method)
+    public static void writeOrder(String filePath, Order order) throws IOException {
+        File file = new File(filePath);
+        if (!file.exists()) {
+            file.getParentFile().mkdirs();
+            file.createNewFile();
+            System.out.println("Created new order file at: " + file.getAbsolutePath());
+        }
+
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) {
+            writer.write("--- Order Start: " + order.getOrderNumber() + " ---\n");
+            writer.write("orderNumber=" + order.getOrderNumber() + "\n");
+            writer.write("userNumber=" + order.getUserNumber() + "\n");
+            writer.write("name=" + (order.getFullName() != null ? order.getFullName() : "") + "\n");
+            writer.write("phoneNum=" + (order.getPhoneNum() != null ? order.getPhoneNum() : "") + "\n");
+            writer.write("address=" + (order.getAddress() != null ? order.getAddress() : "") + "\n");
+            writer.write("deliveryMethod=" + (order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "") + "\n");
+            writer.write("paymentMethod=" + (order.getPaymentMethod() != null ? order.getPaymentMethod() : "") + "\n");
+            writer.write("deliveryDate=" + (order.getDeliveryDate() != null ? order.getDeliveryDate() : "") + "\n");
+            writer.write("confirmationDate=" + (order.getConfirmationDate() != null ? order.getConfirmationDate() : "") + "\n");
+            writer.write("paymentStatus=" + (order.getPaymentStatus() != null ? order.getPaymentStatus() : "") + "\n");
+            writer.write("deliveryStatus=" + (order.getDeliveryStatus() != null ? order.getDeliveryStatus() : "") + "\n");
+            writer.write("orderStatus=" + (order.getOrderStatus() != null ? order.getOrderStatus() : "") + "\n");
+            writer.write("deliveredDate=" + (order.getDeliveredDate() != null ? order.getDeliveredDate() : "") + "\n");
+            writer.write("[products]\n");
+            for (String[] product : order.getProducts()) {
+                writer.write("productID=" + product[0] + ", quantity=" + product[1] + "\n");
+            }
+            writer.write("[total]\n");
+            writer.write("totalPrice=" + String.format("%.2f", order.getTotalPrice()) + "\n");
+            writer.write("--- Order End ---\n");
+            writer.write("\n");
+            System.out.println("Wrote order " + order.getOrderNumber() + " to " + filePath);
+        } catch (IOException e) {
+            System.err.println("Error writing order to file " + filePath + ": " + e.getMessage());
+            throw e;
+        }
+    }
+
+    // Read all orders from a file (unchanged)
+    public static List<Order> readAllOrders(String ordersFilePath) {
         List<Order> orders = new ArrayList<>();
-        File dir = new File(ordersDir);
-        if (!dir.exists() || !dir.isDirectory()) {
-            System.out.println("Orders directory not found: " + ordersDir);
-            return orders;
-        }
-
-        File[] orderFiles = dir.listFiles((d, name) -> name.endsWith(".txt"));
-        if (orderFiles == null) {
-            System.out.println("No order files found in: " + ordersDir);
+        File file = new File(ordersFilePath);
+        if (!file.exists()) {
+            System.out.println("Orders file not found: " + ordersFilePath);
             return orders;
         }
 
-        for (File file : orderFiles) {
-            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
-                Order order = new Order();
-                List<String[]> products = new ArrayList<>();
-                String line;
-                String currentSection = null;
+        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
+            String line;
+            Order order = null;
+            List<String[]> products = null;
+            String currentSection = null;
 
-                while ((line = reader.readLine()) != null) {
-                    line = line.trim();
-                    if (line.isEmpty()) continue;
+            while ((line = reader.readLine()) != null) {
+                line = line.trim();
+                if (line.isEmpty()) continue;
 
-                    if (line.startsWith("[") && line.endsWith("]")) {
-                        currentSection = line.substring(1, line.length() - 1);
-                        continue;
-                    }
-
+                if (line.startsWith("--- Order Start:")) {
+                    order = new Order();
+                    products = new ArrayList<>();
+                } else if (line.startsWith("--- Order End ---")) {
+                    if (order != null) {
+                        order.setProducts(products);
+                        orders.add(order);
+                    }
+                    order = null;
+                    products = null;
+                    currentSection = null;
+                } else if (line.startsWith("[") && line.endsWith("]")) {
+                    currentSection = line.substring(1, line.length() - 1);
+                } else if (order != null) {
                     String[] parts = line.split("=", 2);
                     if (parts.length == 2) {
                         String key = parts[0].trim();
@@ -217,13 +267,28 @@
                             case "deliveryDate":
                                 order.setDeliveryDate(value.isEmpty() ? null : value);
                                 break;
+                            case "confirmationDate":
+                                order.setConfirmationDate(value);
+                                break;
+                            case "paymentStatus":
+                                order.setPaymentStatus(value);
+                                break;
+                            case "deliveryStatus":
+                                order.setDeliveryStatus(value);
+                                break;
+                            case "orderStatus":
+                                order.setOrderStatus(value);
+                                break;
+                            case "deliveredDate":
+                                order.setDeliveredDate(value);
+                                break;
                             case "totalPrice":
                                 if ("total".equals(currentSection)) {
                                     order.setTotalPrice(Double.parseDouble(value));
                                 }
                                 break;
-                            default:
-                                if ("products".equals(currentSection) && key.startsWith("productID")) {
+                            case "productID":
+                                if ("products".equals(currentSection)) {
                                     String[] productParts = line.split(", quantity=");
                                     if (productParts.length == 2) {
                                         products.add(new String[]{productParts[0].split("=")[1].trim(), productParts[1].trim()});
@@ -233,19 +298,244 @@
                         }
                     }
                 }
-                order.setProducts(products);
-                orders.add(order);
-            } catch (IOException e) {
-                System.err.println("Error reading order file " + file.getName() + ": " + e.getMessage());
-            } catch (NumberFormatException e) {
-                System.err.println("Invalid number format in file " + file.getName() + ": " + e.getMessage());
-            }
+            }
+        } catch (IOException e) {
+            System.err.println("Error reading orders file " + ordersFilePath + ": " + e.getMessage());
+        } catch (NumberFormatException e) {
+            System.err.println("Invalid number format in file " + ordersFilePath + ": " + e.getMessage());
+        }
+        System.out.println("Read " + orders.size() + " orders from " + ordersFilePath);
+        return orders;
+    }
+
+    // Read all delivered orders from deliveredOrders.txt (unchanged)
+    public static List<Order> readAllDeliveredOrders(String deliveredOrdersFilePath) {
+        List<Order> orders = new ArrayList<>();
+        File file = new File(deliveredOrdersFilePath);
+        if (!file.exists()) {
+            System.out.println("Delivered orders file not found: " + deliveredOrdersFilePath);
+            return orders;
+        }
+
+        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
+            String line;
+            Order order = null;
+            List<String[]> products = null;
+            String currentSection = null;
+
+            while ((line = reader.readLine()) != null) {
+                line = line.trim();
+                if (line.isEmpty()) continue;
+
+                if (line.startsWith("--- Order Start:")) {
+                    order = new Order();
+                    products = new ArrayList<>();
+                } else if (line.startsWith("--- Order End ---")) {
+                    if (order != null) {
+                        order.setProducts(products);
+                        orders.add(order);
+                    }
+                    order = null;
+                    products = null;
+                    currentSection = null;
+                } else if (line.startsWith("[") && line.endsWith("]")) {
+                    currentSection = line.substring(1, line.length() - 1);
+                } else if (order != null) {
+                    String[] parts = line.split("=", 2);
+                    if (parts.length == 2) {
+                        String key = parts[0].trim();
+                        String value = parts[1].trim();
+
+                        switch (key) {
+                            case "orderNumber":
+                                order.setOrderNumber(value);
+                                break;
+                            case "userNumber":
+                                order.setUserNumber(value);
+                                break;
+                            case "name":
+                                order.setFullName(value);
+                                break;
+                            case "phoneNum":
+                                order.setPhoneNum(value);
+                                break;
+                            case "address":
+                                order.setAddress(value);
+                                break;
+                            case "deliveryMethod":
+                                order.setDeliveryMethod(value);
+                                break;
+                            case "paymentMethod":
+                                order.setPaymentMethod(value);
+                                break;
+                            case "deliveryDate":
+                                order.setDeliveryDate(value.isEmpty() ? null : value);
+                                break;
+                            case "confirmationDate":
+                                order.setConfirmationDate(value);
+                                break;
+                            case "paymentStatus":
+                                order.setPaymentStatus(value);
+                                break;
+                            case "deliveryStatus":
+                                order.setDeliveryStatus(value);
+                                break;
+                            case "orderStatus":
+                                order.setOrderStatus(value);
+                                break;
+                            case "deliveredDate":
+                                order.setDeliveredDate(value);
+                                break;
+                            case "totalPrice":
+                                if ("total".equals(currentSection)) {
+                                    order.setTotalPrice(Double.parseDouble(value));
+                                }
+                                break;
+                            case "productID":
+                                if ("products".equals(currentSection)) {
+                                    String[] productParts = line.split(", quantity=");
+                                    if (productParts.length == 2) {
+                                        products.add(new String[]{productParts[0].split("=")[1].trim(), productParts[1].trim()});
+                                    }
+                                }
+                                break;
+                        }
+                    }
+                }
+            }
+        } catch (IOException e) {
+            System.err.println("Error reading delivered orders file " + deliveredOrdersFilePath + ": " + e.getMessage());
+        } catch (NumberFormatException e) {
+            System.err.println("Invalid number format in file " + deliveredOrdersFilePath + ": " + e.getMessage());
         }
-        System.out.println("Read " + orders.size() + " orders from " + ordersDir);
+        System.out.println("Read " + orders.size() + " delivered orders from " + deliveredOrdersFilePath);
         return orders;
     }
 
-    // Read all users from users.txt
+    // Write a delivered order to deliveredOrders.txt (unchanged)
+    public static void writeDeliveredOrder(String filePath, Order order) throws IOException {
+        File file = new File(filePath);
+        if (!file.exists()) {
+            file.getParentFile().mkdirs();
+            file.createNewFile();
+            System.out.println("Created new delivered orders file at: " + file.getAbsolutePath());
+        }
+
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) {
+            writer.write("--- Order Start: " + order.getOrderNumber() + " ---\n");
+            writer.write("orderNumber=" + order.getOrderNumber() + "\n");
+            writer.write("userNumber=" + order.getUserNumber() + "\n");
+            writer.write("name=" + (order.getFullName() != null ? order.getFullName() : "") + "\n");
+            writer.write("phoneNum=" + (order.getPhoneNum() != null ? order.getPhoneNum() : "") + "\n");
+            writer.write("address=" + (order.getAddress() != null ? order.getAddress() : "") + "\n");
+            writer.write("deliveryMethod=" + (order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "") + "\n");
+            writer.write("paymentMethod=" + (order.getPaymentMethod() != null ? order.getPaymentMethod() : "") + "\n");
+            writer.write("deliveryDate=" + (order.getDeliveryDate() != null ? order.getDeliveryDate() : "") + "\n");
+            writer.write("confirmationDate=" + (order.getConfirmationDate() != null ? order.getConfirmationDate() : "") + "\n");
+            writer.write("paymentStatus=" + (order.getPaymentStatus() != null ? order.getPaymentStatus() : "") + "\n");
+            writer.write("deliveryStatus=" + (order.getDeliveryStatus() != null ? order.getDeliveryStatus() : "") + "\n");
+            writer.write("orderStatus=" + (order.getOrderStatus() != null ? order.getOrderStatus() : "") + "\n");
+            writer.write("deliveredDate=" + (order.getDeliveredDate() != null ? order.getDeliveredDate() : "") + "\n");
+            writer.write("[products]\n");
+            for (String[] product : order.getProducts()) {
+                writer.write("productID=" + product[0] + ", quantity=" + product[1] + "\n");
+            }
+            writer.write("[total]\n");
+            writer.write("totalPrice=" + String.format("%.2f", order.getTotalPrice()) + "\n");
+            writer.write("--- Order End ---\n");
+            writer.write("\n");
+            System.out.println("Wrote delivered order " + order.getOrderNumber() + " to " + filePath);
+        } catch (IOException e) {
+            System.err.println("Error writing delivered order to file " + filePath + ": " + e.getMessage());
+            throw e;
+        }
+    }
+
+    // Write all orders to orders.txt (unchanged)
+    public static void writeAllOrders(String filePath, List<Order> orders) throws IOException {
+        File file = new File(filePath);
+        if (!file.exists()) {
+            file.getParentFile().mkdirs();
+            file.createNewFile();
+            System.out.println("Created new orders file at: " + file.getAbsolutePath());
+        }
+
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
+            for (Order order : orders) {
+                writer.write("--- Order Start: " + order.getOrderNumber() + " ---\n");
+                writer.write("orderNumber=" + order.getOrderNumber() + "\n");
+                writer.write("userNumber=" + order.getUserNumber() + "\n");
+                writer.write("name=" + (order.getFullName() != null ? order.getFullName() : "") + "\n");
+                writer.write("phoneNum=" + (order.getPhoneNum() != null ? order.getPhoneNum() : "") + "\n");
+                writer.write("address=" + (order.getAddress() != null ? order.getAddress() : "") + "\n");
+                writer.write("deliveryMethod=" + (order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "") + "\n");
+                writer.write("paymentMethod=" + (order.getPaymentMethod() != null ? order.getPaymentMethod() : "") + "\n");
+                writer.write("deliveryDate=" + (order.getDeliveryDate() != null ? order.getDeliveryDate() : "") + "\n");
+                writer.write("confirmationDate=" + (order.getConfirmationDate() != null ? order.getConfirmationDate() : "") + "\n");
+                writer.write("paymentStatus=" + (order.getPaymentStatus() != null ? order.getPaymentStatus() : "") + "\n");
+                writer.write("deliveryStatus=" + (order.getDeliveryStatus() != null ? order.getDeliveryStatus() : "") + "\n");
+                writer.write("orderStatus=" + (order.getOrderStatus() != null ? order.getOrderStatus() : "") + "\n");
+                writer.write("deliveredDate=" + (order.getDeliveredDate() != null ? order.getDeliveredDate() : "") + "\n");
+                writer.write("[products]\n");
+                for (String[] product : order.getProducts()) {
+                    writer.write("productID=" + product[0] + ", quantity=" + product[1] + "\n");
+                }
+                writer.write("[total]\n");
+                writer.write("totalPrice=" + String.format("%.2f", order.getTotalPrice()) + "\n");
+                writer.write("--- Order End ---\n");
+                writer.write("\n");
+            }
+            writer.flush();
+            System.out.println("Successfully wrote " + orders.size() + " orders to " + filePath);
+        } catch (IOException e) {
+            System.err.println("Error writing orders to file " + filePath + ": " + e.getMessage());
+            throw e;
+        }
+    }
+
+    // Write all delivered orders to deliveredOrders.txt (unchanged)
+    public static void writeAllDeliveredOrders(String filePath, List<Order> orders) throws IOException {
+        File file = new File(filePath);
+        if (!file.exists()) {
+            file.getParentFile().mkdirs();
+            file.createNewFile();
+            System.out.println("Created new delivered orders file at: " + file.getAbsolutePath());
+        }
+
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
+            for (Order order : orders) {
+                writer.write("--- Order Start: " + order.getOrderNumber() + " ---\n");
+                writer.write("orderNumber=" + order.getOrderNumber() + "\n");
+                writer.write("userNumber=" + order.getUserNumber() + "\n");
+                writer.write("name=" + (order.getFullName() != null ? order.getFullName() : "") + "\n");
+                writer.write("phoneNum=" + (order.getPhoneNum() != null ? order.getPhoneNum() : "") + "\n");
+                writer.write("address=" + (order.getAddress() != null ? order.getAddress() : "") + "\n");
+                writer.write("deliveryMethod=" + (order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "") + "\n");
+                writer.write("paymentMethod=" + (order.getPaymentMethod() != null ? order.getPaymentMethod() : "") + "\n");
+                writer.write("deliveryDate=" + (order.getDeliveryDate() != null ? order.getDeliveryDate() : "") + "\n");
+                writer.write("confirmationDate=" + (order.getConfirmationDate() != null ? order.getConfirmationDate() : "") + "\n");
+                writer.write("paymentStatus=" + (order.getPaymentStatus() != null ? order.getPaymentStatus() : "") + "\n");
+                writer.write("deliveryStatus=" + (order.getDeliveryStatus() != null ? order.getDeliveryStatus() : "") + "\n");
+                writer.write("orderStatus=" + (order.getOrderStatus() != null ? order.getOrderStatus() : "") + "\n");
+                writer.write("deliveredDate=" + (order.getDeliveredDate() != null ? order.getDeliveredDate() : "") + "\n");
+                writer.write("[products]\n");
+                for (String[] product : order.getProducts()) {
+                    writer.write("productID=" + product[0] + ", quantity=" + product[1] + "\n");
+                }
+                writer.write("[total]\n");
+                writer.write("totalPrice=" + String.format("%.2f", order.getTotalPrice()) + "\n");
+                writer.write("--- Order End ---\n");
+                writer.write("\n");
+            }
+            writer.flush();
+            System.out.println("Successfully wrote " + orders.size() + " delivered orders to " + filePath);
+        } catch (IOException e) {
+            System.err.println("Error writing delivered orders to file " + filePath + ": " + e.getMessage());
+            throw e;
+        }
+    }
+
+    // Read all users from users.txt (unchanged)
     public static List<User> readUsers(String filePath) {
         List<User> users = new ArrayList<>();
         File file = new File(filePath);
@@ -262,56 +552,198 @@
 
         try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
             String line;
-            String userNumber = null, fullName = null, email = null, phoneNumber = null, address = null, password = null;
+            User user = null;
             while ((line = reader.readLine()) != null) {
                 line = line.trim();
                 if (line.isEmpty()) continue;
 
                 if (line.startsWith("--- User Start:")) {
-                    try {
-                        userNumber = line.split(":")[1].trim().split(" ---")[0];
-                    } catch (ArrayIndexOutOfBoundsException e) {
-                        System.err.println("Invalid User Start line in " + filePath + ": " + line);
-                        continue;
-                    }
-                } else if (line.startsWith("userNumber=")) {
-                    userNumber = line.split("=", 2)[1].trim();
-                } else if (line.startsWith("fullName=")) {
-                    fullName = line.split("=", 2)[1].trim();
-                } else if (line.startsWith("email=")) {
-                    email = line.split("=", 2)[1].trim();
-                } else if (line.startsWith("phoneNumber=")) {
-                    phoneNumber = line.split("=", 2)[1].trim();
-                } else if (line.startsWith("address=")) {
-                    address = line.split("=", 2)[1].trim();
-                } else if (line.startsWith("password=")) {
-                    password = line.split("=", 2)[1].trim();
+                    user = new User(null, null, null, null, null, null, null);
                 } else if (line.startsWith("--- User End ---")) {
-                    if (userNumber != null && fullName != null && email != null && phoneNumber != null && address != null && password != null) {
-                        users.add(new User(userNumber, fullName, email, phoneNumber, address, password));
+                    if (user != null && user.getUsername() != null && user.getPassword() != null) {
+                        users.add(user);
                     } else {
-                        System.err.println("Incomplete user data in " + filePath + ": userNumber=" + userNumber + ", email=" + email);
+                        System.err.println("Incomplete user data in " + filePath + ": " + user);
                     }
-                    userNumber = fullName = email = phoneNumber = address = password = null; // Reset for next user
+                    user = null;
+                } else if (user != null) {
+                    String[] parts = line.split("=", 2);
+                    if (parts.length == 2) {
+                        String key = parts[0].trim();
+                        String value = parts[1].trim();
+                        switch (key) {
+                            case "username":
+                                user.setUsername(value);
+                                break;
+                            case "password":
+                                user.setPassword(value);
+                                break;
+                            case "userNumber":
+                                user.setUserNumber(value);
+                                break;
+                            case "fullName":
+                                user.setFullName(value);
+                                break;
+                            case "email":
+                                user.setEmail(value);
+                                break;
+                            case "phoneNumber":
+                                user.setPhoneNumber(value);
+                                break;
+                            case "address":
+                                user.setAddress(value);
+                                break;
+                        }
+                    }
                 }
             }
         } catch (IOException e) {
             System.err.println("Error reading users file " + filePath + ": " + e.getMessage());
+            return null;
         }
         System.out.println("Read " + users.size() + " users from " + filePath);
         return users;
     }
 
-    // Check if a user number is unique in users.txt
+    // Write all users to users.txt (unchanged)
+    public static void writeUsers(String filePath, List<User> users) throws IOException {
+        File file = new File(filePath);
+        if (!file.exists()) {
+            file.getParentFile().mkdirs();
+            file.createNewFile();
+            System.out.println("Created users file: " + file.getAbsolutePath());
+        }
+
+        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
+            for (User user : users) {
+                writer.write("--- User Start: " + user.getUserNumber() + " ---\n");
+                writer.write("username=" + (user.getUsername() != null ? user.getUsername() : "") + "\n");
+                writer.write("password=" + (user.getPassword() != null ? user.getPassword() : "") + "\n");
+                writer.write("userNumber=" + (user.getUserNumber() != null ? user.getUserNumber() : "") + "\n");
+                writer.write("fullName=" + (user.getFullName() != null ? user.getFullName() : "") + "\n");
+                writer.write("email=" + (user.getEmail() != null ? user.getEmail() : "") + "\n");
+                writer.write("phoneNumber=" + (user.getPhoneNumber() != null ? user.getPhoneNumber() : "") + "\n");
+                writer.write("address=" + (user.getAddress() != null ? user.getAddress() : "") + "\n");
+                writer.write("--- User End ---\n");
+                writer.write("\n");
+            }
+            writer.flush();
+            System.out.println("Successfully wrote " + users.size() + " users to " + filePath);
+        } catch (IOException e) {
+            System.err.println("Error writing to file " + filePath + ": " + e.getMessage());
+            throw e;
+        }
+    }
+
+    // Check if a user number is unique in users.txt (unchanged)
     public static boolean isUserNumberUnique(String userNumber, String filePath) {
         List<User> users = readUsers(filePath);
-        boolean isUnique = users.stream().noneMatch(user -> user.getUserNumber().equals(userNumber));
+        if (users == null) {
+            return true; // If file can't be read, assume unique
+        }
+        boolean isUnique = users.stream().noneMatch(user -> user.getUserNumber() != null && user.getUserNumber().equals(userNumber));
         System.out.println("User number " + userNumber + " is " + (isUnique ? "unique" : "not unique") + " in " + filePath);
         return isUnique;
     }
 
-    // Write logged-in user to loggedInUser.txt
-    public static void writeLoggedInUser(String filePath, User user) {
+    // Read all admins from admins.txt (unchanged)
+    public static List<Admin> readAdmins(String filePath) {
+        List<Admin> admins = new ArrayList<>();
+        File file = new File(filePath);
+        if (!file.exists()) {
+            try {
+                file.getParentFile().mkdirs();
+                file.createNewFile();
+                System.out.println("Created admins file: " + file.getAbsolutePath());
+            } catch (IOException e) {
+                System.err.println("Error creating admins file " + filePath + ": " + e.getMessage());
+                return admins;
+            }
+        }
+
+        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
+            String line;
+            Admin admin = null;
+            while ((line = reader.readLine()) != null) {
+                line = line.trim();
+                if (line.isEmpty()) continue;
+
+                if (line.startsWith("--- Admin Start:") || line.startsWith("--- User Start:")) {
+                    admin = new Admin(null, null, null, null);
+                } else if (line.startsWith("--- Admin End ---") || line.startsWith("--- User End ---")) {
+                    if (admin != null && admin.getEmail() != null && admin.getPassword() != null) {
+                        admins.add(admin);
+                    } else {
+                        System.err.println("Incomplete admin data in " + filePath + ": " + admin);
+                    }
+                    admin = null;
+                } else if (admin != null) {
+                    String[] parts = line.split("=", 2);
+                    if (parts.length == 2) {
+                        String key = parts[0].trim();
+                        String value = parts[1].trim();
+                        switch (key) {
+                            case "adminNumber":
+                            case "userNumber": // Map userNumber to adminNumber for backward compatibility
+                                admin.setAdminNumber(value);
+                                break;
+                            case "email":
+                            case "username": // Map username to email for backward compatibility
+                                admin.setEmail(value);
+                                break;
+                            case "password":
+                                admin.setPassword(value);
+                                break;
+                            case "role":
+                                admin.setRole(value);
+                                break;
+                        }
+                    }
+                }
+            }
+        } catch (IOException e) {
+            System.err.println("Error reading admins file " + filePath + ": " + e.getMessage());
+            return null;
+        }
+        System.out.println("Read " + admins.size() + " admins from " + filePath);
+        return admins;
+    }
+
+    // Read an admin by email from admins.txt (unchanged)
+    public static Admin readAdminByEmail(String email, String filePath) {
+        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
+            String line;
+            Admin admin = null;
+            while ((line = reader.readLine()) != null) {
+                if (line.startsWith("--- Admin Start:") || line.startsWith("--- User Start:")) {
+                    String adminNumber = null, adminEmail = null, password = null, role = null;
+                    while ((line = reader.readLine()) != null &&
+                            !(line.startsWith("--- Admin End ---") || line.startsWith("--- User End ---"))) {
+                        if (line.startsWith("adminNumber=") || line.startsWith("userNumber=")) {
+                            adminNumber = line.split("=", 2)[1];
+                        } else if (line.startsWith("email=") || line.startsWith("username=")) {
+                            adminEmail = line.split("=", 2)[1];
+                        } else if (line.startsWith("password=")) {
+                            password = line.split("=", 2)[1];
+                        } else if (line.startsWith("role=")) {
+                            role = line.split("=", 2)[1];
+                        }
+                    }
+                    if (adminEmail != null && adminEmail.equals(email)) {
+                        admin = new Admin(adminNumber, adminEmail, password, role);
+                        break;
+                    }
+                }
+            }
+            return admin;
+        } catch (IOException e) {
+            System.out.println("Error reading admin from file: " + e.getMessage());
+            return null;
+        }
+    }
+
+    // Write logged-in user to loggedInUser.txt (unchanged)
+    public static synchronized void writeLoggedInUser(String filePath, User user) {
         File file = new File(filePath);
         if (!file.exists()) {
             try {
@@ -326,11 +758,15 @@
 
         try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
             if (user != null) {
+                writer.write("--- User Start: " + user.getUserNumber() + " ---\n");
+                writer.write("username=" + (user.getUsername() != null ? user.getUsername() : "") + "\n");
+                writer.write("password=" + (user.getPassword() != null ? user.getPassword() : "") + "\n");
                 writer.write("userNumber=" + (user.getUserNumber() != null ? user.getUserNumber() : "") + "\n");
                 writer.write("fullName=" + (user.getFullName() != null ? user.getFullName() : "") + "\n");
                 writer.write("email=" + (user.getEmail() != null ? user.getEmail() : "") + "\n");
                 writer.write("phoneNumber=" + (user.getPhoneNumber() != null ? user.getPhoneNumber() : "") + "\n");
                 writer.write("address=" + (user.getAddress() != null ? user.getAddress() : "") + "\n");
+                writer.write("--- User End ---\n");
                 System.out.println("Wrote logged-in user to " + filePath + ": " + user.getEmail());
             } else {
                 System.err.println("Cannot write null user to " + filePath);
@@ -340,7 +776,7 @@
         }
     }
 
-    // Read logged-in user from loggedInUser.txt
+    // Read logged-in user from loggedInUser.txt (unchanged)
     public static User readLoggedInUser(String filePath) {
         File file = new File(filePath);
         if (!file.exists()) {
@@ -348,33 +784,45 @@
             return null;
         }
 
-        String userNumber = null, fullName = null, email = null, phoneNumber = null, address = null;
+        User user = null;
         try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
             String line;
             while ((line = reader.readLine()) != null) {
                 line = line.trim();
                 if (line.isEmpty()) continue;
 
-                String[] parts = line.split("=", 2);
-                if (parts.length == 2) {
-                    String key = parts[0].trim();
-                    String value = parts[1].trim();
-                    switch (key) {
-                        case "userNumber":
-                            userNumber = value.isEmpty() ? null : value;
-                            break;
-                        case "fullName":
-                            fullName = value.isEmpty() ? null : value;
-                            break;
-                        case "email":
-                            email = value.isEmpty() ? null : value;
-                            break;
-                        case "phoneNumber":
-                            phoneNumber = value.isEmpty() ? null : value;
-                            break;
-                        case "address":
-                            address = value.isEmpty() ? null : value;
-                            break;
+                if (line.startsWith("--- User Start:")) {
+                    user = new User(null, null, null, null, null, null, null);
+                } else if (line.startsWith("--- User End ---")) {
+                    break; // Only one user should be in loggedInUser.txt
+                } else if (user != null) {
+                    String[] parts = line.split("=", 2);
+                    if (parts.length == 2) {
+                        String key = parts[0].trim();
+                        String value = parts[1].trim();
+                        switch (key) {
+                            case "username":
+                                user.setUsername(value);
+                                break;
+                            case "password":
+                                user.setPassword(value);
+                                break;
+                            case "userNumber":
+                                user.setUserNumber(value);
+                                break;
+                            case "fullName":
+                                user.setFullName(value);
+                                break;
+                            case "email":
+                                user.setEmail(value);
+                                break;
+                            case "phoneNumber":
+                                user.setPhoneNumber(value);
+                                break;
+                            case "address":
+                                user.setAddress(value);
+                                break;
+                        }
                     }
                 }
             }
@@ -383,8 +831,7 @@
             return null;
         }
 
-        if (userNumber != null && fullName != null && email != null && phoneNumber != null && address != null) {
-            User user = new User(userNumber, fullName, email, phoneNumber, address, "");
+        if (user != null && user.getUserNumber() != null && user.getEmail() != null) {
             System.out.println("Read logged-in user from " + filePath + ": " + user.getEmail());
             return user;
         }
@@ -392,8 +839,8 @@
         return null;
     }
 
-    // Clear loggedInUser.txt on logout
-    public static void clearLoggedInUser(String filePath) {
+    // Clear loggedInUser.txt on logout (unchanged)
+    public static synchronized void clearLoggedInUser(String filePath) {
         File file = new File(filePath);
         if (file.exists()) {
             try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
@@ -407,7 +854,7 @@
         }
     }
 
-    // Order class for reading orders
+    // Order class for reading orders (unchanged)
     public static class Order {
         private String orderNumber;
         private String userNumber;
@@ -417,6 +864,11 @@
         private String deliveryMethod;
         private String paymentMethod;
         private String deliveryDate;
+        private String confirmationDate;
+        private String paymentStatus;
+        private String deliveryStatus;
+        private String orderStatus;
+        private String deliveredDate;
         private List<String[]> products; // [productID, quantity]
         private double totalPrice;
 
@@ -436,6 +888,16 @@
         public void setPaymentMethod(String paymentMethod) { this.paymentMethod = paymentMethod; }
         public String getDeliveryDate() { return deliveryDate; }
         public void setDeliveryDate(String deliveryDate) { this.deliveryDate = deliveryDate; }
+        public String getConfirmationDate() { return confirmationDate; }
+        public void setConfirmationDate(String confirmationDate) { this.confirmationDate = confirmationDate; }
+        public String getPaymentStatus() { return paymentStatus; }
+        public void setPaymentStatus(String paymentStatus) { this.paymentStatus = paymentStatus; }
+        public String getDeliveryStatus() { return deliveryStatus; }
+        public void setDeliveryStatus(String deliveryStatus) { this.deliveryStatus = deliveryStatus; }
+        public String getOrderStatus() { return orderStatus; }
+        public void setOrderStatus(String orderStatus) { this.orderStatus = orderStatus; }
+        public String getDeliveredDate() { return deliveredDate; }
+        public void setDeliveredDate(String deliveredDate) { this.deliveredDate = deliveredDate; }
         public List<String[]> getProducts() { return products; }
         public void setProducts(List<String[]> products) { this.products = products; }
         public double getTotalPrice() { return totalPrice; }
Index: src/main/webapp/cartAndOrders/product-details.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"model.GroceryItem\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Product Detail</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n</head>\n<body>\n<header>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"back-link\"><i class=\"fas fa-arrow-left\"></i> Back</a>\n    <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n    <div class=\"cart-icon\" id=\"cart-icon\">\n        <i class=\"fas fa-shopping-cart\"></i>\n        <span class=\"cart-item-count\">0</span>\n    </div>\n</header>\n\n<div class=\"cart\">\n    <h2 class=\"cart-title\">Your Cart</h2>\n    <i class=\"ri-close-line\" id=\"cart-close\"></i>\n    <div class=\"cart-content\">\n        <p>Your cart is empty.</p>\n    </div>\n    <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n        <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n        <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n    </div>\n</div>\n\n<section class=\"shop product-detail-section\">\n    <h2 class=\"section-title\">Product Detail</h2>\n    <div class=\"product-content\">\n        <%\n            GroceryItem item = (GroceryItem) request.getAttribute(\"item\");\n            if (item == null) {\n                out.println(\"<p>Product not found.</p>\");\n            } else {\n                boolean isOutOfStock = item.getQuantity() <= 0;\n        %>\n        <div class=\"product-detail-box\">\n            <div class=\"img-box\">\n                <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n            </div>\n            <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n            <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n            <p class=\"description\">\n                <%= item.getDescription() != null && !item.getDescription().isEmpty() ? item.getDescription() : \"No description available.\" %>\n            </p>\n            <p class=\"category\">Category: <%= item.getProductCategory() %></p>\n            <% if (isOutOfStock) { %>\n            <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n            <% } else { %>\n            <button class=\"add-cart-btn\" data-item-id=\"<%= item.getProductID() %>\">Add To Cart</button>\n            <% } %>\n        </div>\n        <%\n            }\n        %>\n    </div>\n</section>\n\n<script>\n    window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/src/main/webapp/cartAndOrders/product-details.jsp b/src/main/webapp/cartAndOrders/product-details.jsp
--- a/src/main/webapp/cartAndOrders/product-details.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/cartAndOrders/product-details.jsp	(date 1743852139000)
@@ -10,7 +10,10 @@
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <header>
     <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
     <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> GROCERY</a>
Index: target/OnlineGroceryOrderSystem/cartAndOrders/product-details.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"model.GroceryItem\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Product Detail</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n</head>\n<body>\n<header>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\" class=\"back-link\"><i class=\"fas fa-arrow-left\"></i> Back</a>\n    <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n    <div class=\"cart-icon\" id=\"cart-icon\">\n        <i class=\"fas fa-shopping-cart\"></i>\n        <span class=\"cart-item-count\">0</span>\n    </div>\n</header>\n\n<div class=\"cart\">\n    <h2 class=\"cart-title\">Your Cart</h2>\n    <i class=\"ri-close-line\" id=\"cart-close\"></i>\n    <div class=\"cart-content\">\n        <p>Your cart is empty.</p>\n    </div>\n    <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n        <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n        <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n    </div>\n</div>\n\n<section class=\"shop product-detail-section\">\n    <h2 class=\"section-title\">Product Detail</h2>\n    <div class=\"product-content\">\n        <%\n            GroceryItem item = (GroceryItem) request.getAttribute(\"item\");\n            if (item == null) {\n                out.println(\"<p>Product not found.</p>\");\n            } else {\n                boolean isOutOfStock = item.getQuantity() <= 0;\n        %>\n        <div class=\"product-detail-box\">\n            <div class=\"img-box\">\n                <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n            </div>\n            <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n            <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n            <p class=\"description\">\n                <%= item.getDescription() != null && !item.getDescription().isEmpty() ? item.getDescription() : \"No description available.\" %>\n            </p>\n            <p class=\"category\">Category: <%= item.getProductCategory() %></p>\n            <% if (isOutOfStock) { %>\n            <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n            <% } else { %>\n            <button class=\"add-cart-btn\" data-item-id=\"<%= item.getProductID() %>\">Add To Cart</button>\n            <% } %>\n        </div>\n        <%\n            }\n        %>\n    </div>\n</section>\n\n<script>\n    window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html>
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/product-details.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/product-details.jsp
--- a/target/OnlineGroceryOrderSystem/cartAndOrders/product-details.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/cartAndOrders/product-details.jsp	(date 1746805159015)
@@ -10,7 +10,10 @@
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css">
 </head>
-<body>
+<body style="
+background: rgb(255,255,255);
+background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
+">
 <header>
     <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
     <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> GROCERY</a>
Index: src/main/java/servlet/CartServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.FileUtil;\nimport model.GroceryItem;\nimport model.User;\n\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.stream.Collectors;\n\npublic class CartServlet extends HttpServlet {\n    private static final String ITEMS_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt\";\n    private static final String CART_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt\";\n\n    @Override\n    public void init() throws ServletException {\n        File dataDir = new File(\"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data\");\n        if (!dataDir.exists()) {\n            if (dataDir.mkdirs()) {\n                System.out.println(\"Created data directory: \" + dataDir.getAbsolutePath());\n            } else {\n                System.err.println(\"Failed to create data directory: \" + dataDir.getAbsolutePath());\n                throw new ServletException(\"Unable to create data directory for file operations\");\n            }\n        } else if (!dataDir.canWrite()) {\n            System.err.println(\"Data directory is not writable: \" + dataDir.getAbsolutePath());\n            throw new ServletException(\"Data directory is not writable for file operations\");\n        }\n\n        System.out.println(\"ITEMS_FILE path: \" + ITEMS_FILE);\n        System.out.println(\"CART_FILE path: \" + CART_FILE);\n    }\n\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        HttpSession session = request.getSession();\n        User loggedInUser = (User) session.getAttribute(\"user\");\n        if (loggedInUser == null) {\n            response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=notLoggedIn\");\n            return;\n        }\n\n        ArrayList<GroceryItem> cart;\n        synchronized (this) {\n            cart = FileUtil.readItems(CART_FILE);\n            if (cart == null) {\n                cart = new ArrayList<>();\n                System.out.println(\"Initialized empty cart for \" + CART_FILE + \" (file not found or invalid)\");\n            } else {\n                System.out.println(\"Loaded cart from \" + CART_FILE + \": \" + cart);\n            }\n        }\n\n        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);\n        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n\n        String action = request.getParameter(\"action\");\n        if (\"getCart\".equals(action)) {\n            response.setContentType(\"application/json\");\n            PrintWriter out = response.getWriter();\n            if (cart.isEmpty()) {\n                out.write(\"{\\\"success\\\": true, \\\"message\\\": \\\"Cart is empty\\\", \\\"cart\\\": [], \\\"totalPrice\\\": 0.00}\");\n            } else {\n                sendCartResponse(out, cart, totalPrice, items);\n            }\n            out.flush();\n        } else {\n            String category = request.getParameter(\"category\");\n            if (category != null && !category.isEmpty()) {\n                items = items.stream()\n                        .filter(item -> item.getProductCategory().equalsIgnoreCase(category))\n                        .collect(Collectors.toCollection(ArrayList::new));\n            }\n            request.setAttribute(\"items\", items);\n            request.setAttribute(\"cart\", cart);\n            request.setAttribute(\"totalPrice\", totalPrice);\n            request.getRequestDispatcher(\"/cartAndOrders/cartIndex.jsp\").forward(request, response);\n        }\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        HttpSession session = request.getSession();\n        User loggedInUser = (User) session.getAttribute(\"user\");\n        if (loggedInUser == null) {\n            response.setContentType(\"application/json\");\n            PrintWriter out = response.getWriter();\n            out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Please log in to access the cart.\\\"}\");\n            out.flush();\n            return;\n        }\n\n        System.out.println(\"Received POST request to CartServlet with action: \" + request.getParameter(\"action\"));\n        response.setContentType(\"application/json\");\n        PrintWriter out = response.getWriter();\n\n        ArrayList<GroceryItem> cart;\n        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);\n        System.out.println(\"Loaded items from \" + ITEMS_FILE + \": \" + items);\n\n        synchronized (this) {\n            cart = FileUtil.readItems(CART_FILE);\n            if (cart == null) {\n                cart = new ArrayList<>();\n                System.out.println(\"Initialized empty cart for \" + CART_FILE);\n            }\n            System.out.println(\"Loaded cart before modification: \" + cart);\n\n            try {\n                if (\"add\".equals(request.getParameter(\"action\"))) {\n                    System.out.println(\"Processing 'add' action with itemId: \" + request.getParameter(\"itemId\"));\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    GroceryItem itemToAdd = items.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                    if (itemToAdd == null) {\n                        System.out.println(\"Item not found for itemId: \" + itemId);\n                        out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found\\\"}\");\n                    } else if (itemToAdd.getQuantity() <= 0) {\n                        System.out.println(\"Item out of stock: \" + itemToAdd);\n                        out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item is out of stock\\\"}\");\n                    } else {\n                        GroceryItem existingItem = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                        if (existingItem != null) {\n                            out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item already in cart, use cart to increase quantity\\\"}\");\n                        } else {\n                            GroceryItem cartItem = new GroceryItem(itemToAdd.getProductID(), itemToAdd.getProductCategory(),\n                                    itemToAdd.getProductName(), itemToAdd.getProductPrice(), itemToAdd.getProductImageLink(),\n                                    1, itemToAdd.getDescription());\n                            cart.add(cartItem);\n                            itemToAdd.setQuantity(itemToAdd.getQuantity() - 1);\n                            FileUtil.writeItems(ITEMS_FILE, items);\n                            FileUtil.writeItems(CART_FILE, cart);\n                            System.out.println(\"Added new item to cart and updated stock: \" + cartItem);\n                            double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                            sendCartResponse(out, cart, totalPrice, items);\n                        }\n                    }\n                } else if (\"update\".equals(request.getParameter(\"action\"))) {\n                    System.out.println(\"Processing 'update' action with itemId: \" + request.getParameter(\"itemId\"));\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    int change = Integer.parseInt(request.getParameter(\"change\"));\n                    GroceryItem item = cart.stream().filter(i -> i.getProductID() == itemId).findFirst().orElse(null);\n                    if (item == null) {\n                        System.out.println(\"Item not found in cart for itemId: \" + itemId);\n                        out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found in cart\\\"}\");\n                    } else {\n                        int stockQuantity = items.stream()\n                                .filter(i -> i.getProductID() == itemId)\n                                .findFirst()\n                                .map(GroceryItem::getQuantity)\n                                .orElse(0);\n                        int currentCartQuantity = item.getQuantity();\n                        int totalAvailableStock = stockQuantity + currentCartQuantity;\n                        int newQuantity = Math.max(0, Math.min(currentCartQuantity + change, totalAvailableStock));\n                        int quantityChange = newQuantity - currentCartQuantity;\n                        if (quantityChange != 0) {\n                            GroceryItem stockItem = items.stream()\n                                    .filter(i -> i.getProductID() == itemId)\n                                    .findFirst()\n                                    .orElse(null);\n                            if (stockItem != null) {\n                                stockItem.setQuantity(stockItem.getQuantity() - quantityChange);\n                                FileUtil.writeItems(ITEMS_FILE, items);\n                                System.out.println(\"Updated stock in \" + ITEMS_FILE + \": \" + items);\n                            }\n                            item.setQuantity(newQuantity);\n                            if (newQuantity == 0) {\n                                cart.remove(item);\n                                System.out.println(\"Removed item from cart: \" + item);\n                            } else {\n                                System.out.println(\"Updated item quantity in cart: \" + item);\n                            }\n                            FileUtil.writeItems(CART_FILE, cart);\n                            System.out.println(\"Wrote cart to \" + CART_FILE + \": \" + cart);\n                        }\n                        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                        sendCartResponse(out, cart, totalPrice, items);\n                    }\n                } else if (\"remove\".equals(request.getParameter(\"action\"))) {\n                    System.out.println(\"Processing 'remove' action with itemId: \" + request.getParameter(\"itemId\"));\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    GroceryItem itemToRemove = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                    if (itemToRemove != null) {\n                        int quantityRemoved = itemToRemove.getQuantity();\n                        cart.remove(itemToRemove);\n                        GroceryItem stockItem = items.stream()\n                                .filter(item -> item.getProductID() == itemId)\n                                .findFirst()\n                                .orElse(null);\n                        if (stockItem != null) {\n                            stockItem.setQuantity(stockItem.getQuantity() + quantityRemoved);\n                            FileUtil.writeItems(ITEMS_FILE, items);\n                            System.out.println(\"Updated stock in \" + ITEMS_FILE + \": \" + items);\n                        }\n                        FileUtil.writeItems(CART_FILE, cart);\n                        System.out.println(\"Wrote cart to \" + CART_FILE + \": \" + cart);\n                        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                        sendCartResponse(out, cart, totalPrice, items);\n                    } else {\n                        System.out.println(\"Item not found in cart for itemId: \" + itemId);\n                        out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found in cart\\\"}\");\n                    }\n                } else {\n                    System.out.println(\"Invalid action received: \" + request.getParameter(\"action\"));\n                    out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Invalid action\\\"}\");\n                }\n            } catch (NumberFormatException e) {\n                System.out.println(\"Invalid item ID or change value: \" + e.getMessage());\n                out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Invalid item ID or change value\\\"}\");\n            } catch (IOException e) {\n                System.err.println(\"I/O error during cart operation: \" + e.getMessage());\n                out.write(\"{\\\"success\\\": false, \\\"message\\\": \\\"Failed to update cart due to I/O error\\\"}\");\n            }\n        }\n        out.flush();\n    }\n\n    private void sendCartResponse(PrintWriter out, ArrayList<GroceryItem> cart, double totalPrice, ArrayList<GroceryItem> items) {\n        out.write(\"{\\\"success\\\": true, \\\"message\\\": \\\"Cart retrieved successfully\\\", \\\"cart\\\": [\");\n        for (int i = 0; i < cart.size(); i++) {\n            GroceryItem cartItem = cart.get(i);\n            int stockQuantity = items.stream()\n                    .filter(item -> item.getProductID() == cartItem.getProductID())\n                    .findFirst()\n                    .map(GroceryItem::getQuantity)\n                    .orElse(0);\n            int totalAvailableStock = stockQuantity + cartItem.getQuantity();\n            out.write(String.format(\"{\\\"productID\\\": %d, \\\"productName\\\": \\\"%s\\\", \\\"productPrice\\\": %.2f, \" +\n                            \"\\\"productImageLink\\\": \\\"%s\\\", \\\"quantity\\\": %d, \\\"description\\\": \\\"%s\\\", \\\"stockQuantity\\\": %d, \\\"totalAvailableStock\\\": %d}\",\n                    cartItem.getProductID(), escapeJson(cartItem.getProductName()), cartItem.getProductPrice(),\n                    escapeJson(cartItem.getProductImageLink()), cartItem.getQuantity(),\n                    escapeJson(cartItem.getDescription() != null ? cartItem.getDescription() : \"\"),\n                    stockQuantity, totalAvailableStock));\n            if (i < cart.size() - 1) out.write(\",\");\n        }\n        out.write(\"], \\\"totalPrice\\\": \" + String.format(\"%.2f\", totalPrice) + \"}\");\n    }\n\n    private String escapeJson(String str) {\n        return str.replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\n\", \"\\\\n\");\n    }\n}
===================================================================
diff --git a/src/main/java/servlet/CartServlet.java b/src/main/java/servlet/CartServlet.java
--- a/src/main/java/servlet/CartServlet.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/servlet/CartServlet.java	(date 1742654919000)
@@ -16,6 +16,7 @@
 public class CartServlet extends HttpServlet {
     private static final String ITEMS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
     private static final String CART_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt";
+    private MergeServlet mergeServlet; // Instance of MergeServlet
 
     @Override
     public void init() throws ServletException {
@@ -34,6 +35,7 @@
 
         System.out.println("ITEMS_FILE path: " + ITEMS_FILE);
         System.out.println("CART_FILE path: " + CART_FILE);
+        mergeServlet = new MergeServlet(); // Initialize MergeServlet
     }
 
     @Override
@@ -57,9 +59,15 @@
         }
 
         ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
+        if (items == null) {
+            items = new ArrayList<>();
+            System.out.println("Initialized empty items list for " + ITEMS_FILE + " (file not found or invalid)");
+        }
+        System.out.println("All loaded items: " + items);
         double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
 
         String action = request.getParameter("action");
+        System.out.println("doGet action: " + action);
         if ("getCart".equals(action)) {
             response.setContentType("application/json");
             PrintWriter out = response.getWriter();
@@ -71,14 +79,119 @@
             out.flush();
         } else {
             String category = request.getParameter("category");
-            if (category != null && !category.isEmpty()) {
-                items = items.stream()
-                        .filter(item -> item.getProductCategory().equalsIgnoreCase(category))
+            String minPriceStr = request.getParameter("minPrice");
+            String maxPriceStr = request.getParameter("maxPrice");
+            String name = request.getParameter("name");
+            String sortBy = request.getParameter("sortBy"); // Primary sorting criterion
+
+            System.out.println("Parameters - category: " + category + ", minPrice: " + minPriceStr + ", maxPrice: " + maxPriceStr + ", name: " + name + ", sortBy: " + sortBy);
+
+            // Default category to null (show all) if not specified or "All"
+            if (category == null || category.trim().isEmpty() || category.equalsIgnoreCase("All")) {
+                category = null; // Show all categories
+                System.out.println("No specific category selected, showing all products");
+            }
+            final String finalCategory = category; // Create a final copy for lambda expression
+
+            ArrayList<GroceryItem> filteredItems = new ArrayList<>(items);
+            System.out.println("Initial items count: " + filteredItems.size());
+
+            // Step 1: Filter by category if specified
+            if (finalCategory != null && !finalCategory.trim().isEmpty()) {
+                filteredItems = filteredItems.stream()
+                        .filter(item -> {
+                            boolean matches = item.getProductCategory().equalsIgnoreCase(finalCategory);
+                            System.out.println("Checking category for item " + item.getProductName() + ": " + item.getProductCategory() + " == " + finalCategory + " -> " + matches);
+                            return matches;
+                        })
                         .collect(Collectors.toCollection(ArrayList::new));
+                System.out.println("After category filter, result size: " + filteredItems.size());
+                System.out.println("Items after category filter: " + filteredItems);
+            }
+
+            // Step 2: Filter by name if specified
+            if (name != null && !name.trim().isEmpty()) {
+                filteredItems = filteredItems.stream()
+                        .filter(item -> {
+                            boolean matches = item.getProductName().toLowerCase().contains(name.toLowerCase());
+                            System.out.println("Checking name for item " + item.getProductName() + ": contains " + name + " -> " + matches);
+                            return matches;
+                        })
+                        .collect(Collectors.toCollection(ArrayList::new));
+                System.out.println("After name filter, result size: " + filteredItems.size());
+                System.out.println("Items after name filter: " + filteredItems);
+            }
+
+            // Step 3: Filter by price range
+            // Apply minPrice filter
+            if (minPriceStr != null && !minPriceStr.trim().isEmpty()) {
+                try {
+                    double minPrice = Double.parseDouble(minPriceStr);
+                    filteredItems = filteredItems.stream()
+                            .filter(item -> {
+                                boolean matches = item.getProductPrice() >= minPrice;
+                                System.out.println("Checking minPrice for item " + item.getProductName() + ": " + item.getProductPrice() + " >= " + minPrice + " -> " + matches);
+                                return matches;
+                            })
+                            .collect(Collectors.toCollection(ArrayList::new));
+                    System.out.println("After minPrice filter (" + minPrice + "), result size: " + filteredItems.size());
+                    System.out.println("Items after minPrice filter: " + filteredItems);
+                } catch (NumberFormatException e) {
+                    System.out.println("Invalid minPrice: " + minPriceStr);
+                }
+            }
+
+            // Apply maxPrice filter
+            if (maxPriceStr != null && !maxPriceStr.trim().isEmpty()) {
+                try {
+                    double maxPrice = Double.parseDouble(maxPriceStr);
+                    filteredItems = filteredItems.stream()
+                            .filter(item -> {
+                                boolean matches = item.getProductPrice() <= maxPrice;
+                                System.out.println("Checking maxPrice for item " + item.getProductName() + ": " + item.getProductPrice() + " <= " + maxPrice + " -> " + matches);
+                                return matches;
+                            })
+                            .collect(Collectors.toCollection(ArrayList::new));
+                    System.out.println("After maxPrice filter (" + maxPrice + "), result size: " + filteredItems.size());
+                    System.out.println("Items after maxPrice filter: " + filteredItems);
+                } catch (NumberFormatException e) {
+                    System.out.println("Invalid maxPrice: " + maxPriceStr);
+                }
             }
-            request.setAttribute("items", items);
+
+            // Step 4: Sort the filtered items using MergeServlet
+            if (!filteredItems.isEmpty()) {
+                MergeServlet.SortCriterion sortCriterion = MergeServlet.SortCriterion.NAME; // Default to name
+
+                // Map sortBy parameter to SortCriterion
+                if (sortBy != null) {
+                    switch (sortBy.toLowerCase()) {
+                        case "name":
+                            sortCriterion = MergeServlet.SortCriterion.NAME;
+                            break;
+                        case "price":
+                            sortCriterion = MergeServlet.SortCriterion.PRICE;
+                            break;
+                        default:
+                            System.out.println("Invalid sortBy parameter: " + sortBy + ", defaulting to NAME");
+                    }
+                }
+
+                System.out.println("Sorting items with sortCriterion=" + sortCriterion);
+                mergeServlet.sortItems(filteredItems, sortCriterion);
+            }
+
+            // Determine if we're showing search results or a specific category
+            boolean isSearchResult = (name != null && !name.trim().isEmpty()) ||
+                    (minPriceStr != null && !minPriceStr.trim().isEmpty()) ||
+                    (maxPriceStr != null && !maxPriceStr.trim().isEmpty());
+
+            request.setAttribute("items", filteredItems);
             request.setAttribute("cart", cart);
             request.setAttribute("totalPrice", totalPrice);
+            request.setAttribute("category", category);
+            request.setAttribute("isSearchResult", isSearchResult);
+            System.out.println("Forwarding to cartIndex.jsp with items size: " + filteredItems.size() + ", isSearchResult: " + isSearchResult);
             request.getRequestDispatcher("/cartAndOrders/cartIndex.jsp").forward(request, response);
         }
     }
@@ -101,6 +214,10 @@
 
         ArrayList<GroceryItem> cart;
         ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
+        if (items == null) {
+            items = new ArrayList<>();
+            System.out.println("Initialized empty items list for " + ITEMS_FILE + " (file not found or invalid)");
+        }
         System.out.println("Loaded items from " + ITEMS_FILE + ": " + items);
 
         synchronized (this) {
@@ -241,6 +358,6 @@
     }
 
     private String escapeJson(String str) {
-        return str.replace("\"", "\\\"").replace("\n", "\\n");
+        return str != null ? str.replace("\"", "\\\"").replace("\n", "\\n") : "";
     }
 }
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>userNumber=US143000078979\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
--- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(date 1746805159001)
@@ -1,5 +1,0 @@
-userNumber=US143000078979
-fullName=aloka warnakula
-email=alokawarnakula77@gmail.com
-phoneNumber=0711641638
-address=21/6/6A, somanada mawatha, pitumpe, padukka
Index: target/OnlineGroceryOrderSystem/userLogin/Success.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Success</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\">\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            height: 100vh; /* Full viewport height */\n            background-image: url('https://images6.alphacoders.com/124/1240065.jpg');\n            background-size: cover;\n            background-repeat: no-repeat;\n            display: flex; /* Use flexbox to center */\n            justify-content: center; /* Center horizontally */\n            align-items: center; /* Center vertically */\n        }\n\n        #card {\n            width: 1000px;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 10px;\n            overflow: hidden;\n            margin: 0 auto; /* Horizontal centering fallback */\n            text-align: center;\n            font-family: 'Source Sans Pro', sans-serif;\n            animation: fadeIn 1s ease-in-out; /* Keep the fadeIn animation */\n        }\n\n        #upper-side {\n            padding: 4em;\n            background-color: #8BC34A;\n            background: rgba(0, 255, 0, 0.3);\n            display: block;\n            color: #fff;\n            border-top-right-radius: 8px;\n            border-top-left-radius: 8px;\n        }\n\n        #checkmark {\n            font-weight: lighter;\n            fill: #3E7B27;\n            margin: -3.5em auto auto 65px;\n        }\n\n        #status {\n            font-weight: lighter;\n            text-transform: uppercase;\n            letter-spacing: 2px;\n            font-size: 1.2em; /* Slightly larger for emphasis */\n            margin-top: -0.2em;\n            margin-bottom: 10px;\n            color: #3E7B27;\n        }\n\n        #lower-side {\n            padding: 2em 2em 5em 2em;\n            background: #fff;\n            display: block;\n            border-bottom-right-radius: 8px;\n            border-bottom-left-radius: 8px;\n        }\n\n        #message {\n            margin-top: -0.5em;\n            color: #757575;\n            letter-spacing: 1px;\n            font-size: 1.1em; /* Improved readability */\n            line-height: 1.5;\n        }\n\n        #contBtn {\n            position: relative;\n            top: 1.5em;\n            text-decoration: none;\n            background: #8BC34A;\n            color: #fff;\n            margin: auto;\n            padding: 0.8em 3em;\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);\n            border-radius: 25px;\n            transition: all 0.4s ease;\n            font-size: 1.1em; /* Slightly larger for better visibility */\n            text-transform: uppercase;\n        }\n\n        #contBtn:hover {\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);\n            transition: all 0.4s ease;\n        }\n    </style>\n</head>\n<body>\n<div id='card'>\n    <div id='upper-side'>\n        <svg version=\"1.1\" id=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" xml:space=\"preserve\">\n            <path d=\"M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65\n            c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382\n            c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209\n            c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091\n            c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027\n            c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865\n            C131.967,94.755,132.296,93.271,131.583,92.152z\" />\n            <circle fill=\"none\" stroke=\"#3E7B27\" stroke-width=\"5\" stroke-miterlimit=\"10\" cx=\"109.486\" cy=\"104.353\" r=\"32.53\" />\n        </svg>\n        <h3 id='status'>Success</h3>\n    </div>\n    <div id='lower-side'>\n        <p id='message'>\n            <%\n                String type = request.getParameter(\"type\");\n                if (\"login\".equals(type)) {\n            %>\n            Login successful! Welcome back to your account.\n            <% } else if (\"signup\".equals(type)) { %>\n            Congratulations! Your account has been successfully created.\n            <% } else { %>\n            An action was completed successfully.\n            <% }\n            %>\n        </p>\n        <a href=\"${pageContext.request.contextPath}/index.jsp\" id=\"contBtn\">Go to Main Page</a>\n    </div>\n</div>\n</body>\n</html>
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/userLogin/Success.jsp b/target/OnlineGroceryOrderSystem/userLogin/Success.jsp
--- a/target/OnlineGroceryOrderSystem/userLogin/Success.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/userLogin/Success.jsp	(date 1746805159009)
@@ -11,7 +11,7 @@
             margin: 0;
             padding: 0;
             height: 100vh; /* Full viewport height */
-            background-image: url('https://images6.alphacoders.com/124/1240065.jpg');
+            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');
             background-size: cover;
             background-repeat: no-repeat;
             display: flex; /* Use flexbox to center */
Index: src/main/java/servlet/LoginServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.FileUtil;\nimport model.User;\n\nimport java.io.IOException;\n\npublic class LoginServlet extends HttpServlet {\n    private String LOGGED_IN_USER_FILE;\n    private String USERS_FILE;\n\n    @Override\n    public void init() throws ServletException {\n        String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n        LOGGED_IN_USER_FILE = basePath + \"loggedInUser.txt\";\n        USERS_FILE = basePath + \"users.txt\";\n        System.out.println(\"LOGGED_IN_USER_FILE path: \" + LOGGED_IN_USER_FILE);\n        System.out.println(\"USERS_FILE path: \" + USERS_FILE);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String email = request.getParameter(\"email\");\n        String password = request.getParameter(\"password\");\n\n        if (email == null || password == null) {\n            System.out.println(\"Email or password missing: email=\" + email + \", password=\" + password);\n            request.setAttribute(\"error\", \"Email and password are required.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n            return;\n        }\n\n        System.out.println(\"Attempting login for email: \" + email);\n\n        // Read users from file to authenticate\n        for (User user : FileUtil.readUsers(USERS_FILE)) {\n            if (user.getEmail().equals(email) && user.getPassword().equals(password)) {\n                System.out.println(\"User authenticated: \" + user.toString());\n                // User authenticated, create session and write to loggedInUser.txt\n                HttpSession session = request.getSession();\n                session.setAttribute(\"user\", user);\n                try {\n                    FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);\n                    System.out.println(\"Successfully wrote to loggedInUser.txt for user: \" + user.getEmail());\n                } catch (Exception e) {\n                    System.err.println(\"Failed to write to loggedInUser.txt: \" + e.getMessage());\n                    e.printStackTrace();\n                }\n                // Redirect to Success.jsp with type=login\n                response.sendRedirect(request.getContextPath() + \"/userLogin/Success.jsp?type=login\");\n                return;\n            }\n        }\n\n        // Authentication failed\n        System.out.println(\"Authentication failed for email: \" + email);\n        request.setAttribute(\"error\", \"Invalid email or password.\");\n        request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n    }\n}
===================================================================
diff --git a/src/main/java/servlet/LoginServlet.java b/src/main/java/servlet/LoginServlet.java
--- a/src/main/java/servlet/LoginServlet.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/servlet/LoginServlet.java	(date 1746792764000)
@@ -5,29 +5,92 @@
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import jakarta.servlet.http.HttpSession;
+import model.Admin;
 import model.FileUtil;
 import model.User;
-
+import java.util.List;
 import java.io.IOException;
 
 public class LoginServlet extends HttpServlet {
     private String LOGGED_IN_USER_FILE;
     private String USERS_FILE;
+    private String ADMINS_FILE;
 
     @Override
     public void init() throws ServletException {
         String basePath = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/";
         LOGGED_IN_USER_FILE = basePath + "loggedInUser.txt";
         USERS_FILE = basePath + "users.txt";
+        ADMINS_FILE = basePath + "admins.txt";
         System.out.println("LOGGED_IN_USER_FILE path: " + LOGGED_IN_USER_FILE);
         System.out.println("USERS_FILE path: " + USERS_FILE);
+        System.out.println("ADMINS_FILE path: " + ADMINS_FILE);
     }
 
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
         String email = request.getParameter("email");
         String password = request.getParameter("password");
+        String confirmPassword = request.getParameter("confirmPassword");
+        String servletPath = request.getServletPath();
+
+        // Handle forgot password form submission
+        if ("/forgotPassword".equals(servletPath)) {
+            if (email == null || password == null || confirmPassword == null) {
+                System.out.println("Email, password, or confirm password missing: email=" + email);
+                request.setAttribute("error", "All fields are required.");
+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
+                return;
+            }
+
+            if (!password.equals(confirmPassword)) {
+                System.out.println("Passwords do not match for email: " + email);
+                request.setAttribute("error", "Passwords do not match.");
+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
+                return;
+            }
+
+            // Read users from users.txt
+            List<User> users = FileUtil.readUsers(USERS_FILE);
+            if (users == null) {
+                System.err.println("Failed to read users file: " + USERS_FILE);
+                request.setAttribute("error", "Server error. Please try again later.");
+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
+                return;
+            }
+
+            // Find user by email
+            User targetUser = null;
+            for (User user : users) {
+                if (user.getEmail().equals(email)) {
+                    targetUser = user;
+                    break;
+                }
+            }
 
+            if (targetUser == null) {
+                System.out.println("No user found with email: " + email);
+                request.setAttribute("error", "No account found with this email.");
+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
+                return;
+            }
+
+            // Update user's password
+            targetUser.setPassword(password);
+            try {
+                FileUtil.writeUsers(USERS_FILE, users);
+                System.out.println("Password updated for user: " + email);
+                request.setAttribute("success", "Password reset successfully. Please login with your new password.");
+                request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+            } catch (IOException e) {
+                System.err.println("Error writing updated users to file: " + e.getMessage());
+                request.setAttribute("error", "Error updating password. Please try again later.");
+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
+            }
+            return;
+        }
+
+        // Existing login logic
         if (email == null || password == null) {
             System.out.println("Email or password missing: email=" + email + ", password=" + password);
             request.setAttribute("error", "Email and password are required.");
@@ -36,30 +99,67 @@
         }
 
         System.out.println("Attempting login for email: " + email);
+        HttpSession session = request.getSession();
+
+        // Check if the email is for an admin (ends with .admin)
+        if (email.toLowerCase().endsWith(".admin")) {
+            // Admin login flow
+            List<Admin> admins = FileUtil.readAdmins(ADMINS_FILE);
+            if (admins == null) {
+                System.err.println("Failed to read admins file: " + ADMINS_FILE);
+                request.setAttribute("error", "Server error. Please try again later.");
+                request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+                return;
+            }
 
-        // Read users from file to authenticate
-        for (User user : FileUtil.readUsers(USERS_FILE)) {
-            if (user.getEmail().equals(email) && user.getPassword().equals(password)) {
-                System.out.println("User authenticated: " + user.toString());
-                // User authenticated, create session and write to loggedInUser.txt
-                HttpSession session = request.getSession();
-                session.setAttribute("user", user);
-                try {
-                    FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);
-                    System.out.println("Successfully wrote to loggedInUser.txt for user: " + user.getEmail());
-                } catch (Exception e) {
-                    System.err.println("Failed to write to loggedInUser.txt: " + e.getMessage());
-                    e.printStackTrace();
-                }
-                // Redirect to Success.jsp with type=login
-                response.sendRedirect(request.getContextPath() + "/userLogin/Success.jsp?type=login");
-                return;
-            }
-        }
+            for (Admin admin : admins) {
+                if (admin.getEmail().equals(email) && admin.getPassword().equals(password)) {
+                    System.out.println("Admin authenticated: " + admin.toString());
+                    System.out.println("Setting adminNumber in session: " + admin.getAdminNumber());
+                    System.out.println("Setting adminEmail in session: " + admin.getEmail());
+                    System.out.println("Setting adminRole in session: " + admin.getRole());
+                    session.setAttribute("adminEmail", admin.getEmail());
+                    session.setAttribute("adminNumber", admin.getAdminNumber());
+                    session.setAttribute("adminRole", admin.getRole());
+                    response.sendRedirect(request.getContextPath() + "/adminPages/adminSuccessful.jsp?type=login");
+                    return;
+                }
+            }
+
+            // Admin authentication failed
+            System.out.println("Admin authentication failed for email: " + email);
+            request.setAttribute("error", "Invalid email or password.");
+            request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+        } else {
+            // Regular user login flow
+            List<User> users = FileUtil.readUsers(USERS_FILE);
+            if (users == null) {
+                System.err.println("Failed to read users file: " + USERS_FILE);
+                request.setAttribute("error", "Server error. Please try again later.");
+                request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+                return;
+            }
+
+            for (User user : users) {
+                if (user.getEmail().equals(email) && user.getPassword().equals(password)) {
+                    System.out.println("User authenticated: " + user.toString());
+                    session.setAttribute("user", user);
+                    try {
+                        FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);
+                        System.out.println("Successfully wrote to loggedInUser.txt for user: " + user.getEmail());
+                    } catch (Exception e) {
+                        System.err.println("Failed to write to loggedInUser.txt: " + e.getMessage());
+                        e.printStackTrace();
+                    }
+                    response.sendRedirect(request.getContextPath() + "/userLogin/Success.jsp?type=login");
+                    return;
+                }
+            }
 
-        // Authentication failed
-        System.out.println("Authentication failed for email: " + email);
-        request.setAttribute("error", "Invalid email or password.");
-        request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+            // User authentication failed
+            System.out.println("User authentication failed for email: " + email);
+            request.setAttribute("error", "Invalid email or password.");
+            request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+        }
     }
 }
\ No newline at end of file
Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--- Order Start: OD431569765512 ---\norderNumber=OD431569765512\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6/A soma\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-16\nconfirmationDate=2025-03-16 21:10:58\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=2\nproductID=2, quantity=2\n[total]\ntotalPrice=1.60\n--- Order End ---\n\n--- Order Start: OD083338893972 ---\norderNumber=OD083338893972\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:12:33\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=3\nproductID=2, quantity=3\n[total]\ntotalPrice=2.40\n--- Order End ---\n\n--- Order Start: OD089517536572 ---\norderNumber=OD089517536572\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:51:12\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\nproductID=2, quantity=10\n[total]\ntotalPrice=8.00\n--- Order End ---\n\n--- Order Start: OD003506322177 ---\norderNumber=OD003506322177\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=00\naddress=21/6/6/A soma\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 22:33:09\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD028829163551 ---\norderNumber=OD028829163551\nuserNumber=US111111111111\nname=jayashan guruge\nphoneNum=0764350677\naddress=\"Sampatha\"\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-18\nconfirmationDate=2025-03-17 08:13:05\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD434364219642 ---\norderNumber=OD434364219642\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 12:03:51\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=2, quantity=10\n[total]\ntotalPrice=4500.00\n--- Order End ---\n\n--- Order Start: OD480097990033 ---\norderNumber=OD480097990033\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-26\nconfirmationDate=2025-03-17 12:12:04\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\n[total]\ntotalPrice=2000.00\n--- Order End ---\n\n
===================================================================
diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
--- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt	(date 1746805159017)
@@ -1,136 +1,135 @@
---- Order Start: OD431569765512 ---
-orderNumber=OD431569765512
-userNumber=US111111111111
-name=aloka warnakula
+--- Order Start: OD709699593942 ---
+orderNumber=OD709699593942
+userNumber=US021583101081
+name=aloka warnakula nethara
 phoneNum=0711641638
-address=21/6/6/A soma
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=same-day
 paymentMethod=cash on delivery
-deliveryDate=2025-03-16
-confirmationDate=2025-03-16 21:10:58
+confirmationDate=2025-03-27 12:31:31
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=2
-productID=2, quantity=2
+productID=38, quantity=1
 [total]
-totalPrice=1.60
+totalPrice=1500.00
 --- Order End ---
 
---- Order Start: OD083338893972 ---
-orderNumber=OD083338893972
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD700301789054 ---
+orderNumber=OD700301789054
+userNumber=US021583101081
+name=aloka warnakula nethara
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:12:33
-paymentStatus=Paid
+deliveryMethod=same-day
+paymentMethod=cash on delivery
+confirmationDate=2025-03-27 12:49:09
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=3
-productID=2, quantity=3
+productID=17, quantity=5
 [total]
-totalPrice=2.40
+totalPrice=6000.00
 --- Order End ---
 
---- Order Start: OD089517536572 ---
-orderNumber=OD089517536572
-userNumber=US111111111111
+--- Order Start: OD405726526801 ---
+orderNumber=OD405726526801
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:51:12
-paymentStatus=Paid
+paymentMethod=cash on delivery
+confirmationDate=2025-03-30 19:47:00
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
-productID=2, quantity=10
+productID=26, quantity=1
+productID=21, quantity=1
+productID=16, quantity=3
 [total]
-totalPrice=8.00
+totalPrice=2874.00
 --- Order End ---
 
---- Order Start: OD003506322177 ---
-orderNumber=OD003506322177
-userNumber=US111111111111
+--- Order Start: OD929166235954 ---
+orderNumber=OD929166235954
+userNumber=US021583101081
 name=aloka warnakula
-phoneNum=00
-address=21/6/6/A soma
-deliveryMethod=store pickup
+phoneNum=0711641638
+address=21/6/6A, somanada mawatha, pitumpe, padukka
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 22:33:09
+confirmationDate=2025-03-31 09:41:28
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=27, quantity=10
+productID=15, quantity=1
+productID=9, quantity=1
 [total]
-totalPrice=700.00
+totalPrice=1673.00
 --- Order End ---
 
---- Order Start: OD028829163551 ---
-orderNumber=OD028829163551
-userNumber=US111111111111
-name=jayashan guruge
-phoneNum=0764350677
-address="Sampatha"
-deliveryMethod=store pickup
-paymentMethod=cash on delivery
-deliveryDate=2025-03-18
-confirmationDate=2025-03-17 08:13:05
-paymentStatus=Pending
-deliveryStatus=Pending
-orderStatus=active
-[products]
-productID=27, quantity=10
-[total]
-totalPrice=700.00
---- Order End ---
-
---- Order Start: OD434364219642 ---
-orderNumber=OD434364219642
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD092021244402 ---
+orderNumber=OD092021244402
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 12:03:51
+confirmationDate=2025-03-31 09:48:55
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=2, quantity=10
+productID=29, quantity=1
 [total]
-totalPrice=4500.00
+totalPrice=1460.00
 --- Order End ---
 
---- Order Start: OD480097990033 ---
-orderNumber=OD480097990033
-userNumber=US111111111111
+--- Order Start: OD898037967534 ---
+orderNumber=OD898037967534
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=cash on delivery
-deliveryDate=2025-03-26
-confirmationDate=2025-03-17 12:12:04
+confirmationDate=2025-03-31 09:54:35
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
+productID=35, quantity=1
 [total]
-totalPrice=2000.00
+totalPrice=2250.00
 --- Order End ---
 
+--- Order Start: OD618211231363 ---
+orderNumber=OD618211231363
+userNumber=US021583101081
+name=aloka warnakula
+phoneNum=0711641638
+address=21/6/6A, somanada mawatha, pitumpe, padukka
+deliveryMethod=same-day
+paymentMethod=online card
+confirmationDate=2025-03-31 09:54:46
+paymentStatus=Paid
+deliveryStatus=Pending
+orderStatus=Pending
+deliveredDate=
+[products]
+productID=21, quantity=1
+[total]
+totalPrice=1164.00
+--- Order End ---
\ No newline at end of file
Index: src/main/java/servlet/LogoutServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.FileUtil;\n\nimport java.io.IOException;\n\npublic class LogoutServlet extends HttpServlet {\n    private String LOGGED_IN_USER_FILE;\n\n    @Override\n    public void init() throws ServletException {\n        String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n        LOGGED_IN_USER_FILE = basePath + \"loggedInUser.txt\";\n        System.out.println(\"LogoutServlet initialized with LOGGED_IN_USER_FILE: \" + LOGGED_IN_USER_FILE);\n    }\n\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        // Invalidate session\n        HttpSession session = request.getSession(false);\n        if (session != null) {\n            session.invalidate();\n            System.out.println(\"Session invalidated during logout.\");\n        }\n\n        // Clear loggedInUser.txt\n        try {\n            FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);\n            System.out.println(\"Cleared loggedInUser.txt during logout.\");\n        } catch (Exception e) {\n            System.err.println(\"Error clearing loggedInUser.txt during logout: \" + e.getMessage());\n        }\n\n        // Redirect to index.jsp\n        response.sendRedirect(request.getContextPath() + \"/index.jsp\");\n    }\n}
===================================================================
diff --git a/src/main/java/servlet/LogoutServlet.java b/src/main/java/servlet/LogoutServlet.java
--- a/src/main/java/servlet/LogoutServlet.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/servlet/LogoutServlet.java	(date 1746802712000)
@@ -8,6 +8,7 @@
 import model.FileUtil;
 
 import java.io.IOException;
+import java.io.PrintWriter;
 
 public class LogoutServlet extends HttpServlet {
     private String LOGGED_IN_USER_FILE;
@@ -21,22 +22,54 @@
 
     @Override
     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-        // Invalidate session
-        HttpSession session = request.getSession(false);
-        if (session != null) {
-            session.invalidate();
-            System.out.println("Session invalidated during logout.");
-        }
+        try {
+            // Invalidate session
+            HttpSession session = request.getSession(false);
+            if (session != null) {
+                // Clear admin-specific session attributes
+                session.removeAttribute("adminEmail");
+                session.removeAttribute("adminRole");
+                // Clear user-specific session attributes
+                session.removeAttribute("user");
+                session.invalidate();
+                System.out.println("Session invalidated during logout.");
+            }
 
-        // Clear loggedInUser.txt
-        try {
-            FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);
-            System.out.println("Cleared loggedInUser.txt during logout.");
-        } catch (Exception e) {
-            System.err.println("Error clearing loggedInUser.txt during logout: " + e.getMessage());
-        }
+            // Clear loggedInUser.txt (only used for regular users)
+            try {
+                FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);
+                System.out.println("Cleared loggedInUser.txt during logout.");
+            } catch (Exception e) {
+                System.err.println("Error clearing loggedInUser.txt during logout: " + e.getMessage());
+            }
 
-        // Redirect to index.jsp
-        response.sendRedirect(request.getContextPath() + "/index.jsp");
+            // Ensure no new session is created after invalidation
+            request.getSession(false); // Do not create a new session
+
+            // Get success message from query parameter
+            String successMessage = request.getParameter("success");
+            if (successMessage == null || successMessage.trim().isEmpty()) {
+                successMessage = "Logged out successfully";
+            }
+
+            // Redirect to index.jsp with success message
+            String redirectUrl = request.getContextPath() + "/index.jsp?success=" + java.net.URLEncoder.encode(successMessage, "UTF-8");
+            System.out.println("Redirecting to: " + redirectUrl);
+            response.sendRedirect(redirectUrl);
+        } catch (Exception e) {
+            // Fallback in case redirect fails
+            System.err.println("Error during logout redirect: " + e.getMessage());
+            response.setContentType("text/html");
+            PrintWriter out = response.getWriter();
+            out.println("<html><body>");
+            out.println("<h2>Error During Logout</h2>");
+            out.println("<p>An error occurred while redirecting. Please go to the <a href=\"" + request.getContextPath() + "/index.jsp\">home page</a>.</p>");
+            out.println("</body></html>");
+        }
+    }
+
+    @Override
+    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
+        doGet(request, response);
     }
 }
\ No newline at end of file
Index: src/main/webapp/data/orders.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--- Order Start: OD431569765512 ---\norderNumber=OD431569765512\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6/A soma\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-16\nconfirmationDate=2025-03-16 21:10:58\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=2\nproductID=2, quantity=2\n[total]\ntotalPrice=1.60\n--- Order End ---\n\n--- Order Start: OD083338893972 ---\norderNumber=OD083338893972\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:12:33\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=3\nproductID=2, quantity=3\n[total]\ntotalPrice=2.40\n--- Order End ---\n\n--- Order Start: OD089517536572 ---\norderNumber=OD089517536572\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 21:51:12\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\nproductID=2, quantity=10\n[total]\ntotalPrice=8.00\n--- Order End ---\n\n--- Order Start: OD003506322177 ---\norderNumber=OD003506322177\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=00\naddress=21/6/6/A soma\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-23\nconfirmationDate=2025-03-16 22:33:09\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD028829163551 ---\norderNumber=OD028829163551\nuserNumber=US111111111111\nname=jayashan guruge\nphoneNum=0764350677\naddress=\"Sampatha\"\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-18\nconfirmationDate=2025-03-17 08:13:05\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=27, quantity=10\n[total]\ntotalPrice=700.00\n--- Order End ---\n\n--- Order Start: OD434364219642 ---\norderNumber=OD434364219642\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 12:03:51\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=2, quantity=10\n[total]\ntotalPrice=4500.00\n--- Order End ---\n\n--- Order Start: OD480097990033 ---\norderNumber=OD480097990033\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-26\nconfirmationDate=2025-03-17 12:12:04\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\n[total]\ntotalPrice=2000.00\n--- Order End ---\n\n--- Order Start: OD327152255237 ---\norderNumber=OD327152255237\nuserNumber=US111111111111\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=2025-03-21\nconfirmationDate=2025-03-17 12:22:12\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=28, quantity=10\n[total]\ntotalPrice=2500.00\n--- Order End ---\n\n--- Order Start: OD256910041043 ---\norderNumber=OD256910041043\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6/A soma\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 21:15:13\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\n[total]\ntotalPrice=2000.00\n--- Order End ---\n\n--- Order Start: OD739299191466 ---\norderNumber=OD739299191466\nuserNumber=US111111111111\nname=AI.Picture8\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=online card\ndeliveryDate=2025-03-20\nconfirmationDate=2025-03-17 22:18:34\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=active\n[products]\nproductID=1, quantity=10\nproductID=2, quantity=10\n[total]\ntotalPrice=6500.00\n--- Order End ---\n\n
===================================================================
diff --git a/src/main/webapp/data/orders.txt b/src/main/webapp/data/orders.txt
--- a/src/main/webapp/data/orders.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/data/orders.txt	(date 1746502056000)
@@ -1,194 +1,185 @@
---- Order Start: OD431569765512 ---
-orderNumber=OD431569765512
-userNumber=US111111111111
+--- Order Start: OD092021244402 ---
+orderNumber=OD092021244402
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
-address=21/6/6/A soma
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=same-day
-paymentMethod=cash on delivery
-deliveryDate=2025-03-16
-confirmationDate=2025-03-16 21:10:58
-paymentStatus=Pending
+paymentMethod=online card
+deliveryDate=
+confirmationDate=2025-03-31 09:48:55
+paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=2
-productID=2, quantity=2
+productID=29, quantity=1
 [total]
-totalPrice=1.60
+totalPrice=1460.00
 --- Order End ---
 
---- Order Start: OD083338893972 ---
-orderNumber=OD083338893972
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD543785297309 ---
+orderNumber=OD543785297309
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:12:33
+deliveryDate=
+confirmationDate=2025-04-01 10:24:30
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=3
-productID=2, quantity=3
+productID=18, quantity=4
 [total]
-totalPrice=2.40
+totalPrice=96.00
 --- Order End ---
 
---- Order Start: OD089517536572 ---
-orderNumber=OD089517536572
-userNumber=US111111111111
+--- Order Start: OD261952394242 ---
+orderNumber=OD261952394242
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 21:51:12
-paymentStatus=Paid
+deliveryMethod=same-day
+paymentMethod=cash on delivery
+deliveryDate=
+confirmationDate=2025-04-01 11:28:45
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
-productID=2, quantity=10
+productID=15, quantity=1
 [total]
-totalPrice=8.00
+totalPrice=1458.00
 --- Order End ---
 
---- Order Start: OD003506322177 ---
-orderNumber=OD003506322177
-userNumber=US111111111111
+--- Order Start: OD753079415721 ---
+orderNumber=OD753079415721
+userNumber=US021583101081
 name=aloka warnakula
-phoneNum=00
-address=21/6/6/A soma
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-23
-confirmationDate=2025-03-16 22:33:09
-paymentStatus=Paid
-deliveryStatus=Pending
-orderStatus=active
-[products]
-productID=27, quantity=10
-[total]
-totalPrice=700.00
---- Order End ---
-
---- Order Start: OD028829163551 ---
-orderNumber=OD028829163551
-userNumber=US111111111111
-name=jayashan guruge
-phoneNum=0764350677
-address="Sampatha"
+phoneNum=0711641638
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-18
-confirmationDate=2025-03-17 08:13:05
+deliveryDate=
+confirmationDate=2025-04-05 16:42:44
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=27, quantity=10
+productID=27, quantity=15
+productID=41, quantity=1
 [total]
-totalPrice=700.00
+totalPrice=20511.00
 --- Order End ---
 
---- Order Start: OD434364219642 ---
-orderNumber=OD434364219642
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD113125118289 ---
+orderNumber=OD113125118289
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
+deliveryMethod=same-day
 paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 12:03:51
+deliveryDate=
+confirmationDate=2025-04-05 16:43:56
 paymentStatus=Paid
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=2, quantity=10
+productID=27, quantity=1
 [total]
-totalPrice=4500.00
+totalPrice=1337.00
 --- Order End ---
 
---- Order Start: OD480097990033 ---
-orderNumber=OD480097990033
-userNumber=US111111111111
+--- Order Start: OD959211235390 ---
+orderNumber=OD959211235390
+userNumber=US021583101081
 name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-26
-confirmationDate=2025-03-17 12:12:04
+deliveryDate=
+confirmationDate=2025-04-05 16:44:35
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
+productID=41, quantity=1
 [total]
-totalPrice=2000.00
+totalPrice=456.00
 --- Order End ---
 
---- Order Start: OD327152255237 ---
-orderNumber=OD327152255237
-userNumber=US111111111111
-name=aloka warnakula
+--- Order Start: OD529482646567 ---
+orderNumber=OD529482646567
+userNumber=US021583101081
+name=aloka warnakula 
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
 paymentMethod=cash on delivery
-deliveryDate=2025-03-21
-confirmationDate=2025-03-17 12:22:12
+confirmationDate=2025-05-02 11:15:12
 paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=28, quantity=10
+productID=49, quantity=1
 [total]
-totalPrice=2500.00
+totalPrice=70.00
 --- Order End ---
 
---- Order Start: OD256910041043 ---
-orderNumber=OD256910041043
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD176924944754 ---
+orderNumber=OD176924944754
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
-address=21/6/6/A soma
+address=21/6/6A, somanada mawatha, pitumpe, padukka
 deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 21:15:13
-paymentStatus=Paid
+paymentMethod=cash on delivery
+confirmationDate=2025-05-04 19:50:39
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
+productID=27, quantity=3
+productID=15, quantity=1
+productID=5, quantity=1
+productID=9, quantity=1
+productID=2, quantity=1
+productID=22, quantity=1
+productID=29, quantity=1
+productID=25, quantity=1
 [total]
-totalPrice=2000.00
+totalPrice=8803.00
 --- Order End ---
 
---- Order Start: OD739299191466 ---
-orderNumber=OD739299191466
-userNumber=US111111111111
-name=AI.Picture8
+--- Order Start: OD997161013374 ---
+orderNumber=OD997161013374
+userNumber=US021583101081
+name=aloka warnakula
 phoneNum=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-deliveryMethod=store pickup
-paymentMethod=online card
-deliveryDate=2025-03-20
-confirmationDate=2025-03-17 22:18:34
-paymentStatus=Paid
+deliveryMethod=same-day
+paymentMethod=cash on delivery
+confirmationDate=2025-05-06 08:57:36
+paymentStatus=Pending
 deliveryStatus=Pending
-orderStatus=active
+orderStatus=Pending
+deliveredDate=
 [products]
-productID=1, quantity=10
-productID=2, quantity=10
+productID=15, quantity=1
 [total]
-totalPrice=6500.00
+totalPrice=1458.00
 --- Order End ---
 
Index: src/main/webapp/css/logIn.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Poppins\", sans-serif;\n}\nbody {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #6EC207;\n    padding: 30px;\n}\n.container {\n    position: relative;\n    max-width: 850px;\n    width: 100%;\n    background: #fff;\n    padding: 40px 30px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    perspective: 2700px;\n}\n.container .cover {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 50%;\n    z-index: 98;\n    transition: all 1s ease;\n    transform-origin: left;\n    transform-style: preserve-3d;\n    backface-visibility: hidden;\n}\n.container #flip:checked ~ .cover {\n    transform: rotateY(-180deg);\n}\n.container #flip:checked ~ .forms .login-form {\n    pointer-events: none;\n}\n.container .cover .front,\n.container .cover .back {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n.cover .back {\n    transform: rotateY(180deg);\n}\n.container .cover img {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    z-index: 10;\n}\n.container .cover .text {\n    position: absolute;\n    z-index: 10;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.container .cover .text::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    opacity: 0.5;\n    background: #0C9463;\n}\n.cover .text .text-1,\n.cover .text .text-2 {\n    z-index: 20;\n    font-size: 26px;\n    font-weight: 600;\n    color: #fff;\n    text-align: center;\n}\n.cover .text .text-2 {\n    font-size: 15px;\n    font-weight: 500;\n}\n.container .forms {\n    height: 100%;\n    width: 100%;\n    background: #fff;\n}\n.container .form-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.form-content .login-form,\n.form-content .signup-form {\n    width: calc(100% / 2 - 25px);\n}\n.forms .form-content .title {\n    position: relative;\n    font-size: 24px;\n    font-weight: 500;\n    color: #333;\n}\n.forms .form-content .title:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 3px;\n    width: 25px;\n    background: #3E7B27;\n}\n.forms .signup-form .title:before {\n    width: 20px;\n}\n.forms .form-content .input-boxes {\n    margin-top: 30px;\n}\n.forms .form-content .input-box {\n    display: flex;\n    align-items: center;\n    height: 50px;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n}\n.form-content .input-box input {\n    height: 100%;\n    width: 100%;\n    outline: none;\n    border: none;\n    padding: 0 30px;\n    font-size: 16px;\n    font-weight: 500;\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n}\n.form-content .input-box input:focus,\n.form-content .input-box input:valid {\n    border-color: #3E7B27;\n}\n.form-content .input-box i {\n    position: absolute;\n    color: #3E7B27;\n    font-size: 17px;\n}\n.forms .form-content .text {\n    font-size: 14px;\n    font-weight: 500;\n    color: #3E7B27;\n}\n.forms .form-content .text a {\n    color:#3E7B27;\n    text-decoration: none;\n}\n.forms .form-content .text a:hover {\n    text-decoration: underline;\n}\n.forms .form-content .button {\n    color: #fff;\n    margin-top: 40px;\n}\n.forms .form-content .button input {\n    color: #fff;\n    background: #5CB338;\n    border-radius: 6px;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.4s ease;\n}\n.forms .form-content .button input:hover {\n    background: #3E7B27;\n}\n.forms .form-content label {\n    color: #191919;\n    cursor: pointer;\n}\n.forms .form-content label:hover {\n    text-decoration: underline;\n}\n.forms .form-content .login-text,\n.forms .form-content .sign-up-text {\n    text-align: center;\n    margin-top: 25px;\n}\n.container #flip {\n    display: none;\n}\n@media (max-width: 730px) {\n    .container .cover {\n        display: none;\n    }\n    .form-content .login-form,\n    .form-content .signup-form {\n        width: 100%;\n    }\n    .form-content .signup-form {\n        display: none;\n    }\n    .container #flip:checked ~ .forms .signup-form {\n        display: block;\n    }\n    .container #flip:checked ~ .forms .login-form {\n        display: none;\n    }\n}
===================================================================
diff --git a/src/main/webapp/css/logIn.css b/src/main/webapp/css/logIn.css
--- a/src/main/webapp/css/logIn.css	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/css/logIn.css	(date 1746798260000)
@@ -6,11 +6,12 @@
     font-family: "Poppins", sans-serif;
 }
 body {
+    background: url("https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg");
     min-height: 100vh;
     display: flex;
     align-items: center;
     justify-content: center;
-    background: #6EC207;
+    /*background: #6EC207;*/
     padding: 30px;
 }
 .container {
Index: src/main/webapp/data/items.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1,Produce,Apple,200.00,https://st.depositphotos.com/1002351/1943/i/950/depositphotos_19439353-stock-photo-red-apple.jpg,10,Fresh and crisp apples perfect for snacking or baking\n2,Produce,Banana,450.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Banana-Single.jpg/2324px-Banana-Single.jpg,0,Sweet and ripe bananas great for a quick energy boost\n27,Produce,Orange,70.00,https://media.istockphoto.com/id/1194662606/photo/orange-isolated-on-white-background-clipping-path-full-depth-of-field.jpg?s=612x612&w=0&k=20&c=rhITc7KJiHKvRe_aVnC_3Tjae4B67MrvAcH6HpxC8xM=,0,Sweet and tasty fucker\n28,Produce,Water Mellon,250.00,https://img.goodfon.com/original/5000x3125/c/3b/arbuz-lakomstvo-iagoda-belyi-fon.jpg,0,Tasty mellon\n3,Dairy,Milk,2.00,https://i.pinimg.com/736x/9b/29/22/9b2922288ec6e3b7522bfbee422b3593.jpg,5,Creamy and fresh milk sourced from local farms\n4,Proteins,Chicken,5.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/chicken-image.jpg,0,Lean chicken breast perfect for grilling\n5,Proteins,Salmon,8.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Salmon.jpg/2324px-Salmon.jpg,0,Fresh salmon rich in omega-3\n6,Proteins,Tofu,3.00,https://i.pinimg.com/736x/9b/29/22/tofu-image.jpg,0,Organic tofu great for vegetarian dishes\n7,Proteins,Beef,6.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/beef-image.jpg,0,Grass-fed beef for a hearty meal\n8,Proteins,Pork,4.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pork.jpg/2324px-Pork.jpg,0,Tender pork ideal for roasting\n9,Dairy,Cheese,3.50,https://i.pinimg.com/736x/9b/29/22/cheese-image.jpg,0,Cheddar cheese aged to perfection\n10,Dairy,Yogurt,1.50,https://c4.wallpaperflare.com/wallpaper/471/516/832/yogurt-image.jpg,0,Creamy yogurt with live cultures\n11,Dairy,Butter,2.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Butter.jpg/2324px-Butter.jpg,0,Unsalted butter for baking\n12,Dairy,Cream,2.00,https://i.pinimg.com/736x/9b/29/22/cream-image.jpg,0,Heavy cream for desserts\n13,Dairy,Eggs,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/eggs-image.jpg,0,Free-range eggs\n14,Bakery,Bread,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bread.jpg/2324px-Bread.jpg,0,Freshly baked sourdough bread\n15,Bakery,Croissant,1.00,https://i.pinimg.com/736x/9b/29/22/croissant-image.jpg,0,Buttery and flaky croissants\n16,Bakery,Muffin,1.20,https://c4.wallpaperflare.com/wallpaper/471/516/832/muffin-image.jpg,0,Blueberry muffins fresh from the oven\n17,Bakery,Bagel,1.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bagel.jpg/2324px-Bagel.jpg,0,Chewy bagels perfect for breakfast\n18,Bakery,Cake,5.00,https://i.pinimg.com/736x/9b/29/22/cake-image.jpg,0,Chocolate cake for celebrations\n19,Pantry,Rice,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/rice-image.jpg,0,Long-grain white rice\n20,Pantry,Pasta,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pasta.jpg/2324px-Pasta.jpg,0,Italian spaghetti for classic dishes\n21,Pantry,Olive Oil,4.00,https://i.pinimg.com/736x/9b/29/22/olive-oil-image.jpg,0,Extra virgin olive oil\n22,Pantry,Flour,1.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/flour-image.jpg,0,All-purpose flour for baking\n23,Snacks,Chips,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Chips.jpg/2324px-Chips.jpg,0,Crispy potato chips\n24,Snacks,Nuts,3.00,https://i.pinimg.com/736x/9b/29/22/nuts-image.jpg,0,Mixed nuts for a healthy snack\n25,Snacks,Cookies,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/cookies-image.jpg,0,Chocolate chip cookies\n26,Snacks,Crackers,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Crackers.jpg/2324px-Crackers.jpg,0,Whole-grain crackers\n
===================================================================
diff --git a/src/main/webapp/data/items.txt b/src/main/webapp/data/items.txt
--- a/src/main/webapp/data/items.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/data/items.txt	(date 1746800540000)
@@ -1,28 +1,50 @@
-1,Produce,Apple,200.00,https://st.depositphotos.com/1002351/1943/i/950/depositphotos_19439353-stock-photo-red-apple.jpg,10,Fresh and crisp apples perfect for snacking or baking
-2,Produce,Banana,450.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Banana-Single.jpg/2324px-Banana-Single.jpg,0,Sweet and ripe bananas great for a quick energy boost
-27,Produce,Orange,70.00,https://media.istockphoto.com/id/1194662606/photo/orange-isolated-on-white-background-clipping-path-full-depth-of-field.jpg?s=612x612&w=0&k=20&c=rhITc7KJiHKvRe_aVnC_3Tjae4B67MrvAcH6HpxC8xM=,0,Sweet and tasty fucker
-28,Produce,Water Mellon,250.00,https://img.goodfon.com/original/5000x3125/c/3b/arbuz-lakomstvo-iagoda-belyi-fon.jpg,0,Tasty mellon
-3,Dairy,Milk,2.00,https://i.pinimg.com/736x/9b/29/22/9b2922288ec6e3b7522bfbee422b3593.jpg,5,Creamy and fresh milk sourced from local farms
-4,Proteins,Chicken,5.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/chicken-image.jpg,0,Lean chicken breast perfect for grilling
-5,Proteins,Salmon,8.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Salmon.jpg/2324px-Salmon.jpg,0,Fresh salmon rich in omega-3
-6,Proteins,Tofu,3.00,https://i.pinimg.com/736x/9b/29/22/tofu-image.jpg,0,Organic tofu great for vegetarian dishes
-7,Proteins,Beef,6.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/beef-image.jpg,0,Grass-fed beef for a hearty meal
-8,Proteins,Pork,4.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pork.jpg/2324px-Pork.jpg,0,Tender pork ideal for roasting
-9,Dairy,Cheese,3.50,https://i.pinimg.com/736x/9b/29/22/cheese-image.jpg,0,Cheddar cheese aged to perfection
-10,Dairy,Yogurt,1.50,https://c4.wallpaperflare.com/wallpaper/471/516/832/yogurt-image.jpg,0,Creamy yogurt with live cultures
-11,Dairy,Butter,2.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Butter.jpg/2324px-Butter.jpg,0,Unsalted butter for baking
-12,Dairy,Cream,2.00,https://i.pinimg.com/736x/9b/29/22/cream-image.jpg,0,Heavy cream for desserts
-13,Dairy,Eggs,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/eggs-image.jpg,0,Free-range eggs
-14,Bakery,Bread,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bread.jpg/2324px-Bread.jpg,0,Freshly baked sourdough bread
-15,Bakery,Croissant,1.00,https://i.pinimg.com/736x/9b/29/22/croissant-image.jpg,0,Buttery and flaky croissants
-16,Bakery,Muffin,1.20,https://c4.wallpaperflare.com/wallpaper/471/516/832/muffin-image.jpg,0,Blueberry muffins fresh from the oven
-17,Bakery,Bagel,1.00,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Bagel.jpg/2324px-Bagel.jpg,0,Chewy bagels perfect for breakfast
-18,Bakery,Cake,5.00,https://i.pinimg.com/736x/9b/29/22/cake-image.jpg,0,Chocolate cake for celebrations
-19,Pantry,Rice,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/rice-image.jpg,0,Long-grain white rice
-20,Pantry,Pasta,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Pasta.jpg/2324px-Pasta.jpg,0,Italian spaghetti for classic dishes
-21,Pantry,Olive Oil,4.00,https://i.pinimg.com/736x/9b/29/22/olive-oil-image.jpg,0,Extra virgin olive oil
-22,Pantry,Flour,1.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/flour-image.jpg,0,All-purpose flour for baking
-23,Snacks,Chips,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Chips.jpg/2324px-Chips.jpg,0,Crispy potato chips
-24,Snacks,Nuts,3.00,https://i.pinimg.com/736x/9b/29/22/nuts-image.jpg,0,Mixed nuts for a healthy snack
-25,Snacks,Cookies,2.00,https://c4.wallpaperflare.com/wallpaper/471/516/832/cookies-image.jpg,0,Chocolate chip cookies
-26,Snacks,Crackers,1.50,https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Crackers.jpg/2324px-Crackers.jpg,0,Whole-grain crackers
+1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a
+2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
+3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
+4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
+6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
+7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
+8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
+9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g
+10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g
+11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g
+12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g
+13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g
+14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g
+15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g
+16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
+17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
+18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
+20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
+21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
+22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
+23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
+24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
+25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
+28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
+29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
+30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg
+31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg
+32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g
+33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg
+34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg
+35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg
+36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg
+37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg
+38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg
+39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg
+40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg
+42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg
+43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g
+44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g
+45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g
+46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs
+47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs
+48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g
+41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.
+49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake
+50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg
Index: src/main/webapp/data/users.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--- User Start: US143000078979 ---\nuserNumber=US143000078979\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\npassword=123456\n--- User End ---\n\n--- User Start: US434197982790 ---\nuserNumber=US434197982790\nfullName=tester123\nemail=tester@gmail.com\nphoneNumber=123456\naddress=tester,home\npassword=123456\n--- User End ---\n\n--- User Start: US860888769492 ---\nuserNumber=US860888769492\nfullName=jayashan guruge\nemail=jguruge2021@gmail.com\nphoneNumber=0764350677\naddress=\"Sampatha\"\npassword=12345678\n--- User End ---\n\n
===================================================================
diff --git a/src/main/webapp/data/users.txt b/src/main/webapp/data/users.txt
--- a/src/main/webapp/data/users.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/webapp/data/users.txt	(date 1746798993000)
@@ -1,27 +1,40 @@
---- User Start: US143000078979 ---
-userNumber=US143000078979
-fullName=aloka warnakula
+--- User Start: US021583101081 ---
+username=alokawarnakula77@gmail.com
+password=12345678A@a
+userNumber=US021583101081
+fullName=aloka warnakula mn
 email=alokawarnakula77@gmail.com
 phoneNumber=0711641638
 address=21/6/6A, somanada mawatha, pitumpe, padukka
-password=123456
 --- User End ---
 
---- User Start: US434197982790 ---
-userNumber=US434197982790
-fullName=tester123
-email=tester@gmail.com
-phoneNumber=123456
-address=tester,home
-password=123456
+--- User Start: US181627987900 ---
+username=user@gmail.com
+password=123
+userNumber=US181627987900
+fullName=user
+email=user@gmail.com
+phoneNumber=0000000000
+address=xxxxxxxyyyyyyyzzzzzzzz
 --- User End ---
 
---- User Start: US860888769492 ---
-userNumber=US860888769492
+--- User Start: US030548082274 ---
+username=jguruge2021@gmail.com
+password=123456
+userNumber=US030548082274
 fullName=jayashan guruge
 email=jguruge2021@gmail.com
 phoneNumber=0764350677
 address="Sampatha"
-password=12345678
+--- User End ---
+
+--- User Start: US155435209024 ---
+username=abc@gmail.com
+password=123
+userNumber=US155435209024
+fullName=abc
+email=abc@gmail.com
+phoneNumber=4553
+address=34
 --- User End ---
 
Index: src/main/java/servlet/RegisterServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.FileUtil;\nimport model.User;\n\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Random;\nimport java.util.List;\n\npublic class RegisterServlet extends HttpServlet {\n    private static final String USERS_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/users.txt\";\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String fullName = request.getParameter(\"fullName\");\n        String email = request.getParameter(\"email\");\n        String phoneNumber = request.getParameter(\"phoneNumber\");\n        String address = request.getParameter(\"address\");\n        String password = request.getParameter(\"password\");\n\n        if (fullName == null || email == null || phoneNumber == null || address == null || password == null) {\n            request.setAttribute(\"error\", \"All fields are required.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n            return;\n        }\n\n        List<User> users = FileUtil.readUsers(USERS_FILE);\n        System.out.println(\"Checking email: \" + email + \", existing users: \" + users); // Debug log\n        if (users.stream().anyMatch(u -> u.getEmail().equals(email))) {\n            System.out.println(\"Email already registered: \" + email); // Debug log\n            request.setAttribute(\"error\", \"Email already registered.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n            return;\n        }\n\n        String userNumber;\n        do {\n            userNumber = \"US\" + String.format(\"%012d\", Math.abs(new Random().nextLong() % 1000000000000L));\n        } while (!FileUtil.isUserNumberUnique(userNumber, USERS_FILE));\n\n        User user = new User(userNumber, fullName, email, phoneNumber, address, password);\n\n        synchronized (this) {\n            try (BufferedWriter writer = new BufferedWriter(new FileWriter(USERS_FILE, true))) {\n                writer.write(\"--- User Start: \" + userNumber + \" ---\\n\");\n                writer.write(\"userNumber=\" + userNumber + \"\\n\");\n                writer.write(\"fullName=\" + fullName + \"\\n\");\n                writer.write(\"email=\" + email + \"\\n\");\n                writer.write(\"phoneNumber=\" + phoneNumber + \"\\n\");\n                writer.write(\"address=\" + address + \"\\n\");\n                writer.write(\"password=\" + password + \"\\n\");\n                writer.write(\"--- User End ---\\n\\n\");\n            }\n        }\n\n        // Set user in session before redirecting to Success.jsp\n        HttpSession session = request.getSession();\n        session.setAttribute(\"user\", user);\n        response.sendRedirect(request.getContextPath() + \"/userLogin/Success.jsp?type=signup\");\n    }\n}
===================================================================
diff --git a/src/main/java/servlet/RegisterServlet.java b/src/main/java/servlet/RegisterServlet.java
--- a/src/main/java/servlet/RegisterServlet.java	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
+++ b/src/main/java/servlet/RegisterServlet.java	(date 1742481113000)
@@ -8,14 +8,13 @@
 import model.FileUtil;
 import model.User;
 
-import java.io.BufferedWriter;
-import java.io.FileWriter;
 import java.io.IOException;
-import java.util.Random;
 import java.util.List;
+import java.util.Random;
 
 public class RegisterServlet extends HttpServlet {
     private static final String USERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/users.txt";
+    private static final String LOGGED_IN_USER_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
 
     @Override
     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
@@ -25,13 +24,20 @@
         String address = request.getParameter("address");
         String password = request.getParameter("password");
 
-        if (fullName == null || email == null || phoneNumber == null || address == null || password == null) {
+        if (fullName == null || email == null || phoneNumber == null || address == null || password == null ||
+                fullName.trim().isEmpty() || email.trim().isEmpty() || phoneNumber.trim().isEmpty() || address.trim().isEmpty() || password.trim().isEmpty()) {
             request.setAttribute("error", "All fields are required.");
             request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
             return;
         }
 
         List<User> users = FileUtil.readUsers(USERS_FILE);
+        if (users == null) {
+            request.setAttribute("error", "Error reading user data. Please try again later.");
+            request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+            return;
+        }
+
         System.out.println("Checking email: " + email + ", existing users: " + users); // Debug log
         if (users.stream().anyMatch(u -> u.getEmail().equals(email))) {
             System.out.println("Email already registered: " + email); // Debug log
@@ -45,24 +51,34 @@
             userNumber = "US" + String.format("%012d", Math.abs(new Random().nextLong() % 1000000000000L));
         } while (!FileUtil.isUserNumberUnique(userNumber, USERS_FILE));
 
-        User user = new User(userNumber, fullName, email, phoneNumber, address, password);
+        // Use email as username
+        String username = email;
+        User user = new User(username, password, userNumber, fullName, email, phoneNumber, address);
 
+        // Add the new user to the list and write to users.txt
         synchronized (this) {
-            try (BufferedWriter writer = new BufferedWriter(new FileWriter(USERS_FILE, true))) {
-                writer.write("--- User Start: " + userNumber + " ---\n");
-                writer.write("userNumber=" + userNumber + "\n");
-                writer.write("fullName=" + fullName + "\n");
-                writer.write("email=" + email + "\n");
-                writer.write("phoneNumber=" + phoneNumber + "\n");
-                writer.write("address=" + address + "\n");
-                writer.write("password=" + password + "\n");
-                writer.write("--- User End ---\n\n");
+            users.add(user);
+            try {
+                FileUtil.writeUsers(USERS_FILE, users);
+                System.out.println("Added new user to users.txt: " + user.toString());
+            } catch (IOException e) {
+                System.err.println("Error writing user to file: " + e.getMessage());
+                request.setAttribute("error", "Error saving user data. Please try again later.");
+                request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
+                return;
             }
         }
 
         // Set user in session before redirecting to Success.jsp
         HttpSession session = request.getSession();
         session.setAttribute("user", user);
+        System.out.println("Set user in session: " + user.toString());
+
+        // Write to loggedInUser.txt
+        FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);
+        System.out.println("Wrote new user to loggedInUser.txt: " + user.toString());
+
+        // Redirect to success page
         response.sendRedirect(request.getContextPath() + "/userLogin/Success.jsp?type=signup");
     }
 }
\ No newline at end of file
