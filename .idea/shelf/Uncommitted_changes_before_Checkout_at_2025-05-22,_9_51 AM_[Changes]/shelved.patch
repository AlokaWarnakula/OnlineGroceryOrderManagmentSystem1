Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_10PM__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_10PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_10PM__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_10PM__Changes_1.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,49 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1" date="1746805220873" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2025-05-09, 9:10 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/servlet/LogoutServlet.class" />
-    <option name="AFTER_PATH" value="target/classes/servlet/LogoutServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/LogoutServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/CartServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/CartServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/CartServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/model/User.class" />
-    <option name="AFTER_PATH" value="target/classes/model/User.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/User.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/model/FileUtil$Order.class" />
-    <option name="AFTER_PATH" value="target/classes/model/FileUtil$Order.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/FileUtil$Order.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/model/FileUtil.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/model/FileUtil.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/FileUtil.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/OrderServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/RegisterServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/RegisterServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/RegisterServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/OnlineGroceryOrderSystem.war" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/servlet/LoginServlet.class" />
-    <option name="AFTER_PATH" value="target/classes/servlet/LoginServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/LoginServlet.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14__10_37AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14__10_37AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14__10_37AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14__10_37AM__Changes_.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,34 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]" date="1747199251539" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2025-05-14, 10:37 AM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$3.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$3.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/OrderAdminServlet$3.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$1.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/OrderAdminServlet$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$2.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$2.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/OrderAdminServlet$2.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/OrderAdminServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/AdminServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/AdminServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/AdminServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/OnlineGroceryOrderSystem.war" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/shelved.patch	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,323 +0,0 @@
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ /dev/null	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-@@ -1,136 +0,0 @@
----- Order Start: OD431569765512 ---
--orderNumber=OD431569765512
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6/A soma
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=2025-03-16
--confirmationDate=2025-03-16 21:10:58
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=2
--productID=2, quantity=2
--[total]
--totalPrice=1.60
----- Order End ---
--
----- Order Start: OD083338893972 ---
--orderNumber=OD083338893972
--userNumber=US111111111111
--name=AI.Picture8
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 21:12:33
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=3
--productID=2, quantity=3
--[total]
--totalPrice=2.40
----- Order End ---
--
----- Order Start: OD089517536572 ---
--orderNumber=OD089517536572
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 21:51:12
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=10
--productID=2, quantity=10
--[total]
--totalPrice=8.00
----- Order End ---
--
----- Order Start: OD003506322177 ---
--orderNumber=OD003506322177
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=00
--address=21/6/6/A soma
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 22:33:09
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=27, quantity=10
--[total]
--totalPrice=700.00
----- Order End ---
--
----- Order Start: OD028829163551 ---
--orderNumber=OD028829163551
--userNumber=US111111111111
--name=jayashan guruge
--phoneNum=0764350677
--address="Sampatha"
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=2025-03-18
--confirmationDate=2025-03-17 08:13:05
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=27, quantity=10
--[total]
--totalPrice=700.00
----- Order End ---
--
----- Order Start: OD434364219642 ---
--orderNumber=OD434364219642
--userNumber=US111111111111
--name=AI.Picture8
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-20
--confirmationDate=2025-03-17 12:03:51
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=2, quantity=10
--[total]
--totalPrice=4500.00
----- Order End ---
--
----- Order Start: OD480097990033 ---
--orderNumber=OD480097990033
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=2025-03-26
--confirmationDate=2025-03-17 12:12:04
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=10
--[total]
--totalPrice=2000.00
----- Order End ---
--
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ /dev/null	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-@@ -1,5 +0,0 @@
--userNumber=US143000078979
--fullName=aloka warnakula
--email=alokawarnakula77@gmail.com
--phoneNumber=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: target/OnlineGroceryOrderSystem/WEB-INF/web.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for UserProfileServlet -->\n  <servlet>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <servlet-class>servlet.UserProfileServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserProfileServlet -->\n  <servlet-mapping>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <url-pattern>/UserProfileServlet</url-pattern>\n  </servlet-mapping>\n\n  <servlet>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <url-pattern>/UserProfileSearchServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Add AdminServlet mapping -->\n  <servlet>\n    <servlet-name>AdminServlet</servlet-name>\n    <servlet-class>servlet.AdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>AdminServlet</servlet-name>\n    <url-pattern>/AdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Define the OrderAdminServlet -->\n  <servlet>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <servlet-class>servlet.OrderAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <url-pattern>/OrderAdminServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for StockAdminServlet -->\n  <servlet>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <servlet-class>servlet.StockAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <url-pattern>/StockAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for ProductAdminServlet -->\n  <servlet>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <servlet-class>servlet.ProductAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <url-pattern>/ProductAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for UserAdminServlet -->\n  <servlet>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <servlet-class>servlet.UserAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserAdminServlet -->\n  <servlet-mapping>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <url-pattern>/UserAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for DealServlet -->\n  <servlet>\n    <servlet-name>DealServlet</servlet-name>\n    <servlet-class>servlet.DealServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for DealServlet -->\n  <servlet-mapping>\n    <servlet-name>DealServlet</servlet-name>\n    <url-pattern>/DealServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml
---- a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(date 1746805782514)
-@@ -74,98 +74,6 @@
-     <url-pattern>/LogoutServlet</url-pattern>
-   </servlet-mapping>
- 
--  <!-- Servlet Definition for UserProfileServlet -->
--  <servlet>
--    <servlet-name>UserProfileServlet</servlet-name>
--    <servlet-class>servlet.UserProfileServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for UserProfileServlet -->
--  <servlet-mapping>
--    <servlet-name>UserProfileServlet</servlet-name>
--    <url-pattern>/UserProfileServlet</url-pattern>
--  </servlet-mapping>
--
--  <servlet>
--    <servlet-name>UserProfileSearchServlet</servlet-name>
--    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>UserProfileSearchServlet</servlet-name>
--    <url-pattern>/UserProfileSearchServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Add AdminServlet mapping -->
--  <servlet>
--    <servlet-name>AdminServlet</servlet-name>
--    <servlet-class>servlet.AdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>AdminServlet</servlet-name>
--    <url-pattern>/AdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Define the OrderAdminServlet -->
--  <servlet>
--    <servlet-name>OrderAdminServlet</servlet-name>
--    <servlet-class>servlet.OrderAdminServlet</servlet-class>
--  </servlet>
--
--  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->
--  <servlet-mapping>
--    <servlet-name>OrderAdminServlet</servlet-name>
--    <url-pattern>/OrderAdminServlet</url-pattern>
--  </servlet-mapping>
--
--  <!-- Servlet Definition for StockAdminServlet -->
--  <servlet>
--    <servlet-name>StockAdminServlet</servlet-name>
--    <servlet-class>servlet.StockAdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>StockAdminServlet</servlet-name>
--    <url-pattern>/StockAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for ProductAdminServlet -->
--  <servlet>
--    <servlet-name>ProductAdminServlet</servlet-name>
--    <servlet-class>servlet.ProductAdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>ProductAdminServlet</servlet-name>
--    <url-pattern>/ProductAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for UserAdminServlet -->
--  <servlet>
--    <servlet-name>UserAdminServlet</servlet-name>
--    <servlet-class>servlet.UserAdminServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for UserAdminServlet -->
--  <servlet-mapping>
--    <servlet-name>UserAdminServlet</servlet-name>
--    <url-pattern>/UserAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for DealServlet -->
--  <servlet>
--    <servlet-name>DealServlet</servlet-name>
--    <servlet-class>servlet.DealServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for DealServlet -->
--  <servlet-mapping>
--    <servlet-name>DealServlet</servlet-name>
--    <url-pattern>/DealServlet</url-pattern>
--  </servlet-mapping>
--
- 
-   <!-- Optional: Welcome file list -->
-   <welcome-file-list>
-Index: src/main/webapp/data/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/loggedInUser.txt b/src/main/webapp/data/loggedInUser.txt
---- a/src/main/webapp/data/loggedInUser.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/src/main/webapp/data/loggedInUser.txt	(date 1746805799498)
-@@ -1,0 +1,5 @@
-+userNumber=US143000078979
-+fullName=aloka warnakula
-+email=alokawarnakula77@gmail.com
-+phoneNumber=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page import=\"java.util.List\" %>\n<%@ page import=\"java.util.ArrayList\" %>\n<%@ page import=\"model.GroceryItem\" %>\n<%@ page import=\"model.User\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Cart Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n</head>\n<body>\n<%\n  User loggedInUser = (User) session.getAttribute(\"user\");\n  if (loggedInUser == null) {\n    response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=Please log in to access the cart.\");\n    return;\n  }\n\n  List<GroceryItem> items = (List<GroceryItem>) request.getAttribute(\"items\");\n  if (items == null) {\n    items = new ArrayList<>();\n  }\n  String category = request.getParameter(\"category\");\n  if (category == null || category.isEmpty()) {\n    category = \"Produce\"; // Default category\n  }\n%>\n<header>\n  <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n  <nav class=\"navbar\">\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\">Produce</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\">Proteins</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\">Dairy</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\">Bakery</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\">Pantry</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\">Snacks</a>\n  </nav>\n  <div class=\"search-container\">\n    <form class=\"search-bar\" id=\"search-form\" action=\"${pageContext.request.contextPath}/CartServlet\" method=\"get\">\n      <input type=\"text\" placeholder=\"Search groceries...\" name=\"name\" id=\"name\">\n      <button type=\"submit\" class=\"search-btn\">Search</button>\n      <span class=\"dropdown-toggle\" id=\"dropdown-toggle\">▼</span>\n    </form>\n    <div class=\"dropdown-menu\" id=\"dropdown-menu\">\n      <div class=\"filter-item\">\n        <label for=\"category\">Category:</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"\">All</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Proteins\">Proteins</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Bakery\">Bakery</option>\n          <option value=\"Pantry\">Pantry</option>\n          <option value=\"Snacks\">Snacks</option>\n        </select>\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"minPrice\">Min Price:</label>\n        <input type=\"number\" name=\"minPrice\" id=\"minPrice\" min=\"0\" step=\"0.01\" placeholder=\"0.00\">\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"maxPrice\">Max Price:</label>\n        <input type=\"number\" name=\"maxPrice\" id=\"maxPrice\" min=\"0\" step=\"0.01\" placeholder=\"100.00\">\n      </div>\n    </div>\n  </div>\n  <div class=\"cart-icon\" id=\"cart-icon\">\n    <i class=\"fas fa-shopping-cart\"></i>\n    <span class=\"cart-item-count\">0</span>\n  </div>\n</header>\n<section class=\"shop\">\n  <h2 class=\"section-title\">Shop <%= category %></h2>\n  <div class=\"product-content\">\n    <%\n      if (items.isEmpty()) {\n        out.println(\"<p>No products available in the \" + category + \" category.</p>\");\n      } else {\n        for (GroceryItem item : items) {\n          boolean outOfStock = item.getQuantity() <= 0;\n    %>\n    <div class=\"product-box\">\n      <div class=\"img-box\">\n        <a href=\"${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>\">\n          <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n        </a>\n      </div>\n      <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n      <div class=\"price-and-cart\">\n        <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n        <% if (outOfStock) { %>\n        <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n        <% } else { %>\n        <button class=\"add-cart\" data-item-id=\"<%= item.getProductID() %>\"><i class=\"fas fa-shopping-cart\"></i></button>\n        <% } %>\n      </div>\n    </div>\n    <%\n        }\n      }\n    %>\n  </div>\n</section>\n<div class=\"cart\">\n  <h2 class=\"cart-title\">Your Cart</h2>\n  <i class=\"ri-close-line\" id=\"cart-close\"></i>\n  <div class=\"cart-content\">\n    <p>Your cart is empty.</p>\n  </div>\n  <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n    <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n    <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n  </div>\n</div>\n<script>\n  window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
---- a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(date 1746805782515)
-@@ -122,4 +122,4 @@
- </script>
- <script src="${pageContext.request.contextPath}/js/cart.js"></script>
- </body>
--</html>
-\ No newline at end of file
-+</html> <!--cart -->
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover\">\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html> <!-- LogIn branch-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/login.jsp b/target/OnlineGroceryOrderSystem/userLogin/login.jsp
---- a/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(date 1746805782511)
-@@ -8,7 +8,7 @@
-     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
-     <meta name="viewport" content="width=device-width, initial-scale=1.0">
- </head>
--<body style="background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover">
-+<body>
- <div class="container">
-     <input type="checkbox" id="flip">
-     <div class="cover">
-@@ -108,4 +108,4 @@
-     </div>
- </div>
- </body>
--</html> <!-- LogIn branch-->
-\ No newline at end of file
-+</html>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]1" date="1746804857917" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/classes/servlet/LogoutServlet.class" />
-    <option name="AFTER_PATH" value="target/classes/servlet/LogoutServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/LogoutServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/AdminServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/AdminServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/AdminServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$3.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$3.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/OrderAdminServlet$3.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/LoginServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$2.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$2.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/OrderAdminServlet$2.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/OrderAdminServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$1.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/OrderAdminServlet$1.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/OrderAdminServlet$1.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem.war" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/OnlineGroceryOrderSystem.war" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_20PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_20PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_20PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_20PM__Changes_.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]" date="1746805851983" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2025-05-09, 9:20 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/LoginServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LogoutServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LogoutServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_20 PM_[Changes]/LogoutServlet.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/shelved.patch	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,349 +0,0 @@
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/orders.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ /dev/null	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-@@ -1,136 +0,0 @@
----- Order Start: OD431569765512 ---
--orderNumber=OD431569765512
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6/A soma
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=2025-03-16
--confirmationDate=2025-03-16 21:10:58
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=2
--productID=2, quantity=2
--[total]
--totalPrice=1.60
----- Order End ---
--
----- Order Start: OD083338893972 ---
--orderNumber=OD083338893972
--userNumber=US111111111111
--name=AI.Picture8
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 21:12:33
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=3
--productID=2, quantity=3
--[total]
--totalPrice=2.40
----- Order End ---
--
----- Order Start: OD089517536572 ---
--orderNumber=OD089517536572
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 21:51:12
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=10
--productID=2, quantity=10
--[total]
--totalPrice=8.00
----- Order End ---
--
----- Order Start: OD003506322177 ---
--orderNumber=OD003506322177
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=00
--address=21/6/6/A soma
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-23
--confirmationDate=2025-03-16 22:33:09
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=27, quantity=10
--[total]
--totalPrice=700.00
----- Order End ---
--
----- Order Start: OD028829163551 ---
--orderNumber=OD028829163551
--userNumber=US111111111111
--name=jayashan guruge
--phoneNum=0764350677
--address="Sampatha"
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=2025-03-18
--confirmationDate=2025-03-17 08:13:05
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=27, quantity=10
--[total]
--totalPrice=700.00
----- Order End ---
--
----- Order Start: OD434364219642 ---
--orderNumber=OD434364219642
--userNumber=US111111111111
--name=AI.Picture8
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=2025-03-20
--confirmationDate=2025-03-17 12:03:51
--paymentStatus=Paid
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=2, quantity=10
--[total]
--totalPrice=4500.00
----- Order End ---
--
----- Order Start: OD480097990033 ---
--orderNumber=OD480097990033
--userNumber=US111111111111
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=2025-03-26
--confirmationDate=2025-03-17 12:12:04
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=active
--[products]
--productID=1, quantity=10
--[total]
--totalPrice=2000.00
----- Order End ---
--
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ /dev/null	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-@@ -1,5 +0,0 @@
--userNumber=US143000078979
--fullName=aloka warnakula
--email=alokawarnakula77@gmail.com
--phoneNumber=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: target/OnlineGroceryOrderSystem/WEB-INF/web.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for UserProfileServlet -->\n  <servlet>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <servlet-class>servlet.UserProfileServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserProfileServlet -->\n  <servlet-mapping>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <url-pattern>/UserProfileServlet</url-pattern>\n  </servlet-mapping>\n\n  <servlet>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <url-pattern>/UserProfileSearchServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Add AdminServlet mapping -->\n  <servlet>\n    <servlet-name>AdminServlet</servlet-name>\n    <servlet-class>servlet.AdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>AdminServlet</servlet-name>\n    <url-pattern>/AdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Define the OrderAdminServlet -->\n  <servlet>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <servlet-class>servlet.OrderAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <url-pattern>/OrderAdminServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for StockAdminServlet -->\n  <servlet>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <servlet-class>servlet.StockAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <url-pattern>/StockAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for ProductAdminServlet -->\n  <servlet>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <servlet-class>servlet.ProductAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <url-pattern>/ProductAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for UserAdminServlet -->\n  <servlet>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <servlet-class>servlet.UserAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserAdminServlet -->\n  <servlet-mapping>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <url-pattern>/UserAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for DealServlet -->\n  <servlet>\n    <servlet-name>DealServlet</servlet-name>\n    <servlet-class>servlet.DealServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for DealServlet -->\n  <servlet-mapping>\n    <servlet-name>DealServlet</servlet-name>\n    <url-pattern>/DealServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml
---- a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(date 1746805851955)
-@@ -74,98 +74,6 @@
-     <url-pattern>/LogoutServlet</url-pattern>
-   </servlet-mapping>
- 
--  <!-- Servlet Definition for UserProfileServlet -->
--  <servlet>
--    <servlet-name>UserProfileServlet</servlet-name>
--    <servlet-class>servlet.UserProfileServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for UserProfileServlet -->
--  <servlet-mapping>
--    <servlet-name>UserProfileServlet</servlet-name>
--    <url-pattern>/UserProfileServlet</url-pattern>
--  </servlet-mapping>
--
--  <servlet>
--    <servlet-name>UserProfileSearchServlet</servlet-name>
--    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>UserProfileSearchServlet</servlet-name>
--    <url-pattern>/UserProfileSearchServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Add AdminServlet mapping -->
--  <servlet>
--    <servlet-name>AdminServlet</servlet-name>
--    <servlet-class>servlet.AdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>AdminServlet</servlet-name>
--    <url-pattern>/AdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Define the OrderAdminServlet -->
--  <servlet>
--    <servlet-name>OrderAdminServlet</servlet-name>
--    <servlet-class>servlet.OrderAdminServlet</servlet-class>
--  </servlet>
--
--  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->
--  <servlet-mapping>
--    <servlet-name>OrderAdminServlet</servlet-name>
--    <url-pattern>/OrderAdminServlet</url-pattern>
--  </servlet-mapping>
--
--  <!-- Servlet Definition for StockAdminServlet -->
--  <servlet>
--    <servlet-name>StockAdminServlet</servlet-name>
--    <servlet-class>servlet.StockAdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>StockAdminServlet</servlet-name>
--    <url-pattern>/StockAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for ProductAdminServlet -->
--  <servlet>
--    <servlet-name>ProductAdminServlet</servlet-name>
--    <servlet-class>servlet.ProductAdminServlet</servlet-class>
--  </servlet>
--  <servlet-mapping>
--    <servlet-name>ProductAdminServlet</servlet-name>
--    <url-pattern>/ProductAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for UserAdminServlet -->
--  <servlet>
--    <servlet-name>UserAdminServlet</servlet-name>
--    <servlet-class>servlet.UserAdminServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for UserAdminServlet -->
--  <servlet-mapping>
--    <servlet-name>UserAdminServlet</servlet-name>
--    <url-pattern>/UserAdminServlet</url-pattern>
--  </servlet-mapping>
--
--
--  <!-- Servlet Definition for DealServlet -->
--  <servlet>
--    <servlet-name>DealServlet</servlet-name>
--    <servlet-class>servlet.DealServlet</servlet-class>
--  </servlet>
--
--  <!-- Servlet Mapping for DealServlet -->
--  <servlet-mapping>
--    <servlet-name>DealServlet</servlet-name>
--    <url-pattern>/DealServlet</url-pattern>
--  </servlet-mapping>
--
- 
-   <!-- Optional: Welcome file list -->
-   <welcome-file-list>
-Index: src/main/webapp/data/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/loggedInUser.txt b/src/main/webapp/data/loggedInUser.txt
---- a/src/main/webapp/data/loggedInUser.txt	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/src/main/webapp/data/loggedInUser.txt	(date 1746805851957)
-@@ -1,0 +1,5 @@
-+userNumber=US143000078979
-+fullName=aloka warnakula
-+email=alokawarnakula77@gmail.com
-+phoneNumber=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page import=\"java.util.List\" %>\n<%@ page import=\"java.util.ArrayList\" %>\n<%@ page import=\"model.GroceryItem\" %>\n<%@ page import=\"model.User\" %>\n<%@ page contentType=\"text/html; charset=UTF-8\" language=\"java\" %>\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Cart Page</title>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css\">\n  <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/cart.css\">\n</head>\n<body>\n<%\n  User loggedInUser = (User) session.getAttribute(\"user\");\n  if (loggedInUser == null) {\n    response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=Please log in to access the cart.\");\n    return;\n  }\n\n  List<GroceryItem> items = (List<GroceryItem>) request.getAttribute(\"items\");\n  if (items == null) {\n    items = new ArrayList<>();\n  }\n  String category = request.getParameter(\"category\");\n  if (category == null || category.isEmpty()) {\n    category = \"Produce\"; // Default category\n  }\n%>\n<header>\n  <a href=\"${pageContext.request.contextPath}/index.jsp\" class=\"logo\"><i class=\"fa-solid fa-basket-shopping\"></i> GROCERY</a>\n  <nav class=\"navbar\">\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Produce\">Produce</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Proteins\">Proteins</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Dairy\">Dairy</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Bakery\">Bakery</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Pantry\">Pantry</a>\n    <a href=\"${pageContext.request.contextPath}/CartServlet?category=Snacks\">Snacks</a>\n  </nav>\n  <div class=\"search-container\">\n    <form class=\"search-bar\" id=\"search-form\" action=\"${pageContext.request.contextPath}/CartServlet\" method=\"get\">\n      <input type=\"text\" placeholder=\"Search groceries...\" name=\"name\" id=\"name\">\n      <button type=\"submit\" class=\"search-btn\">Search</button>\n      <span class=\"dropdown-toggle\" id=\"dropdown-toggle\">▼</span>\n    </form>\n    <div class=\"dropdown-menu\" id=\"dropdown-menu\">\n      <div class=\"filter-item\">\n        <label for=\"category\">Category:</label>\n        <select name=\"category\" id=\"category\">\n          <option value=\"\">All</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Proteins\">Proteins</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Bakery\">Bakery</option>\n          <option value=\"Pantry\">Pantry</option>\n          <option value=\"Snacks\">Snacks</option>\n        </select>\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"minPrice\">Min Price:</label>\n        <input type=\"number\" name=\"minPrice\" id=\"minPrice\" min=\"0\" step=\"0.01\" placeholder=\"0.00\">\n      </div>\n      <div class=\"filter-item\">\n        <label for=\"maxPrice\">Max Price:</label>\n        <input type=\"number\" name=\"maxPrice\" id=\"maxPrice\" min=\"0\" step=\"0.01\" placeholder=\"100.00\">\n      </div>\n    </div>\n  </div>\n  <div class=\"cart-icon\" id=\"cart-icon\">\n    <i class=\"fas fa-shopping-cart\"></i>\n    <span class=\"cart-item-count\">0</span>\n  </div>\n</header>\n<section class=\"shop\">\n  <h2 class=\"section-title\">Shop <%= category %></h2>\n  <div class=\"product-content\">\n    <%\n      if (items.isEmpty()) {\n        out.println(\"<p>No products available in the \" + category + \" category.</p>\");\n      } else {\n        for (GroceryItem item : items) {\n          boolean outOfStock = item.getQuantity() <= 0;\n    %>\n    <div class=\"product-box\">\n      <div class=\"img-box\">\n        <a href=\"${pageContext.request.contextPath}/ProductDetailsServlet?productId=<%= item.getProductID() %>\">\n          <img src=\"<%= item.getProductImageLink() %>\" alt=\"<%= item.getProductName() %>\">\n        </a>\n      </div>\n      <h2 class=\"product-title\"><%= item.getProductName() %></h2>\n      <div class=\"price-and-cart\">\n        <span class=\"price\">Rs. <%= String.format(\"%.2f\", item.getProductPrice()) %></span>\n        <% if (outOfStock) { %>\n        <p class=\"out-of-stock\" style=\"font-size: 16px; color: #e74c3c; margin: 10px 0; font-weight: 500;\">Out of Stock</p>\n        <% } else { %>\n        <button class=\"add-cart\" data-item-id=\"<%= item.getProductID() %>\"><i class=\"fas fa-shopping-cart\"></i></button>\n        <% } %>\n      </div>\n    </div>\n    <%\n        }\n      }\n    %>\n  </div>\n</section>\n<div class=\"cart\">\n  <h2 class=\"cart-title\">Your Cart</h2>\n  <i class=\"ri-close-line\" id=\"cart-close\"></i>\n  <div class=\"cart-content\">\n    <p>Your cart is empty.</p>\n  </div>\n  <div class=\"total\" id=\"total-container\" style=\"display: none;\">\n    <div class=\"total-price\" id=\"total-price\">Total Rs. 0.00</div>\n    <a href=\"${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp\" class=\"btn-buy\">Buy Now</a>\n  </div>\n</div>\n<script>\n  window.contextPath = '${pageContext.request.contextPath}';\n</script>\n<script src=\"${pageContext.request.contextPath}/js/cart.js\"></script>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp
---- a/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/cartAndOrders/cartIndex.jsp	(date 1746805851963)
-@@ -122,4 +122,4 @@
- </script>
- <script src="${pageContext.request.contextPath}/js/cart.js"></script>
- </body>
--</html>
-\ No newline at end of file
-+</html> <!--cart -->
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover\">\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html> <!-- LogIn branch-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/login.jsp b/target/OnlineGroceryOrderSystem/userLogin/login.jsp
---- a/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(revision 3980ffd4a853f70722a8fbb8a9b23f3e0ef9edd4)
-+++ b/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(date 1746805851966)
-@@ -8,7 +8,7 @@
-     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
-     <meta name="viewport" content="width=device-width, initial-scale=1.0">
- </head>
--<body style="background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover">
-+<body>
- <div class="container">
-     <input type="checkbox" id="flip">
-     <div class="cover">
-@@ -108,4 +108,4 @@
-     </div>
- </div>
- </body>
--</html> <!-- LogIn branch-->
-\ No newline at end of file
-+</html>
-\ No newline at end of file
-Index: OnlineGroceryOrderSystem.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/OnlineGroceryOrderSystem.iml b/OnlineGroceryOrderSystem.iml
-new file mode 100644
---- /dev/null	(date 1746805743137)
-+++ b/OnlineGroceryOrderSystem.iml	(date 1746805743137)
-@@ -0,0 +1,15 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<module version="4">
-+  <component name="FacetManager">
-+    <facet type="web" name="Web2">
-+      <configuration>
-+        <descriptors>
-+          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/.smarttomcat/OnlineGroceryOrderSystem/conf/web.xml" />
-+        </descriptors>
-+        <webroots>
-+          <root url="file://$MODULE_DIR$/.smarttomcat/OnlineGroceryOrderSystem/conf" relative="/WEB-INF" />
-+        </webroots>
-+      </configuration>
-+    </facet>
-+  </component>
-+</module>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-14,_10_37 AM_[Changes]/shelved.patch	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,1110 +0,0 @@
-Index: src/main/webapp/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        .popup {\n            display: none;\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%) scale(0.8);\n            background: rgba(255, 255, 255, 0.98);\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n            max-width: 400px;\n            width: 90%;\n            text-align: center;\n            z-index: 1000;\n            border: 3px solid #3E7B27;\n            opacity: 0;\n            transition: opacity 0.3s ease, transform 0.3s ease;\n        }\n        .popup.active {\n            display: block;\n            opacity: 1;\n            transform: translate(-50%, -50%) scale(1);\n        }\n        .popup-content {\n            position: relative;\n        }\n        .popup-icon {\n            color: #3E7B27;\n            font-size: 24px;\n            margin-bottom: 15px;\n        }\n        .popup-content p {\n            margin: 0 0 20px;\n            font-size: 15px;\n            color: #721c24;\n            line-height: 1.5;\n        }\n        .popup-content .ok-btn {\n            background: #5CB338;\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            transition: background 0.3s, transform 0.2s;\n        }\n        .popup-content .ok-btn:hover {\n            background: #3E7B27;\n            transform: translateY(-2px);\n        }\n        .overlay {\n            display: none;\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.6);\n            z-index: 999;\n            opacity: 0;\n            transition: opacity 0.3s ease;\n        }\n        .overlay.active {\n            display: block;\n            opacity: 1;\n        }\n    </style>\n</head>\n<body>\n<div class=\"overlay\" id=\"popupOverlay\"></div>\n<div class=\"popup\" id=\"errorPopup\">\n    <div class=\"popup-content\">\n        <i class=\"fas fa-exclamation-circle popup-icon\"></i>\n        <p id=\"popupMessage\"></p>\n        <button class=\"ok-btn\" onclick=\"closePopup()\">OK</button>\n    </div>\n</div>\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"${pageContext.request.contextPath}/userLogin/forgotPassword.jsp\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <form id=\"signupForm\" action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    const signupForm = document.getElementById('signupForm');\n    const passwordInput = document.getElementById('password');\n    const popup = document.getElementById('errorPopup');\n    const popupMessage = document.getElementById('popupMessage');\n    const popupOverlay = document.getElementById('popupOverlay');\n\n    signupForm.addEventListener('submit', handleSubmit);\n    popupOverlay.addEventListener('click', closePopup);\n\n    function showPopup(message) {\n        popupMessage.textContent = message;\n        popup.classList.add('active');\n        popupOverlay.classList.add('active');\n    }\n\n    function closePopup() {\n        popup.classList.remove('active');\n        popupOverlay.classList.remove('active');\n    }\n\n    function handleSubmit(event) {\n        const password = passwordInput.value;\n        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$!%*?&])[A-Za-z\\d@#$!%*?&]{8,}$/;\n\n        if (!passwordRegex.test(password)) {\n            event.preventDefault();\n            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');\n            return false;\n        }\n        return true;\n    }\n</script>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/userLogin/login.jsp b/src/main/webapp/userLogin/login.jsp
---- a/src/main/webapp/userLogin/login.jsp	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/webapp/userLogin/login.jsp	(date 1747199087858)
-@@ -79,7 +79,7 @@
-         }
-     </style>
- </head>
--<body>
-+<body style="background: url('https://img.freepik.com/free-photo/shopping-cart-full-products-inside-supermarket_123827-28165.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740') no-repeat center center fixed; background-size: cover">
- <div class="overlay" id="popupOverlay"></div>
- <div class="popup" id="errorPopup">
-     <div class="popup-content">
-@@ -92,14 +92,14 @@
-     <input type="checkbox" id="flip">
-     <div class="cover">
-         <div class="front">
--            <img src="https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg" alt="">
-+            <img src="https://img.freepik.com/free-photo/delivery-concept-handsome-african-american-delivery-man-carrying-package-box-grocery-food-drink-from-store-isolated-grey-studio-background-copy-space_1258-1230.jpg?ga=GA1.1.1475331235.1731237648&w=740" alt="">
-             <div class="text">
-                 <span class="text-1">Every new friend is a <br> new adventure</span>
-                 <span class="text-2">Let's get connected</span>
-             </div>
-         </div>
-         <div class="back">
--            <img src="https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg">
-+            <img src="https://img.freepik.com/free-photo/woman-holding-glass-juice-showing-phone-mock-up_23-2148332116.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740">
-             <div class="text">
-                 <span class="text-1">Complete miles of journey <br> with one step</span>
-                 <span class="text-2">Let's get started</span>
-Index: src/main/webapp/userLogin/Success.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Success</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\">\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            height: 100vh; /* Full viewport height */\n            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');\n            background-size: cover;\n            background-repeat: no-repeat;\n            display: flex; /* Use flexbox to center */\n            justify-content: center; /* Center horizontally */\n            align-items: center; /* Center vertically */\n        }\n\n        #card {\n            width: 1000px;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 10px;\n            overflow: hidden;\n            margin: 0 auto; /* Horizontal centering fallback */\n            text-align: center;\n            font-family: 'Source Sans Pro', sans-serif;\n            animation: fadeIn 1s ease-in-out; /* Keep the fadeIn animation */\n        }\n\n        #upper-side {\n            padding: 4em;\n            background-color: #8BC34A;\n            background: rgba(0, 255, 0, 0.3);\n            display: block;\n            color: #fff;\n            border-top-right-radius: 8px;\n            border-top-left-radius: 8px;\n        }\n\n        #checkmark {\n            font-weight: lighter;\n            fill: #3E7B27;\n            margin: -3.5em auto auto 65px;\n        }\n\n        #status {\n            font-weight: lighter;\n            text-transform: uppercase;\n            letter-spacing: 2px;\n            font-size: 1.2em; /* Slightly larger for emphasis */\n            margin-top: -0.2em;\n            margin-bottom: 10px;\n            color: #3E7B27;\n        }\n\n        #lower-side {\n            padding: 2em 2em 5em 2em;\n            background: #fff;\n            display: block;\n            border-bottom-right-radius: 8px;\n            border-bottom-left-radius: 8px;\n        }\n\n        #message {\n            margin-top: -0.5em;\n            color: #757575;\n            letter-spacing: 1px;\n            font-size: 1.1em; /* Improved readability */\n            line-height: 1.5;\n        }\n\n        #contBtn {\n            position: relative;\n            top: 1.5em;\n            text-decoration: none;\n            background: #8BC34A;\n            color: #fff;\n            margin: auto;\n            padding: 0.8em 3em;\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);\n            border-radius: 25px;\n            transition: all 0.4s ease;\n            font-size: 1.1em; /* Slightly larger for better visibility */\n            text-transform: uppercase;\n        }\n\n        #contBtn:hover {\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);\n            transition: all 0.4s ease;\n        }\n    </style>\n</head>\n<body>\n<div id='card'>\n    <div id='upper-side'>\n        <svg version=\"1.1\" id=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" xml:space=\"preserve\">\n            <path d=\"M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65\n            c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382\n            c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209\n            c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091\n            c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027\n            c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865\n            C131.967,94.755,132.296,93.271,131.583,92.152z\" />\n            <circle fill=\"none\" stroke=\"#3E7B27\" stroke-width=\"5\" stroke-miterlimit=\"10\" cx=\"109.486\" cy=\"104.353\" r=\"32.53\" />\n        </svg>\n        <h3 id='status'>Success</h3>\n    </div>\n    <div id='lower-side'>\n        <p id='message'>\n            <%\n                String type = request.getParameter(\"type\");\n                if (\"login\".equals(type)) {\n            %>\n            Login successful! Welcome back to your account.\n            <% } else if (\"signup\".equals(type)) { %>\n            Congratulations! Your account has been successfully created.\n            <% } else { %>\n            An action was completed successfully.\n            <% }\n            %>\n        </p>\n        <a href=\"${pageContext.request.contextPath}/index.jsp\" id=\"contBtn\">Go to Main Page</a>\n    </div>\n</div>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/userLogin/Success.jsp b/src/main/webapp/userLogin/Success.jsp
---- a/src/main/webapp/userLogin/Success.jsp	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/webapp/userLogin/Success.jsp	(date 1747198776739)
-@@ -11,7 +11,7 @@
-             margin: 0;
-             padding: 0;
-             height: 100vh; /* Full viewport height */
--            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');
-+            background-image: url('https://img.freepik.com/free-photo/woman-shopping-vegetables-supermarket_1157-37875.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740');
-             background-size: cover;
-             background-repeat: no-repeat;
-             display: flex; /* Use flexbox to center */
-Index: target/OnlineGroceryOrderSystem/css/logIn.css
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Poppins\", sans-serif;\n}\nbody {\n    background: url(\"https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg\");\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /*background: #6EC207;*/\n    padding: 30px;\n}\n.container {\n    position: relative;\n    max-width: 850px;\n    width: 100%;\n    background: #fff;\n    padding: 40px 30px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    perspective: 2700px;\n}\n.container .cover {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 50%;\n    z-index: 98;\n    transition: all 1s ease;\n    transform-origin: left;\n    transform-style: preserve-3d;\n    backface-visibility: hidden;\n}\n.container #flip:checked ~ .cover {\n    transform: rotateY(-180deg);\n}\n.container #flip:checked ~ .forms .login-form {\n    pointer-events: none;\n}\n.container .cover .front,\n.container .cover .back {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n.cover .back {\n    transform: rotateY(180deg);\n}\n.container .cover img {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    z-index: 10;\n}\n.container .cover .text {\n    position: absolute;\n    z-index: 10;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.container .cover .text::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    opacity: 0.5;\n    background: #0C9463;\n}\n.cover .text .text-1,\n.cover .text .text-2 {\n    z-index: 20;\n    font-size: 26px;\n    font-weight: 600;\n    color: #fff;\n    text-align: center;\n}\n.cover .text .text-2 {\n    font-size: 15px;\n    font-weight: 500;\n}\n.container .forms {\n    height: 100%;\n    width: 100%;\n    background: #fff;\n}\n.container .form-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.form-content .login-form,\n.form-content .signup-form {\n    width: calc(100% / 2 - 25px);\n}\n.forms .form-content .title {\n    position: relative;\n    font-size: 24px;\n    font-weight: 500;\n    color: #333;\n}\n.forms .form-content .title:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 3px;\n    width: 25px;\n    background: #3E7B27;\n}\n.forms .signup-form .title:before {\n    width: 20px;\n}\n.forms .form-content .input-boxes {\n    margin-top: 30px;\n}\n.forms .form-content .input-box {\n    display: flex;\n    align-items: center;\n    height: 50px;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n}\n.form-content .input-box input {\n    height: 100%;\n    width: 100%;\n    outline: none;\n    border: none;\n    padding: 0 30px;\n    font-size: 16px;\n    font-weight: 500;\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n}\n.form-content .input-box input:focus,\n.form-content .input-box input:valid {\n    border-color: #3E7B27;\n}\n.form-content .input-box i {\n    position: absolute;\n    color: #3E7B27;\n    font-size: 17px;\n}\n.forms .form-content .text {\n    font-size: 14px;\n    font-weight: 500;\n    color: #3E7B27;\n}\n.forms .form-content .text a {\n    color:#3E7B27;\n    text-decoration: none;\n}\n.forms .form-content .text a:hover {\n    text-decoration: underline;\n}\n.forms .form-content .button {\n    color: #fff;\n    margin-top: 40px;\n}\n.forms .form-content .button input {\n    color: #fff;\n    background: #5CB338;\n    border-radius: 6px;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.4s ease;\n}\n.forms .form-content .button input:hover {\n    background: #3E7B27;\n}\n.forms .form-content label {\n    color: #191919;\n    cursor: pointer;\n}\n.forms .form-content label:hover {\n    text-decoration: underline;\n}\n.forms .form-content .login-text,\n.forms .form-content .sign-up-text {\n    text-align: center;\n    margin-top: 25px;\n}\n.container #flip {\n    display: none;\n}\n@media (max-width: 730px) {\n    .container .cover {\n        display: none;\n    }\n    .form-content .login-form,\n    .form-content .signup-form {\n        width: 100%;\n    }\n    .form-content .signup-form {\n        display: none;\n    }\n    .container #flip:checked ~ .forms .signup-form {\n        display: block;\n    }\n    .container #flip:checked ~ .forms .login-form {\n        display: none;\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/logIn.css b/target/OnlineGroceryOrderSystem/css/logIn.css
---- a/target/OnlineGroceryOrderSystem/css/logIn.css	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/css/logIn.css	(date 1747199055216)
-@@ -6,7 +6,7 @@
-     font-family: "Poppins", sans-serif;
- }
- body {
--    background: url("https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg");
-+    background: url("https://img.freepik.com/free-photo/shopping-cart-full-products-inside-supermarket_123827-28165.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740");
-     min-height: 100vh;
-     display: flex;
-     align-items: center;
-Index: target/OnlineGroceryOrderSystem/data/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=12345678A@a\nuserNumber=US021583101081\nfullName=aloka warnakula mn\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/loggedInUser.txt b/target/OnlineGroceryOrderSystem/data/loggedInUser.txt
---- a/target/OnlineGroceryOrderSystem/data/loggedInUser.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/data/loggedInUser.txt	(date 1747198822185)
-@@ -1,9 +1,0 @@
----- User Start: US021583101081 ---
--username=alokawarnakula77@gmail.com
--password=12345678A@a
--userNumber=US021583101081
--fullName=aloka warnakula mn
--email=alokawarnakula77@gmail.com
--phoneNumber=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
----- User End ---
-Index: target/OnlineGroceryOrderSystem/data/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/items.txt b/target/OnlineGroceryOrderSystem/data/items.txt
---- a/target/OnlineGroceryOrderSystem/data/items.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/data/items.txt	(date 1747198709227)
-@@ -2,7 +2,7 @@
- 2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
- 3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,300,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
-@@ -16,14 +16,14 @@
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
- 22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
- 25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
- 27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
- 29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
-Index: target/OnlineGroceryOrderSystem/data/orders.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- Order Start: OD092021244402 ---\norderNumber=OD092021244402\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-03-31 09:48:55\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=29, quantity=1\n[total]\ntotalPrice=1460.00\n--- Order End ---\n\n--- Order Start: OD543785297309 ---\norderNumber=OD543785297309\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-01 10:24:30\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=18, quantity=4\n[total]\ntotalPrice=96.00\n--- Order End ---\n\n--- Order Start: OD261952394242 ---\norderNumber=OD261952394242\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-01 11:28:45\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD753079415721 ---\norderNumber=OD753079415721\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:42:44\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=15\nproductID=41, quantity=1\n[total]\ntotalPrice=20511.00\n--- Order End ---\n\n--- Order Start: OD113125118289 ---\norderNumber=OD113125118289\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-05 16:43:56\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=1\n[total]\ntotalPrice=1337.00\n--- Order End ---\n\n--- Order Start: OD959211235390 ---\norderNumber=OD959211235390\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:44:35\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=41, quantity=1\n[total]\ntotalPrice=456.00\n--- Order End ---\n\n--- Order Start: OD529482646567 ---\norderNumber=OD529482646567\nuserNumber=US021583101081\nname=aloka warnakula \nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-02 11:15:12\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=49, quantity=1\n[total]\ntotalPrice=70.00\n--- Order End ---\n\n--- Order Start: OD176924944754 ---\norderNumber=OD176924944754\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-04 19:50:39\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=3\nproductID=15, quantity=1\nproductID=5, quantity=1\nproductID=9, quantity=1\nproductID=2, quantity=1\nproductID=22, quantity=1\nproductID=29, quantity=1\nproductID=25, quantity=1\n[total]\ntotalPrice=8803.00\n--- Order End ---\n\n--- Order Start: OD997161013374 ---\norderNumber=OD997161013374\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-06 08:57:36\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD500188660771 ---\norderNumber=OD500188660771\nuserNumber=US021583101081\nname=aloka warnakula mn\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-09 20:59:33\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=26, quantity=2\nproductID=19, quantity=4\n[total]\ntotalPrice=4100.00\n--- Order End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/orders.txt b/target/OnlineGroceryOrderSystem/data/orders.txt
---- a/target/OnlineGroceryOrderSystem/data/orders.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/data/orders.txt	(date 1747198532106)
-@@ -183,23 +183,3 @@
- totalPrice=1458.00
- --- Order End ---
- 
----- Order Start: OD500188660771 ---
--orderNumber=OD500188660771
--userNumber=US021583101081
--name=aloka warnakula mn
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--confirmationDate=2025-05-09 20:59:33
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=Pending
--deliveredDate=
--[products]
--productID=26, quantity=2
--productID=19, quantity=4
--[total]
--totalPrice=4100.00
----- Order End ---
--
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt	(date 1746687367000)
-@@ -1,0 +1,2 @@
-+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,3,Only 700g
-+20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,1,Only 1.25kg
-Index: src/main/java/servlet/CartServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>// Package for servlet-related classes handling HTTP requests\npackage servlet;\n\n// Import Jakarta Servlet APIs for HTTP request handling and session management\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\n// Import model classes for file operations, grocery items, and user data\nimport model.FileUtil;\nimport model.GroceryItem;\nimport model.User;\n// Import Java I/O and utility classes for file operations and stream processing\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.stream.Collectors;\n\n// CartServlet handles HTTP requests for cart operations in an online grocery system\npublic class CartServlet extends HttpServlet {\n    // File path for storing available grocery items\n    private static final String ITEMS_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt\";\n    // File path for storing cart items used in order creation\n    private static final String CART_FILE = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt\";\n    // Instance of MergeServlet for sorting grocery items\n    private MergeServlet mergeServlet;\n\n    // Initializes the servlet, ensuring the data directory exists and is writable\n    @Override\n    public void init() throws ServletException {\n        // Create data directory if it does not exist\n        File dataDir = new File(\"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data\");\n        if (!dataDir.exists()) {\n            if (dataDir.mkdirs()) {\n                // Log successful creation of data directory\n                System.out.println(\"Created data directory: \" + dataDir.getAbsolutePath());\n            } else {\n                // Log and throw exception if directory creation fails\n                System.err.println(\"Failed to create data directory: \" + dataDir.getAbsolutePath());\n                throw new ServletException(\"Unable to create data directory for file operations\");\n            }\n        } else if (!dataDir.canWrite()) {\n            // Log and throw exception if directory is not writable\n            System.err.println(\"Data directory is not writable: \" + dataDir.getAbsolutePath());\n            throw new ServletException(\"Data directory is not writable for file operations\");\n        }\n        // Log file paths for debugging\n        System.out.println(\"ITEMS_FILE path: \" + ITEMS_FILE);\n        System.out.println(\"CART_FILE path: \" + CART_FILE);\n        // Initialize MergeServlet for sorting operations\n        mergeServlet = new MergeServlet();\n    }\n\n    // Handles HTTP GET requests for cart retrieval or item filtering\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        // Retrieve the current HTTP session\n        HttpSession session = request.getSession();\n        // Get the logged-in user from the session\n        User loggedInUser = (User) session.getAttribute(\"user\");\n        // Redirect to login page if user is not authenticated\n        if (loggedInUser == null) {\n            response.sendRedirect(request.getContextPath() + \"/userLogin/login.jsp?error=notLoggedIn\");\n            return;\n        }\n\n        // Declare list to store cart items\n        ArrayList<GroceryItem> cart;\n        // Synchronize to ensure thread-safe file operations\n        synchronized (this) {\n            // Load cart items from file\n            cart = FileUtil.readItems(CART_FILE);\n            if (cart == null) {\n                // Initialize empty cart if file read fails\n                cart = new ArrayList<>();\n                // Log initialization for debugging\n                System.out.println(\"Initialized empty cart for \" + CART_FILE + \" (file not found or invalid)\");\n            } else {\n                // Log loaded cart for debugging\n                System.out.println(\"Loaded cart from \" + CART_FILE + \": \" + cart);\n            }\n        }\n\n        // Load available grocery items from file\n        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);\n        if (items == null) {\n            // Initialize empty items list if file read fails\n            items = new ArrayList<>();\n            // Log initialization for debugging\n            System.out.println(\"Initialized empty items list for \" + ITEMS_FILE + \" (file not found or invalid)\");\n        }\n        // Log loaded items for debugging\n        System.out.println(\"All loaded items: \" + items);\n        // Calculate total cart price by summing item prices\n        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n\n        // Retrieve action parameter from request\n        String action = request.getParameter(\"action\");\n        // Log action for debugging\n        System.out.println(\"doGet action: \" + action);\n        if (\"getCart\".equals(action)) {\n            // Set response content type to JSON\n            response.setContentType(\"application/json\");\n            // Initialize response writer\n            PrintWriter out = response.getWriter();\n            if (cart.isEmpty()) {\n                // Send JSON response for empty cart\n                out.println(\"{\\\"success\\\": true, \\\"message\\\": \\\"Cart is empty\\\", \\\"cart\\\": [], \\\"totalPrice\\\": 0.00}\");\n            } else {\n                // Send JSON response with cart details\n                sendCartResponse(out, cart, totalPrice, items);\n            }\n            // Flush output to ensure delivery\n            out.flush();\n        } else {\n            // Retrieve filter parameters from request\n            String category = request.getParameter(\"category\");\n            String minPriceStr = request.getParameter(\"minPrice\");\n            String maxPriceStr = request.getParameter(\"maxPrice\");\n            String name = request.getParameter(\"name\");\n            String sortBy = request.getParameter(\"sortBy\");\n            // Log filter parameters for debugging\n            System.out.println(\"Parameters - category: \" + category + \", minPrice: \" + minPriceStr + \", maxPrice: \" + maxPriceStr + \", name: \" + name + \", sortBy: \" + sortBy);\n\n            // Set category to null to show all items if unspecified or \"All\"\n            if (category == null || category.trim().isEmpty() || category.equalsIgnoreCase(\"All\")) {\n                category = null;\n                // Log that all categories are displayed\n                System.out.println(\"No specific category selected, showing all products\");\n            }\n            // Create final category variable for lambda expressions\n            final String finalCategory = category;\n\n            // Initialize filtered items list with all items\n            ArrayList<GroceryItem> filteredItems = new ArrayList<>(items);\n            // Log initial item count for debugging\n            System.out.println(\"Initial items count: \" + filteredItems.size());\n\n            // Filter items by category if specified\n            if (finalCategory != null && !finalCategory.trim().isEmpty()) {\n                filteredItems = filteredItems.stream()\n                        // Keep items matching the specified category (case-insensitive)\n                        .filter(item -> {\n                            boolean matches = item.getProductCategory().equalsIgnoreCase(finalCategory);\n                            // Log category check for debugging\n                            System.out.println(\"Checking category for item \" + item.getProductName() + \": \" + item.getProductCategory() + \" == \" + finalCategory + \" -> \" + matches);\n                            return matches;\n                        })\n                        // Collect filtered items into a new ArrayList\n                        .collect(Collectors.toCollection(ArrayList::new));\n                // Log filtered item count and list for debugging\n                System.out.println(\"After category filter, result size: \" + filteredItems.size());\n                System.out.println(\"Items after category filter: \" + filteredItems);\n            }\n\n            // Filter items by name if specified\n            if (name != null && !name.trim().isEmpty()) {\n                filteredItems = filteredItems.stream()\n                        // Keep items with names containing the search term (case-insensitive)\n                        .filter(item -> {\n                            boolean matches = item.getProductName().toLowerCase().contains(name.toLowerCase());\n                            // Log name check for debugging\n                            System.out.println(\"Checking name for item \" + item.getProductName() + \": contains \" + name + \" -> \" + matches);\n                            return matches;\n                        })\n                        // Collect filtered items into a new ArrayList\n                        .collect(Collectors.toCollection(ArrayList::new));\n                // Log filtered item count and list for debugging\n                System.out.println(\"After name filter, result size: \" + filteredItems.size());\n                System.out.println(\"Items after name filter: \" + filteredItems);\n            }\n\n            // Filter items by minimum price if specified\n            if (minPriceStr != null && !minPriceStr.trim().isEmpty()) {\n                try {\n                    // Parse minimum price from string\n                    double minPrice = Double.parseDouble(minPriceStr);\n                    filteredItems = filteredItems.stream()\n                            // Keep items with price at least the minimum\n                            .filter(item -> {\n                                boolean matches = item.getProductPrice() >= minPrice;\n                                // Log price check for debugging\n                                System.out.println(\"Checking minPrice for item \" + item.getProductName() + \": \" + item.getProductPrice() + \" >= \" + minPrice + \" -> \" + matches);\n                                return matches;\n                            })\n                            // Collect filtered items into a new ArrayList\n                            .collect(Collectors.toCollection(ArrayList::new));\n                    // Log filtered item count and list for debugging\n                    System.out.println(\"After minPrice filter (\" + minPrice + \"), result size: \" + filteredItems.size());\n                    System.out.println(\"Items after minPrice filter: \" + filteredItems);\n                } catch (NumberFormatException e) {\n                    // Log invalid minimum price for debugging\n                    System.out.println(\"Invalid minPrice: \" + minPriceStr);\n                }\n            }\n\n            // Filter items by maximum price if specified\n            if (maxPriceStr != null && !maxPriceStr.trim().isEmpty()) {\n                try {\n                    // Parse maximum price from string\n                    double maxPrice = Double.parseDouble(maxPriceStr);\n                    filteredItems = filteredItems.stream()\n                            // Keep items with price at most the maximum\n                            .filter(item -> {\n                                boolean matches = item.getProductPrice() <= maxPrice;\n                                // Log price check for debugging\n                                System.out.println(\"Checking maxPrice for item \" + item.getProductName() + \": \" + item.getProductPrice() + \" <= \" + maxPrice + \" -> \" + matches);\n                                return matches;\n                            })\n                            // Collect filtered items into a new ArrayList\n                            .collect(Collectors.toCollection(ArrayList::new));\n                    // Log filtered item count and list for debugging\n                    System.out.println(\"After maxPrice filter (\" + maxPrice + \"), result size: \" + filteredItems.size());\n                    System.out.println(\"Items after maxPrice filter: \" + filteredItems);\n                } catch (NumberFormatException e) {\n                    // Log invalid maximum price for debugging\n                    System.out.println(\"Invalid maxPrice: \" + maxPriceStr);\n                }\n            }\n\n            // Sort filtered items if the list is not empty\n            if (!filteredItems.isEmpty()) {\n                // Default to sorting by name\n                MergeServlet.SortCriterion sortCriterion = MergeServlet.SortCriterion.NAME;\n                // Map sortBy parameter to sorting criterion\n                if (sortBy != null) {\n                    switch (sortBy.toLowerCase()) {\n                        case \"name\":\n                            sortCriterion = MergeServlet.SortCriterion.NAME;\n                            break;\n                        case \"price\":\n                            sortCriterion = MergeServlet.SortCriterion.PRICE;\n                            break;\n                        default:\n                            // Log invalid sort parameter and default to name\n                            System.out.println(\"Invalid sortBy parameter: \" + sortBy + \", defaulting to NAME\");\n                    }\n                }\n                // Log sorting criterion for debugging\n                System.out.println(\"Sorting items with sortCriterion=\" + sortCriterion);\n                // Sort items using MergeServlet\n                mergeServlet.sortItems(filteredItems, sortCriterion);\n            }\n\n            // Determine if the response is a search result (name or price filters applied)\n            boolean isSearchResult = (name != null && !name.trim().isEmpty()) ||\n                    (minPriceStr != null && !minPriceStr.trim().isEmpty()) ||\n                    (maxPriceStr != null && !maxPriceStr.trim().isEmpty());\n            // Set attributes for the JSP page\n            request.setAttribute(\"items\", filteredItems);\n            request.setAttribute(\"cart\", cart);\n            request.setAttribute(\"totalPrice\", totalPrice);\n            request.setAttribute(\"category\", category);\n            request.setAttribute(\"isSearchResult\", isSearchResult);\n            // Log forwarding details for debugging\n            System.out.println(\"Forwarding to cartIndex.jsp with items size: \" + filteredItems.size() + \", isSearchResult: \" + isSearchResult);\n            // Forward request to cartIndex.jsp for rendering\n            request.getRequestDispatcher(\"/cartAndOrders/cartIndex.jsp\").forward(request, response);\n        }\n    }\n\n    // Handles HTTP POST requests for adding, updating, or removing cart items\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        // Retrieve the current HTTP session\n        HttpSession session = request.getSession();\n        // Get the logged-in user from the session\n        User loggedInUser = (User) session.getAttribute(\"user\");\n        // Require authentication for cart operations\n        if (loggedInUser == null) {\n            // Set response content type to JSON\n            response.setContentType(\"application/json\");\n            // Initialize response writer\n            PrintWriter out = response.getWriter();\n            // Send JSON error response for unauthenticated access\n            out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Please log in to access the cart.\\\"}\");\n            // Flush output to ensure delivery\n            out.flush();\n            return;\n        }\n\n        // Log POST request action for debugging\n        System.out.println(\"Received POST request to CartServlet with action: \" + request.getParameter(\"action\"));\n        // Set response content type to JSON\n        response.setContentType(\"application/json\");\n        // Initialize response writer\n        PrintWriter out = response.getWriter();\n\n        // Declare list to store cart items\n        ArrayList<GroceryItem> cart;\n        // Load available grocery items from file\n        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);\n        if (items == null) {\n            // Initialize empty items list if file read fails\n            items = new ArrayList<>();\n            // Log initialization for debugging\n            System.out.println(\"Initialized empty items list for \" + ITEMS_FILE + \" (file not found or invalid)\");\n        }\n        // Log loaded items for debugging\n        System.out.println(\"Loaded items from \" + ITEMS_FILE + \": \" + items);\n\n        // Synchronize to ensure thread-safe cart operations\n        synchronized (this) {\n            // Load cart items from file\n            cart = FileUtil.readItems(CART_FILE);\n            if (cart == null) {\n                // Initialize empty cart if file read fails\n                cart = new ArrayList<>();\n                // Log initialization for debugging\n                System.out.println(\"Initialized empty cart for \" + CART_FILE);\n            }\n            // Log loaded cart for debugging\n            System.out.println(\"Loaded cart before modification: \" + cart);\n\n            try {\n                // Handle add action to include a new item in the cart\n                if (\"add\".equals(request.getParameter(\"action\"))) {\n                    // Log item ID for debugging\n                    System.out.println(\"Processing 'add' action with itemId: \" + request.getParameter(\"itemId\"));\n                    // Parse item ID from request\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    // Find item by ID in the items list\n                    GroceryItem itemToAdd = items.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                    if (itemToAdd == null) {\n                        // Log and send error if item is not found\n                        System.out.println(\"Item not found for itemId: \" + itemId);\n                        out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found\\\"}\");\n                    } else if (itemToAdd.getQuantity() <= 0) {\n                        // Log and send error if item is out of stock\n                        System.out.println(\"Item out of stock: \" + itemToAdd);\n                        out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item is out of stock\\\"}\");\n                    } else {\n                        // Check if item is already in the cart\n                        GroceryItem existingItem = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                        if (existingItem != null) {\n                            // Send error if item is already in cart\n                            out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item already in cart, use cart to increase quantity\\\"}\");\n                        } else {\n                            // Create new cart item with quantity 1\n                            GroceryItem cartItem = new GroceryItem(itemToAdd.getProductID(), itemToAdd.getProductCategory(),\n                                    itemToAdd.getProductName(), itemToAdd.getProductPrice(), itemToAdd.getProductImageLink(),\n                                    1, itemToAdd.getDescription());\n                            // Add item to cart\n                            cart.add(cartItem);\n                            // Decrease stock quantity\n                            itemToAdd.setQuantity(itemToAdd.getQuantity() - 1);\n                            // Update items file\n                            FileUtil.writeItems(ITEMS_FILE, items);\n                            // Update cart file\n                            FileUtil.writeItems(CART_FILE, cart);\n                            // Log addition for debugging\n                            System.out.println(\"Added new item to cart and updated stock: \" + cartItem);\n                            // Calculate total cart price\n                            double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                            // Send JSON response with updated cart\n                            sendCartResponse(out, cart, totalPrice, items);\n                        }\n                    }\n                } else if (\"update\".equals(request.getParameter(\"action\"))) {\n                    // Log item ID for debugging\n                    System.out.println(\"Processing 'update' action with itemId: \" + request.getParameter(\"itemId\"));\n                    // Parse item ID and quantity change\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    int change = Integer.parseInt(request.getParameter(\"change\"));\n                    // Find item in cart by ID\n                    GroceryItem item = cart.stream().filter(i -> i.getProductID() == itemId).findFirst().orElse(null);\n                    if (item == null) {\n                        // Log and send error if item is not in cart\n                        System.out.println(\"Item not found in cart for itemId: \" + itemId);\n                        out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found in cart\\\"}\");\n                    } else {\n                        // Get stock quantity for the item\n                        int stockQuantity = items.stream()\n                                .filter(i -> i.getProductID() == itemId)\n                                .findFirst()\n                                .map(GroceryItem::getQuantity)\n                                .orElse(0);\n                        // Calculate available stock\n                        int currentCartQuantity = item.getQuantity();\n                        int totalAvailableStock = stockQuantity + currentCartQuantity;\n                        // Adjust quantity within valid range\n                        int newQuantity = Math.max(0, Math.min(currentCartQuantity + change, totalAvailableStock));\n                        int quantityChange = newQuantity - currentCartQuantity;\n                        if (quantityChange != 0) {\n                            // Update stock quantity\n                            GroceryItem stockItem = items.stream()\n                                    .filter(i -> i.getProductID() == itemId)\n                                    .findFirst()\n                                    .orElse(null);\n                            if (stockItem != null) {\n                                stockItem.setQuantity(stockItem.getQuantity() - quantityChange);\n                                // Update items file\n                                FileUtil.writeItems(ITEMS_FILE, items);\n                                // Log stock update\n                                System.out.println(\"Updated stock in \" + ITEMS_FILE + \": \" + items);\n                            }\n                            // Update cart quantity\n                            item.setQuantity(newQuantity);\n                            if (newQuantity == 0) {\n                                // Remove item if quantity is zero\n                                cart.remove(item);\n                                // Log removal\n                                System.out.println(\"Removed item from cart: \" + item);\n                            } else {\n                                // Log quantity update\n                                System.out.println(\"Updated item quantity in cart: \" + item);\n                            }\n                            // Update cart file\n                            FileUtil.writeItems(CART_FILE, cart);\n                            // Log cart update\n                            System.out.println(\"Wrote cart to \" + CART_FILE + \": \" + cart);\n                        }\n                        // Calculate total cart price\n                        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                        // Send JSON response with updated cart\n                        sendCartResponse(out, cart, totalPrice, items);\n                    }\n                } else if (\"remove\".equals(request.getParameter(\"action\"))) {\n                    // Log item ID for debugging\n                    System.out.println(\"Processing 'remove' action with itemId: \" + request.getParameter(\"itemId\"));\n                    // Parse item ID\n                    int itemId = Integer.parseInt(request.getParameter(\"itemId\"));\n                    // Find item in cart by ID\n                    GroceryItem itemToRemove = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);\n                    if (itemToRemove != null) {\n                        // Restore stock quantity\n                        int quantityRemoved = itemToRemove.getQuantity();\n                        cart.remove(itemToRemove);\n                        GroceryItem stockItem = items.stream()\n                                .filter(item -> item.getProductID() == itemId)\n                                .findFirst()\n                                .orElse(null);\n                        if (stockItem != null) {\n                            stockItem.setQuantity(stockItem.getQuantity() + quantityRemoved);\n                            // Update items file\n                            FileUtil.writeItems(ITEMS_FILE, items);\n                            // Log stock update\n                            System.out.println(\"Updated stock in \" + ITEMS_FILE + \": \" + items);\n                        }\n                        // Update cart file\n                        FileUtil.writeItems(CART_FILE, cart);\n                        // Log cart update\n                        System.out.println(\"Wrote cart to \" + CART_FILE + \": \" + cart);\n                        // Calculate total cart price\n                        double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();\n                        // Send JSON response with updated cart\n                        sendCartResponse(out, cart, totalPrice, items);\n                    } else {\n                        // Log and send error if item is not in cart\n                        System.out.println(\"Item not found in cart for itemId: \" + itemId);\n                        out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Item not found in cart\\\"}\");\n                    }\n                } else {\n                    // Log and send error for invalid action\n                    System.out.println(\"Invalid action received: \" + request.getParameter(\"action\"));\n                    out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Invalid action\\\"}\");\n                }\n            } catch (NumberFormatException e) {\n                // Log and send error for invalid numeric input\n                System.out.println(\"Invalid item ID or change value: \" + e.getMessage());\n                out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Invalid item ID or change value\\\"}\");\n            } catch (IOException e) {\n                // Log and send error for file operation failures\n                System.err.println(\"I/O error during cart operation: \" + e.getMessage());\n                out.println(\"{\\\"success\\\": false, \\\"message\\\": \\\"Failed to update cart due to I/O error\\\"}\");\n            }\n        }\n        // Flush output to ensure delivery\n        out.flush();\n    }\n\n    // Generates a JSON response with cart details and stock information\n    private void sendCartResponse(PrintWriter out, ArrayList<GroceryItem> cart, double totalPrice, ArrayList<GroceryItem> items) {\n        // Start JSON response with success status and cart array\n        out.println(\"{\\\"success\\\": true, \\\"message\\\": \\\"Cart retrieved successfully\\\", \\\"cart\\\": [\");\n        // Iterate through cart items\n        for (int i = 0; i < cart.size(); i++) {\n            // Get current cart item\n            GroceryItem cartItem = cart.get(i);\n            // Retrieve stock quantity for the item\n            int stockQuantity = items.stream()\n                    .filter(item -> item.getProductID() == cartItem.getProductID())\n                    .findFirst()\n                    .map(GroceryItem::getQuantity)\n                    .orElse(0);\n            // Calculate total available stock\n            int totalAvailableStock = stockQuantity + cartItem.getQuantity();\n            // Write JSON object for the cart item\n            out.println(String.format(\"{\\\"productID\\\": %d, \\\"productName\\\": \\\"%s\\\", \\\"productPrice\\\": %.2f, \" +\n                            \"\\\"productImageLink\\\": \\\"%s\\\", \\\"quantity\\\": %d, \\\"description\\\": \\\"%s\\\", \\\"stockQuantity\\\": %d, \\\"totalAvailableStock\\\": %d}\",\n                    cartItem.getProductID(), escapeJson(cartItem.getProductName()), cartItem.getProductPrice(),\n                    escapeJson(cartItem.getProductImageLink()), cartItem.getQuantity(),\n                    escapeJson(cartItem.getDescription() != null ? cartItem.getDescription() : \"\"),\n                    stockQuantity, totalAvailableStock));\n            // Add comma between items except for the last\n            if (i < cart.size() - 1) out.println(\",\");\n        }\n        // Close cart array and add total price\n        out.println(\"], \\\"totalPrice\\\": \" + String.format(\"%.2f\", totalPrice) + \"}\");\n    }\n\n    // Escapes special characters in strings for valid JSON output\n    private String escapeJson(String str) {\n        // Return empty string if null, otherwise escape quotes and newlines\n        return str != null ? str.replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\n\", \"\\\\n\") : \"\";\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/CartServlet.java b/src/main/java/servlet/CartServlet.java
---- a/src/main/java/servlet/CartServlet.java	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/java/servlet/CartServlet.java	(date 1742654919000)
-@@ -1,228 +1,169 @@
--// Package for servlet-related classes handling HTTP requests
- package servlet;
- 
--// Import Jakarta Servlet APIs for HTTP request handling and session management
- import jakarta.servlet.ServletException;
- import jakarta.servlet.http.HttpServlet;
- import jakarta.servlet.http.HttpServletRequest;
- import jakarta.servlet.http.HttpServletResponse;
- import jakarta.servlet.http.HttpSession;
--// Import model classes for file operations, grocery items, and user data
- import model.FileUtil;
- import model.GroceryItem;
- import model.User;
--// Import Java I/O and utility classes for file operations and stream processing
-+
- import java.io.*;
- import java.util.ArrayList;
- import java.util.stream.Collectors;
- 
--// CartServlet handles HTTP requests for cart operations in an online grocery system
- public class CartServlet extends HttpServlet {
--    // File path for storing available grocery items
-     private static final String ITEMS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--    // File path for storing cart items used in order creation
-     private static final String CART_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt";
--    // Instance of MergeServlet for sorting grocery items
--    private MergeServlet mergeServlet;
-+    private MergeServlet mergeServlet; // Instance of MergeServlet
- 
--    // Initializes the servlet, ensuring the data directory exists and is writable
-     @Override
-     public void init() throws ServletException {
--        // Create data directory if it does not exist
-         File dataDir = new File("/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data");
-         if (!dataDir.exists()) {
-             if (dataDir.mkdirs()) {
--                // Log successful creation of data directory
-                 System.out.println("Created data directory: " + dataDir.getAbsolutePath());
-             } else {
--                // Log and throw exception if directory creation fails
-                 System.err.println("Failed to create data directory: " + dataDir.getAbsolutePath());
-                 throw new ServletException("Unable to create data directory for file operations");
-             }
-         } else if (!dataDir.canWrite()) {
--            // Log and throw exception if directory is not writable
-             System.err.println("Data directory is not writable: " + dataDir.getAbsolutePath());
-             throw new ServletException("Data directory is not writable for file operations");
-         }
--        // Log file paths for debugging
-+
-         System.out.println("ITEMS_FILE path: " + ITEMS_FILE);
-         System.out.println("CART_FILE path: " + CART_FILE);
--        // Initialize MergeServlet for sorting operations
--        mergeServlet = new MergeServlet();
-+        mergeServlet = new MergeServlet(); // Initialize MergeServlet
-     }
- 
--    // Handles HTTP GET requests for cart retrieval or item filtering
-     @Override
-     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Retrieve the current HTTP session
-         HttpSession session = request.getSession();
--        // Get the logged-in user from the session
-         User loggedInUser = (User) session.getAttribute("user");
--        // Redirect to login page if user is not authenticated
-         if (loggedInUser == null) {
-             response.sendRedirect(request.getContextPath() + "/userLogin/login.jsp?error=notLoggedIn");
-             return;
-         }
- 
--        // Declare list to store cart items
-         ArrayList<GroceryItem> cart;
--        // Synchronize to ensure thread-safe file operations
-         synchronized (this) {
--            // Load cart items from file
-             cart = FileUtil.readItems(CART_FILE);
-             if (cart == null) {
--                // Initialize empty cart if file read fails
-                 cart = new ArrayList<>();
--                // Log initialization for debugging
-                 System.out.println("Initialized empty cart for " + CART_FILE + " (file not found or invalid)");
-             } else {
--                // Log loaded cart for debugging
-                 System.out.println("Loaded cart from " + CART_FILE + ": " + cart);
-             }
-         }
- 
--        // Load available grocery items from file
-         ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
-         if (items == null) {
--            // Initialize empty items list if file read fails
-             items = new ArrayList<>();
--            // Log initialization for debugging
-             System.out.println("Initialized empty items list for " + ITEMS_FILE + " (file not found or invalid)");
-         }
--        // Log loaded items for debugging
-         System.out.println("All loaded items: " + items);
--        // Calculate total cart price by summing item prices
-         double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
- 
--        // Retrieve action parameter from request
-         String action = request.getParameter("action");
--        // Log action for debugging
-         System.out.println("doGet action: " + action);
-         if ("getCart".equals(action)) {
--            // Set response content type to JSON
-             response.setContentType("application/json");
--            // Initialize response writer
-             PrintWriter out = response.getWriter();
-             if (cart.isEmpty()) {
--                // Send JSON response for empty cart
--                out.println("{\"success\": true, \"message\": \"Cart is empty\", \"cart\": [], \"totalPrice\": 0.00}");
-+                out.write("{\"success\": true, \"message\": \"Cart is empty\", \"cart\": [], \"totalPrice\": 0.00}");
-             } else {
--                // Send JSON response with cart details
-                 sendCartResponse(out, cart, totalPrice, items);
-             }
--            // Flush output to ensure delivery
-             out.flush();
-         } else {
--            // Retrieve filter parameters from request
-             String category = request.getParameter("category");
-             String minPriceStr = request.getParameter("minPrice");
-             String maxPriceStr = request.getParameter("maxPrice");
-             String name = request.getParameter("name");
--            String sortBy = request.getParameter("sortBy");
--            // Log filter parameters for debugging
-+            String sortBy = request.getParameter("sortBy"); // Primary sorting criterion
-+
-             System.out.println("Parameters - category: " + category + ", minPrice: " + minPriceStr + ", maxPrice: " + maxPriceStr + ", name: " + name + ", sortBy: " + sortBy);
- 
--            // Set category to null to show all items if unspecified or "All"
-+            // Default category to null (show all) if not specified or "All"
-             if (category == null || category.trim().isEmpty() || category.equalsIgnoreCase("All")) {
--                category = null;
--                // Log that all categories are displayed
-+                category = null; // Show all categories
-                 System.out.println("No specific category selected, showing all products");
-             }
--            // Create final category variable for lambda expressions
--            final String finalCategory = category;
-+            final String finalCategory = category; // Create a final copy for lambda expression
- 
--            // Initialize filtered items list with all items
-             ArrayList<GroceryItem> filteredItems = new ArrayList<>(items);
--            // Log initial item count for debugging
-             System.out.println("Initial items count: " + filteredItems.size());
- 
--            // Filter items by category if specified
-+            // Step 1: Filter by category if specified
-             if (finalCategory != null && !finalCategory.trim().isEmpty()) {
-                 filteredItems = filteredItems.stream()
--                        // Keep items matching the specified category (case-insensitive)
-                         .filter(item -> {
-                             boolean matches = item.getProductCategory().equalsIgnoreCase(finalCategory);
--                            // Log category check for debugging
-                             System.out.println("Checking category for item " + item.getProductName() + ": " + item.getProductCategory() + " == " + finalCategory + " -> " + matches);
-                             return matches;
-                         })
--                        // Collect filtered items into a new ArrayList
-                         .collect(Collectors.toCollection(ArrayList::new));
--                // Log filtered item count and list for debugging
-                 System.out.println("After category filter, result size: " + filteredItems.size());
-                 System.out.println("Items after category filter: " + filteredItems);
-             }
- 
--            // Filter items by name if specified
-+            // Step 2: Filter by name if specified
-             if (name != null && !name.trim().isEmpty()) {
-                 filteredItems = filteredItems.stream()
--                        // Keep items with names containing the search term (case-insensitive)
-                         .filter(item -> {
-                             boolean matches = item.getProductName().toLowerCase().contains(name.toLowerCase());
--                            // Log name check for debugging
-                             System.out.println("Checking name for item " + item.getProductName() + ": contains " + name + " -> " + matches);
-                             return matches;
-                         })
--                        // Collect filtered items into a new ArrayList
-                         .collect(Collectors.toCollection(ArrayList::new));
--                // Log filtered item count and list for debugging
-                 System.out.println("After name filter, result size: " + filteredItems.size());
-                 System.out.println("Items after name filter: " + filteredItems);
-             }
- 
--            // Filter items by minimum price if specified
-+            // Step 3: Filter by price range
-+            // Apply minPrice filter
-             if (minPriceStr != null && !minPriceStr.trim().isEmpty()) {
-                 try {
--                    // Parse minimum price from string
-                     double minPrice = Double.parseDouble(minPriceStr);
-                     filteredItems = filteredItems.stream()
--                            // Keep items with price at least the minimum
-                             .filter(item -> {
-                                 boolean matches = item.getProductPrice() >= minPrice;
--                                // Log price check for debugging
-                                 System.out.println("Checking minPrice for item " + item.getProductName() + ": " + item.getProductPrice() + " >= " + minPrice + " -> " + matches);
-                                 return matches;
-                             })
--                            // Collect filtered items into a new ArrayList
-                             .collect(Collectors.toCollection(ArrayList::new));
--                    // Log filtered item count and list for debugging
-                     System.out.println("After minPrice filter (" + minPrice + "), result size: " + filteredItems.size());
-                     System.out.println("Items after minPrice filter: " + filteredItems);
-                 } catch (NumberFormatException e) {
--                    // Log invalid minimum price for debugging
-                     System.out.println("Invalid minPrice: " + minPriceStr);
-                 }
-             }
- 
--            // Filter items by maximum price if specified
-+            // Apply maxPrice filter
-             if (maxPriceStr != null && !maxPriceStr.trim().isEmpty()) {
-                 try {
--                    // Parse maximum price from string
-                     double maxPrice = Double.parseDouble(maxPriceStr);
-                     filteredItems = filteredItems.stream()
--                            // Keep items with price at most the maximum
-                             .filter(item -> {
-                                 boolean matches = item.getProductPrice() <= maxPrice;
--                                // Log price check for debugging
-                                 System.out.println("Checking maxPrice for item " + item.getProductName() + ": " + item.getProductPrice() + " <= " + maxPrice + " -> " + matches);
-                                 return matches;
-                             })
--                            // Collect filtered items into a new ArrayList
-                             .collect(Collectors.toCollection(ArrayList::new));
--                    // Log filtered item count and list for debugging
-                     System.out.println("After maxPrice filter (" + maxPrice + "), result size: " + filteredItems.size());
-                     System.out.println("Items after maxPrice filter: " + filteredItems);
-                 } catch (NumberFormatException e) {
--                    // Log invalid maximum price for debugging
-                     System.out.println("Invalid maxPrice: " + maxPriceStr);
-                 }
-             }
- 
--            // Sort filtered items if the list is not empty
-+            // Step 4: Sort the filtered items using MergeServlet
-             if (!filteredItems.isEmpty()) {
--                // Default to sorting by name
--                MergeServlet.SortCriterion sortCriterion = MergeServlet.SortCriterion.NAME;
--                // Map sortBy parameter to sorting criterion
-+                MergeServlet.SortCriterion sortCriterion = MergeServlet.SortCriterion.NAME; // Default to name
-+
-+                // Map sortBy parameter to SortCriterion
-                 if (sortBy != null) {
-                     switch (sortBy.toLowerCase()) {
-                         case "name":
-@@ -232,198 +173,135 @@
-                             sortCriterion = MergeServlet.SortCriterion.PRICE;
-                             break;
-                         default:
--                            // Log invalid sort parameter and default to name
-                             System.out.println("Invalid sortBy parameter: " + sortBy + ", defaulting to NAME");
-                     }
-                 }
--                // Log sorting criterion for debugging
-+
-                 System.out.println("Sorting items with sortCriterion=" + sortCriterion);
--                // Sort items using MergeServlet
-                 mergeServlet.sortItems(filteredItems, sortCriterion);
-             }
- 
--            // Determine if the response is a search result (name or price filters applied)
-+            // Determine if we're showing search results or a specific category
-             boolean isSearchResult = (name != null && !name.trim().isEmpty()) ||
-                     (minPriceStr != null && !minPriceStr.trim().isEmpty()) ||
-                     (maxPriceStr != null && !maxPriceStr.trim().isEmpty());
--            // Set attributes for the JSP page
-+
-             request.setAttribute("items", filteredItems);
-             request.setAttribute("cart", cart);
-             request.setAttribute("totalPrice", totalPrice);
-             request.setAttribute("category", category);
-             request.setAttribute("isSearchResult", isSearchResult);
--            // Log forwarding details for debugging
-             System.out.println("Forwarding to cartIndex.jsp with items size: " + filteredItems.size() + ", isSearchResult: " + isSearchResult);
--            // Forward request to cartIndex.jsp for rendering
-             request.getRequestDispatcher("/cartAndOrders/cartIndex.jsp").forward(request, response);
-         }
-     }
- 
--    // Handles HTTP POST requests for adding, updating, or removing cart items
-     @Override
-     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Retrieve the current HTTP session
-         HttpSession session = request.getSession();
--        // Get the logged-in user from the session
-         User loggedInUser = (User) session.getAttribute("user");
--        // Require authentication for cart operations
-         if (loggedInUser == null) {
--            // Set response content type to JSON
-             response.setContentType("application/json");
--            // Initialize response writer
-             PrintWriter out = response.getWriter();
--            // Send JSON error response for unauthenticated access
--            out.println("{\"success\": false, \"message\": \"Please log in to access the cart.\"}");
--            // Flush output to ensure delivery
-+            out.write("{\"success\": false, \"message\": \"Please log in to access the cart.\"}");
-             out.flush();
-             return;
-         }
- 
--        // Log POST request action for debugging
-         System.out.println("Received POST request to CartServlet with action: " + request.getParameter("action"));
--        // Set response content type to JSON
-         response.setContentType("application/json");
--        // Initialize response writer
-         PrintWriter out = response.getWriter();
- 
--        // Declare list to store cart items
-         ArrayList<GroceryItem> cart;
--        // Load available grocery items from file
-         ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
-         if (items == null) {
--            // Initialize empty items list if file read fails
-             items = new ArrayList<>();
--            // Log initialization for debugging
-             System.out.println("Initialized empty items list for " + ITEMS_FILE + " (file not found or invalid)");
-         }
--        // Log loaded items for debugging
-         System.out.println("Loaded items from " + ITEMS_FILE + ": " + items);
- 
--        // Synchronize to ensure thread-safe cart operations
-         synchronized (this) {
--            // Load cart items from file
-             cart = FileUtil.readItems(CART_FILE);
-             if (cart == null) {
--                // Initialize empty cart if file read fails
-                 cart = new ArrayList<>();
--                // Log initialization for debugging
-                 System.out.println("Initialized empty cart for " + CART_FILE);
-             }
--            // Log loaded cart for debugging
-             System.out.println("Loaded cart before modification: " + cart);
- 
-             try {
--                // Handle add action to include a new item in the cart
-                 if ("add".equals(request.getParameter("action"))) {
--                    // Log item ID for debugging
-                     System.out.println("Processing 'add' action with itemId: " + request.getParameter("itemId"));
--                    // Parse item ID from request
-                     int itemId = Integer.parseInt(request.getParameter("itemId"));
--                    // Find item by ID in the items list
-                     GroceryItem itemToAdd = items.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);
-                     if (itemToAdd == null) {
--                        // Log and send error if item is not found
-                         System.out.println("Item not found for itemId: " + itemId);
--                        out.println("{\"success\": false, \"message\": \"Item not found\"}");
-+                        out.write("{\"success\": false, \"message\": \"Item not found\"}");
-                     } else if (itemToAdd.getQuantity() <= 0) {
--                        // Log and send error if item is out of stock
-                         System.out.println("Item out of stock: " + itemToAdd);
--                        out.println("{\"success\": false, \"message\": \"Item is out of stock\"}");
-+                        out.write("{\"success\": false, \"message\": \"Item is out of stock\"}");
-                     } else {
--                        // Check if item is already in the cart
-                         GroceryItem existingItem = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);
-                         if (existingItem != null) {
--                            // Send error if item is already in cart
--                            out.println("{\"success\": false, \"message\": \"Item already in cart, use cart to increase quantity\"}");
-+                            out.write("{\"success\": false, \"message\": \"Item already in cart, use cart to increase quantity\"}");
-                         } else {
--                            // Create new cart item with quantity 1
-                             GroceryItem cartItem = new GroceryItem(itemToAdd.getProductID(), itemToAdd.getProductCategory(),
-                                     itemToAdd.getProductName(), itemToAdd.getProductPrice(), itemToAdd.getProductImageLink(),
-                                     1, itemToAdd.getDescription());
--                            // Add item to cart
-                             cart.add(cartItem);
--                            // Decrease stock quantity
-                             itemToAdd.setQuantity(itemToAdd.getQuantity() - 1);
--                            // Update items file
-                             FileUtil.writeItems(ITEMS_FILE, items);
--                            // Update cart file
-                             FileUtil.writeItems(CART_FILE, cart);
--                            // Log addition for debugging
-                             System.out.println("Added new item to cart and updated stock: " + cartItem);
--                            // Calculate total cart price
-                             double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
--                            // Send JSON response with updated cart
-                             sendCartResponse(out, cart, totalPrice, items);
-                         }
-                     }
-                 } else if ("update".equals(request.getParameter("action"))) {
--                    // Log item ID for debugging
-                     System.out.println("Processing 'update' action with itemId: " + request.getParameter("itemId"));
--                    // Parse item ID and quantity change
-                     int itemId = Integer.parseInt(request.getParameter("itemId"));
-                     int change = Integer.parseInt(request.getParameter("change"));
--                    // Find item in cart by ID
-                     GroceryItem item = cart.stream().filter(i -> i.getProductID() == itemId).findFirst().orElse(null);
-                     if (item == null) {
--                        // Log and send error if item is not in cart
-                         System.out.println("Item not found in cart for itemId: " + itemId);
--                        out.println("{\"success\": false, \"message\": \"Item not found in cart\"}");
-+                        out.write("{\"success\": false, \"message\": \"Item not found in cart\"}");
-                     } else {
--                        // Get stock quantity for the item
-                         int stockQuantity = items.stream()
-                                 .filter(i -> i.getProductID() == itemId)
-                                 .findFirst()
-                                 .map(GroceryItem::getQuantity)
-                                 .orElse(0);
--                        // Calculate available stock
-                         int currentCartQuantity = item.getQuantity();
-                         int totalAvailableStock = stockQuantity + currentCartQuantity;
--                        // Adjust quantity within valid range
-                         int newQuantity = Math.max(0, Math.min(currentCartQuantity + change, totalAvailableStock));
-                         int quantityChange = newQuantity - currentCartQuantity;
-                         if (quantityChange != 0) {
--                            // Update stock quantity
-                             GroceryItem stockItem = items.stream()
-                                     .filter(i -> i.getProductID() == itemId)
-                                     .findFirst()
-                                     .orElse(null);
-                             if (stockItem != null) {
-                                 stockItem.setQuantity(stockItem.getQuantity() - quantityChange);
--                                // Update items file
-                                 FileUtil.writeItems(ITEMS_FILE, items);
--                                // Log stock update
-                                 System.out.println("Updated stock in " + ITEMS_FILE + ": " + items);
-                             }
--                            // Update cart quantity
-                             item.setQuantity(newQuantity);
-                             if (newQuantity == 0) {
--                                // Remove item if quantity is zero
-                                 cart.remove(item);
--                                // Log removal
-                                 System.out.println("Removed item from cart: " + item);
-                             } else {
--                                // Log quantity update
-                                 System.out.println("Updated item quantity in cart: " + item);
-                             }
--                            // Update cart file
-                             FileUtil.writeItems(CART_FILE, cart);
--                            // Log cart update
-                             System.out.println("Wrote cart to " + CART_FILE + ": " + cart);
-                         }
--                        // Calculate total cart price
-                         double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
--                        // Send JSON response with updated cart
-                         sendCartResponse(out, cart, totalPrice, items);
-                     }
-                 } else if ("remove".equals(request.getParameter("action"))) {
--                    // Log item ID for debugging
-                     System.out.println("Processing 'remove' action with itemId: " + request.getParameter("itemId"));
--                    // Parse item ID
-                     int itemId = Integer.parseInt(request.getParameter("itemId"));
--                    // Find item in cart by ID
-                     GroceryItem itemToRemove = cart.stream().filter(item -> item.getProductID() == itemId).findFirst().orElse(null);
-                     if (itemToRemove != null) {
--                        // Restore stock quantity
-                         int quantityRemoved = itemToRemove.getQuantity();
-                         cart.remove(itemToRemove);
-                         GroceryItem stockItem = items.stream()
-@@ -432,76 +310,54 @@
-                                 .orElse(null);
-                         if (stockItem != null) {
-                             stockItem.setQuantity(stockItem.getQuantity() + quantityRemoved);
--                            // Update items file
-                             FileUtil.writeItems(ITEMS_FILE, items);
--                            // Log stock update
-                             System.out.println("Updated stock in " + ITEMS_FILE + ": " + items);
-                         }
--                        // Update cart file
-                         FileUtil.writeItems(CART_FILE, cart);
--                        // Log cart update
-                         System.out.println("Wrote cart to " + CART_FILE + ": " + cart);
--                        // Calculate total cart price
-                         double totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
--                        // Send JSON response with updated cart
-                         sendCartResponse(out, cart, totalPrice, items);
-                     } else {
--                        // Log and send error if item is not in cart
-                         System.out.println("Item not found in cart for itemId: " + itemId);
--                        out.println("{\"success\": false, \"message\": \"Item not found in cart\"}");
-+                        out.write("{\"success\": false, \"message\": \"Item not found in cart\"}");
-                     }
-                 } else {
--                    // Log and send error for invalid action
-                     System.out.println("Invalid action received: " + request.getParameter("action"));
--                    out.println("{\"success\": false, \"message\": \"Invalid action\"}");
-+                    out.write("{\"success\": false, \"message\": \"Invalid action\"}");
-                 }
-             } catch (NumberFormatException e) {
--                // Log and send error for invalid numeric input
-                 System.out.println("Invalid item ID or change value: " + e.getMessage());
--                out.println("{\"success\": false, \"message\": \"Invalid item ID or change value\"}");
-+                out.write("{\"success\": false, \"message\": \"Invalid item ID or change value\"}");
-             } catch (IOException e) {
--                // Log and send error for file operation failures
-                 System.err.println("I/O error during cart operation: " + e.getMessage());
--                out.println("{\"success\": false, \"message\": \"Failed to update cart due to I/O error\"}");
-+                out.write("{\"success\": false, \"message\": \"Failed to update cart due to I/O error\"}");
-             }
-         }
--        // Flush output to ensure delivery
-         out.flush();
-     }
- 
--    // Generates a JSON response with cart details and stock information
-     private void sendCartResponse(PrintWriter out, ArrayList<GroceryItem> cart, double totalPrice, ArrayList<GroceryItem> items) {
--        // Start JSON response with success status and cart array
--        out.println("{\"success\": true, \"message\": \"Cart retrieved successfully\", \"cart\": [");
--        // Iterate through cart items
-+        out.write("{\"success\": true, \"message\": \"Cart retrieved successfully\", \"cart\": [");
-         for (int i = 0; i < cart.size(); i++) {
--            // Get current cart item
-             GroceryItem cartItem = cart.get(i);
--            // Retrieve stock quantity for the item
-             int stockQuantity = items.stream()
-                     .filter(item -> item.getProductID() == cartItem.getProductID())
-                     .findFirst()
-                     .map(GroceryItem::getQuantity)
-                     .orElse(0);
--            // Calculate total available stock
-             int totalAvailableStock = stockQuantity + cartItem.getQuantity();
--            // Write JSON object for the cart item
--            out.println(String.format("{\"productID\": %d, \"productName\": \"%s\", \"productPrice\": %.2f, " +
-+            out.write(String.format("{\"productID\": %d, \"productName\": \"%s\", \"productPrice\": %.2f, " +
-                             "\"productImageLink\": \"%s\", \"quantity\": %d, \"description\": \"%s\", \"stockQuantity\": %d, \"totalAvailableStock\": %d}",
-                     cartItem.getProductID(), escapeJson(cartItem.getProductName()), cartItem.getProductPrice(),
-                     escapeJson(cartItem.getProductImageLink()), cartItem.getQuantity(),
-                     escapeJson(cartItem.getDescription() != null ? cartItem.getDescription() : ""),
-                     stockQuantity, totalAvailableStock));
--            // Add comma between items except for the last
--            if (i < cart.size() - 1) out.println(",");
-+            if (i < cart.size() - 1) out.write(",");
-         }
--        // Close cart array and add total price
--        out.println("], \"totalPrice\": " + String.format("%.2f", totalPrice) + "}");
-+        out.write("], \"totalPrice\": " + String.format("%.2f", totalPrice) + "}");
-     }
- 
--    // Escapes special characters in strings for valid JSON output
-     private String escapeJson(String str) {
--        // Return empty string if null, otherwise escape quotes and newlines
-         return str != null ? str.replace("\"", "\\\"").replace("\n", "\\n") : "";
-     }
- }
-\ No newline at end of file
-Index: src/main/webapp/css/logIn.css
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Poppins\", sans-serif;\n}\nbody {\n    background: url(\"https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg\");\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /*background: #6EC207;*/\n    padding: 30px;\n}\n.container {\n    position: relative;\n    max-width: 850px;\n    width: 100%;\n    background: #fff;\n    padding: 40px 30px;\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    perspective: 2700px;\n}\n.container .cover {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 50%;\n    z-index: 98;\n    transition: all 1s ease;\n    transform-origin: left;\n    transform-style: preserve-3d;\n    backface-visibility: hidden;\n}\n.container #flip:checked ~ .cover {\n    transform: rotateY(-180deg);\n}\n.container #flip:checked ~ .forms .login-form {\n    pointer-events: none;\n}\n.container .cover .front,\n.container .cover .back {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n}\n.cover .back {\n    transform: rotateY(180deg);\n}\n.container .cover img {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    z-index: 10;\n}\n.container .cover .text {\n    position: absolute;\n    z-index: 10;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.container .cover .text::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    opacity: 0.5;\n    background: #0C9463;\n}\n.cover .text .text-1,\n.cover .text .text-2 {\n    z-index: 20;\n    font-size: 26px;\n    font-weight: 600;\n    color: #fff;\n    text-align: center;\n}\n.cover .text .text-2 {\n    font-size: 15px;\n    font-weight: 500;\n}\n.container .forms {\n    height: 100%;\n    width: 100%;\n    background: #fff;\n}\n.container .form-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.form-content .login-form,\n.form-content .signup-form {\n    width: calc(100% / 2 - 25px);\n}\n.forms .form-content .title {\n    position: relative;\n    font-size: 24px;\n    font-weight: 500;\n    color: #333;\n}\n.forms .form-content .title:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 3px;\n    width: 25px;\n    background: #3E7B27;\n}\n.forms .signup-form .title:before {\n    width: 20px;\n}\n.forms .form-content .input-boxes {\n    margin-top: 30px;\n}\n.forms .form-content .input-box {\n    display: flex;\n    align-items: center;\n    height: 50px;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n}\n.form-content .input-box input {\n    height: 100%;\n    width: 100%;\n    outline: none;\n    border: none;\n    padding: 0 30px;\n    font-size: 16px;\n    font-weight: 500;\n    border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n}\n.form-content .input-box input:focus,\n.form-content .input-box input:valid {\n    border-color: #3E7B27;\n}\n.form-content .input-box i {\n    position: absolute;\n    color: #3E7B27;\n    font-size: 17px;\n}\n.forms .form-content .text {\n    font-size: 14px;\n    font-weight: 500;\n    color: #3E7B27;\n}\n.forms .form-content .text a {\n    color:#3E7B27;\n    text-decoration: none;\n}\n.forms .form-content .text a:hover {\n    text-decoration: underline;\n}\n.forms .form-content .button {\n    color: #fff;\n    margin-top: 40px;\n}\n.forms .form-content .button input {\n    color: #fff;\n    background: #5CB338;\n    border-radius: 6px;\n    padding: 0;\n    cursor: pointer;\n    transition: all 0.4s ease;\n}\n.forms .form-content .button input:hover {\n    background: #3E7B27;\n}\n.forms .form-content label {\n    color: #191919;\n    cursor: pointer;\n}\n.forms .form-content label:hover {\n    text-decoration: underline;\n}\n.forms .form-content .login-text,\n.forms .form-content .sign-up-text {\n    text-align: center;\n    margin-top: 25px;\n}\n.container #flip {\n    display: none;\n}\n@media (max-width: 730px) {\n    .container .cover {\n        display: none;\n    }\n    .form-content .login-form,\n    .form-content .signup-form {\n        width: 100%;\n    }\n    .form-content .signup-form {\n        display: none;\n    }\n    .container #flip:checked ~ .forms .signup-form {\n        display: block;\n    }\n    .container #flip:checked ~ .forms .login-form {\n        display: none;\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/css/logIn.css b/src/main/webapp/css/logIn.css
---- a/src/main/webapp/css/logIn.css	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/webapp/css/logIn.css	(date 1747199054151)
-@@ -6,7 +6,7 @@
-     font-family: "Poppins", sans-serif;
- }
- body {
--    background: url("https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg");
-+    background: url("https://img.freepik.com/free-photo/shopping-cart-full-products-inside-supermarket_123827-28165.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740");
-     min-height: 100vh;
-     display: flex;
-     align-items: center;
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=12345678A@a\nuserNumber=US021583101081\nfullName=aloka warnakula mn\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/loggedInUser.txt	(date 1747198795031)
-@@ -1,9 +1,0 @@
----- User Start: US021583101081 ---
--username=alokawarnakula77@gmail.com
--password=12345678A@a
--userNumber=US021583101081
--fullName=aloka warnakula mn
--email=alokawarnakula77@gmail.com
--phoneNumber=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
----- User End ---
-Index: target/OnlineGroceryOrderSystem/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        .popup {\n            display: none;\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%) scale(0.8);\n            background: rgba(255, 255, 255, 0.98);\n            border-radius: 15px;\n            padding: 30px;\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n            max-width: 400px;\n            width: 90%;\n            text-align: center;\n            z-index: 1000;\n            border: 3px solid #3E7B27;\n            opacity: 0;\n            transition: opacity 0.3s ease, transform 0.3s ease;\n        }\n        .popup.active {\n            display: block;\n            opacity: 1;\n            transform: translate(-50%, -50%) scale(1);\n        }\n        .popup-content {\n            position: relative;\n        }\n        .popup-icon {\n            color: #3E7B27;\n            font-size: 24px;\n            margin-bottom: 15px;\n        }\n        .popup-content p {\n            margin: 0 0 20px;\n            font-size: 15px;\n            color: #721c24;\n            line-height: 1.5;\n        }\n        .popup-content .ok-btn {\n            background: #5CB338;\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            transition: background 0.3s, transform 0.2s;\n        }\n        .popup-content .ok-btn:hover {\n            background: #3E7B27;\n            transform: translateY(-2px);\n        }\n        .overlay {\n            display: none;\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.6);\n            z-index: 999;\n            opacity: 0;\n            transition: opacity 0.3s ease;\n        }\n        .overlay.active {\n            display: block;\n            opacity: 1;\n        }\n    </style>\n</head>\n<body>\n<div class=\"overlay\" id=\"popupOverlay\"></div>\n<div class=\"popup\" id=\"errorPopup\">\n    <div class=\"popup-content\">\n        <i class=\"fas fa-exclamation-circle popup-icon\"></i>\n        <p id=\"popupMessage\"></p>\n        <button class=\"ok-btn\" onclick=\"closePopup()\">OK</button>\n    </div>\n</div>\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"${pageContext.request.contextPath}/userLogin/forgotPassword.jsp\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <form id=\"signupForm\" action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    const signupForm = document.getElementById('signupForm');\n    const passwordInput = document.getElementById('password');\n    const popup = document.getElementById('errorPopup');\n    const popupMessage = document.getElementById('popupMessage');\n    const popupOverlay = document.getElementById('popupOverlay');\n\n    signupForm.addEventListener('submit', handleSubmit);\n    popupOverlay.addEventListener('click', closePopup);\n\n    function showPopup(message) {\n        popupMessage.textContent = message;\n        popup.classList.add('active');\n        popupOverlay.classList.add('active');\n    }\n\n    function closePopup() {\n        popup.classList.remove('active');\n        popupOverlay.classList.remove('active');\n    }\n\n    function handleSubmit(event) {\n        const password = passwordInput.value;\n        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$!%*?&])[A-Za-z\\d@#$!%*?&]{8,}$/;\n\n        if (!passwordRegex.test(password)) {\n            event.preventDefault();\n            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');\n            return false;\n        }\n        return true;\n    }\n</script>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/login.jsp b/target/OnlineGroceryOrderSystem/userLogin/login.jsp
---- a/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(date 1747199089039)
-@@ -79,7 +79,7 @@
-         }
-     </style>
- </head>
--<body>
-+<body style="background: url('https://img.freepik.com/free-photo/shopping-cart-full-products-inside-supermarket_123827-28165.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740') no-repeat center center fixed; background-size: cover">
- <div class="overlay" id="popupOverlay"></div>
- <div class="popup" id="errorPopup">
-     <div class="popup-content">
-@@ -92,14 +92,14 @@
-     <input type="checkbox" id="flip">
-     <div class="cover">
-         <div class="front">
--            <img src="https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg" alt="">
-+            <img src="https://img.freepik.com/free-photo/delivery-concept-handsome-african-american-delivery-man-carrying-package-box-grocery-food-drink-from-store-isolated-grey-studio-background-copy-space_1258-1230.jpg?ga=GA1.1.1475331235.1731237648&w=740" alt="">
-             <div class="text">
-                 <span class="text-1">Every new friend is a <br> new adventure</span>
-                 <span class="text-2">Let's get connected</span>
-             </div>
-         </div>
-         <div class="back">
--            <img src="https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg">
-+            <img src="https://img.freepik.com/free-photo/woman-holding-glass-juice-showing-phone-mock-up_23-2148332116.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740">
-             <div class="text">
-                 <span class="text-1">Complete miles of journey <br> with one step</span>
-                 <span class="text-2">Let's get started</span>
-Index: src/main/webapp/data/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/items.txt b/src/main/webapp/data/items.txt
---- a/src/main/webapp/data/items.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/webapp/data/items.txt	(date 1747198632692)
-@@ -2,7 +2,7 @@
- 2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
- 3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,300,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
-@@ -16,14 +16,14 @@
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
- 22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
- 25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
- 27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
- 29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
-Index: target/OnlineGroceryOrderSystem/userLogin/Success.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Success</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\">\n    <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>\n    <style>\n        body {\n            margin: 0;\n            padding: 0;\n            height: 100vh; /* Full viewport height */\n            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');\n            background-size: cover;\n            background-repeat: no-repeat;\n            display: flex; /* Use flexbox to center */\n            justify-content: center; /* Center horizontally */\n            align-items: center; /* Center vertically */\n        }\n\n        #card {\n            width: 1000px;\n            background: rgba(255, 255, 255, 0.9);\n            border-radius: 10px;\n            overflow: hidden;\n            margin: 0 auto; /* Horizontal centering fallback */\n            text-align: center;\n            font-family: 'Source Sans Pro', sans-serif;\n            animation: fadeIn 1s ease-in-out; /* Keep the fadeIn animation */\n        }\n\n        #upper-side {\n            padding: 4em;\n            background-color: #8BC34A;\n            background: rgba(0, 255, 0, 0.3);\n            display: block;\n            color: #fff;\n            border-top-right-radius: 8px;\n            border-top-left-radius: 8px;\n        }\n\n        #checkmark {\n            font-weight: lighter;\n            fill: #3E7B27;\n            margin: -3.5em auto auto 65px;\n        }\n\n        #status {\n            font-weight: lighter;\n            text-transform: uppercase;\n            letter-spacing: 2px;\n            font-size: 1.2em; /* Slightly larger for emphasis */\n            margin-top: -0.2em;\n            margin-bottom: 10px;\n            color: #3E7B27;\n        }\n\n        #lower-side {\n            padding: 2em 2em 5em 2em;\n            background: #fff;\n            display: block;\n            border-bottom-right-radius: 8px;\n            border-bottom-left-radius: 8px;\n        }\n\n        #message {\n            margin-top: -0.5em;\n            color: #757575;\n            letter-spacing: 1px;\n            font-size: 1.1em; /* Improved readability */\n            line-height: 1.5;\n        }\n\n        #contBtn {\n            position: relative;\n            top: 1.5em;\n            text-decoration: none;\n            background: #8BC34A;\n            color: #fff;\n            margin: auto;\n            padding: 0.8em 3em;\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);\n            border-radius: 25px;\n            transition: all 0.4s ease;\n            font-size: 1.1em; /* Slightly larger for better visibility */\n            text-transform: uppercase;\n        }\n\n        #contBtn:hover {\n            box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);\n            transition: all 0.4s ease;\n        }\n    </style>\n</head>\n<body>\n<div id='card'>\n    <div id='upper-side'>\n        <svg version=\"1.1\" id=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" xml:space=\"preserve\">\n            <path d=\"M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65\n            c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382\n            c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209\n            c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091\n            c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027\n            c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865\n            C131.967,94.755,132.296,93.271,131.583,92.152z\" />\n            <circle fill=\"none\" stroke=\"#3E7B27\" stroke-width=\"5\" stroke-miterlimit=\"10\" cx=\"109.486\" cy=\"104.353\" r=\"32.53\" />\n        </svg>\n        <h3 id='status'>Success</h3>\n    </div>\n    <div id='lower-side'>\n        <p id='message'>\n            <%\n                String type = request.getParameter(\"type\");\n                if (\"login\".equals(type)) {\n            %>\n            Login successful! Welcome back to your account.\n            <% } else if (\"signup\".equals(type)) { %>\n            Congratulations! Your account has been successfully created.\n            <% } else { %>\n            An action was completed successfully.\n            <% }\n            %>\n        </p>\n        <a href=\"${pageContext.request.contextPath}/index.jsp\" id=\"contBtn\">Go to Main Page</a>\n    </div>\n</div>\n</body>\n</html>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/Success.jsp b/target/OnlineGroceryOrderSystem/userLogin/Success.jsp
---- a/target/OnlineGroceryOrderSystem/userLogin/Success.jsp	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/userLogin/Success.jsp	(date 1747198778173)
-@@ -11,7 +11,7 @@
-             margin: 0;
-             padding: 0;
-             height: 100vh; /* Full viewport height */
--            background-image: url('https://thumbs.dreamstime.com/b/casual-cheerful-family-moment-shopping-needs-together-flat-vector-family-grocery-shopping-supermarket-346622194.jpg');
-+            background-image: url('https://img.freepik.com/free-photo/woman-shopping-vegetables-supermarket_1157-37875.jpg?ga=GA1.1.1475331235.1731237648&semt=ais_hybrid&w=740');
-             background-size: cover;
-             background-repeat: no-repeat;
-             display: flex; /* Use flexbox to center */
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt	(date 1747198632692)
-@@ -2,7 +2,7 @@
- 2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
- 3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,300,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
-@@ -16,14 +16,14 @@
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
- 22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
- 25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
- 27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
- 29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
-Index: src/main/webapp/data/orders.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- Order Start: OD092021244402 ---\norderNumber=OD092021244402\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-03-31 09:48:55\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=29, quantity=1\n[total]\ntotalPrice=1460.00\n--- Order End ---\n\n--- Order Start: OD543785297309 ---\norderNumber=OD543785297309\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-01 10:24:30\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=18, quantity=4\n[total]\ntotalPrice=96.00\n--- Order End ---\n\n--- Order Start: OD261952394242 ---\norderNumber=OD261952394242\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-01 11:28:45\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD753079415721 ---\norderNumber=OD753079415721\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:42:44\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=15\nproductID=41, quantity=1\n[total]\ntotalPrice=20511.00\n--- Order End ---\n\n--- Order Start: OD113125118289 ---\norderNumber=OD113125118289\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-05 16:43:56\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=1\n[total]\ntotalPrice=1337.00\n--- Order End ---\n\n--- Order Start: OD959211235390 ---\norderNumber=OD959211235390\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:44:35\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=41, quantity=1\n[total]\ntotalPrice=456.00\n--- Order End ---\n\n--- Order Start: OD529482646567 ---\norderNumber=OD529482646567\nuserNumber=US021583101081\nname=aloka warnakula \nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-02 11:15:12\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=49, quantity=1\n[total]\ntotalPrice=70.00\n--- Order End ---\n\n--- Order Start: OD176924944754 ---\norderNumber=OD176924944754\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-04 19:50:39\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=3\nproductID=15, quantity=1\nproductID=5, quantity=1\nproductID=9, quantity=1\nproductID=2, quantity=1\nproductID=22, quantity=1\nproductID=29, quantity=1\nproductID=25, quantity=1\n[total]\ntotalPrice=8803.00\n--- Order End ---\n\n--- Order Start: OD997161013374 ---\norderNumber=OD997161013374\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-06 08:57:36\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD500188660771 ---\norderNumber=OD500188660771\nuserNumber=US021583101081\nname=aloka warnakula mn\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\nconfirmationDate=2025-05-09 20:59:33\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=26, quantity=2\nproductID=19, quantity=4\n[total]\ntotalPrice=4100.00\n--- Order End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/orders.txt b/src/main/webapp/data/orders.txt
---- a/src/main/webapp/data/orders.txt	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/webapp/data/orders.txt	(date 1746502056000)
-@@ -183,23 +183,3 @@
- totalPrice=1458.00
- --- Order End ---
- 
----- Order Start: OD500188660771 ---
--orderNumber=OD500188660771
--userNumber=US021583101081
--name=aloka warnakula mn
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--confirmationDate=2025-05-09 20:59:33
--paymentStatus=Pending
--deliveryStatus=Pending
--orderStatus=Pending
--deliveredDate=
--[products]
--productID=26, quantity=2
--productID=19, quantity=4
--[total]
--totalPrice=4100.00
----- Order End ---
--
-Index: src/main/java/servlet/MergeServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>// Package for servlet-related classes handling HTTP requests\npackage servlet;\n\n// Import Jakarta Servlet API for servlet functionality\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\n// Import model class for grocery items\nimport model.GroceryItem;\n// Import utility for dynamic array operations\nimport java.util.ArrayList;\n\n// MergeServlet implements merge sort for sorting GroceryItem lists by name or price\npublic class MergeServlet extends HttpServlet {\n\n    // Enum defining criteria for sorting GroceryItem objects\n    public enum SortCriterion {\n        NAME,  // Sorts items alphabetically by product name\n        PRICE  // Sorts items by price in ascending order\n    }\n\n    // Sorts a list of GroceryItems using merge sort with the specified criterion\n    public void mergeSort(ArrayList<GroceryItem> items, int left, int right, SortCriterion criterion) {\n        // Log sorting range and criterion for debugging\n        System.out.println(\"MergeServlet: Starting mergeSort with left=\" + left + \", right=\" + right + \", items size=\" + items.size() + \", criterion=\" + criterion);\n        // Proceed only if the subarray has multiple elements\n        if (left < right) {\n            // Calculate midpoint to divide the array, avoiding integer overflow\n            int mid = left + (right - left) / 2;\n            // Log the split point for debugging\n            System.out.println(\"MergeServlet: Splitting at mid=\" + mid);\n            // Recursively sort the left subarray\n            mergeSort(items, left, mid, criterion);\n            // Recursively sort the right subarray\n            mergeSort(items, mid + 1, right, criterion);\n            // Merge the sorted subarrays\n            merge(items, left, mid, right, criterion);\n        }\n        // Log completion of sorting for this range\n        System.out.println(\"MergeServlet: Finished mergeSort for range left=\" + left + \", right=\" + right);\n    }\n\n    // Merges two sorted subarrays into a single sorted array based on the criterion\n    private void merge(ArrayList<GroceryItem> items, int left, int mid, int right, SortCriterion criterion) {\n        // Log merging range for debugging\n        System.out.println(\"MergeServlet: Merging from left=\" + left + \", mid=\" + mid + \", right=\" + right);\n        // Calculate sizes of left and right subarrays\n        int n1 = mid - left + 1;\n        int n2 = right - mid;\n\n        // Initialize temporary arrays for left and right subarrays\n        ArrayList<GroceryItem> leftArray = new ArrayList<>(n1);\n        ArrayList<GroceryItem> rightArray = new ArrayList<>(n2);\n\n        // Copy items to temporary left array\n        for (int i = 0; i < n1; i++) {\n            leftArray.add(items.get(left + i));\n        }\n        // Copy items to temporary right array\n        for (int j = 0; j < n2; j++) {\n            rightArray.add(items.get(mid + 1 + j));\n        }\n\n        // Merge items back into the original array\n        int i = 0, j = 0, k = left;\n        while (i < n1 && j < n2) {\n            // Get items from left and right subarrays\n            GroceryItem leftItem = leftArray.get(i);\n            GroceryItem rightItem = rightArray.get(j);\n\n            // Compare items using the specified criterion\n            int comparison = compareItems(leftItem, rightItem, criterion);\n            // Log comparison details for debugging\n            System.out.println(\"MergeServlet: Comparison (\" + criterion + \") - \" + getItemKey(leftItem, criterion) + \" vs \" + getItemKey(rightItem, criterion) + \" -> \" + comparison);\n\n            // Place the smaller (or equal) item in the result array\n            if (comparison <= 0) {\n                items.set(k++, leftArray.get(i++));\n            } else {\n                items.set(k++, rightArray.get(j++));\n            }\n        }\n\n        // Copy any remaining items from left subarray\n        while (i < n1) {\n            // Log copying of remaining left item for debugging\n            System.out.println(\"MergeServlet: Copying remaining left item at index \" + i);\n            items.set(k++, leftArray.get(i++));\n        }\n\n        // Copy any remaining items from right subarray\n        while (j < n2) {\n            // Log copying of remaining right item for debugging\n            System.out.println(\"MergeServlet: Copying remaining right item at index \" + j);\n            items.set(k++, rightArray.get(j++));\n        }\n\n        // Log the merged subarray for debugging\n        System.out.println(\"MergeServlet: Finished merging, items in range [\" + left + \",\" + right + \"]: \" + items.subList(left, right + 1));\n    }\n\n    // Compares two GroceryItems based on the specified criterion\n    private int compareItems(GroceryItem item1, GroceryItem item2, SortCriterion criterion) {\n        switch (criterion) {\n            case NAME:\n                // Compare names case-insensitively, handling nulls as empty strings\n                String name1 = item1.getProductName() != null ? item1.getProductName() : \"\";\n                String name2 = item2.getProductName() != null ? item2.getProductName() : \"\";\n                return name1.compareToIgnoreCase(name2);\n            case PRICE:\n                // Compare prices using Double.compare for precision\n                return Double.compare(item1.getProductPrice(), item2.getProductPrice());\n            default:\n                // Return 0 for invalid criteria to ensure safe handling\n                return 0;\n        }\n    }\n\n    // Retrieves the key (name or price) for logging comparison details\n    private String getItemKey(GroceryItem item, SortCriterion criterion) {\n        switch (criterion) {\n            case NAME:\n                // Return product name or \"null\" if name is absent\n                return item.getProductName() != null ? item.getProductName() : \"null\";\n            case PRICE:\n                // Convert price to string for logging\n                return String.valueOf(item.getProductPrice());\n            default:\n                // Return empty string for invalid criteria\n                return \"\";\n        }\n    }\n\n    // Sorts the items list using merge sort with the specified criterion\n    public void sortItems(ArrayList<GroceryItem> items, SortCriterion criterion) {\n        // Skip sorting if the list is null or empty\n        if (items == null || items.isEmpty()) {\n            // Log that sorting is skipped for debugging\n            System.out.println(\"MergeServlet: Items list is null or empty, skipping sort\");\n            return;\n        }\n        // Log the start of sorting with criterion for debugging\n        System.out.println(\"MergeServlet: Applying Merge Sort with criterion=\" + criterion);\n        // Perform merge sort on the entire list\n        mergeSort(items, 0, items.size() - 1, criterion);\n        // Log the sorted list for debugging\n        System.out.println(\"MergeServlet: Items after Merge Sort: \" + items);\n    }\n\n    // Sorts items by name for backward compatibility\n    public void sortItems(ArrayList<GroceryItem> items) {\n        // Delegate to sortItems with NAME criterion\n        sortItems(items, SortCriterion.NAME);\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/MergeServlet.java b/src/main/java/servlet/MergeServlet.java
---- a/src/main/java/servlet/MergeServlet.java	(revision 08e3c60cfd3afdcb680002fbb745406974304a7e)
-+++ b/src/main/java/servlet/MergeServlet.java	(date 1742654936000)
-@@ -1,78 +1,59 @@
--// Package for servlet-related classes handling HTTP requests
- package servlet;
- 
--// Import Jakarta Servlet API for servlet functionality
- import jakarta.servlet.ServletException;
- import jakarta.servlet.http.HttpServlet;
--// Import model class for grocery items
- import model.GroceryItem;
--// Import utility for dynamic array operations
-+
- import java.util.ArrayList;
- 
--// MergeServlet implements merge sort for sorting GroceryItem lists by name or price
- public class MergeServlet extends HttpServlet {
- 
--    // Enum defining criteria for sorting GroceryItem objects
-+    // Enum to define sorting criteria (only NAME and PRICE)
-     public enum SortCriterion {
--        NAME,  // Sorts items alphabetically by product name
--        PRICE  // Sorts items by price in ascending order
-+        NAME,  // Sort by product name (alphabetically)
-+        PRICE  // Sort by price (ascending)
-     }
- 
--    // Sorts a list of GroceryItems using merge sort with the specified criterion
-+    // Merge sort implementation with a single criterion
-     public void mergeSort(ArrayList<GroceryItem> items, int left, int right, SortCriterion criterion) {
--        // Log sorting range and criterion for debugging
-         System.out.println("MergeServlet: Starting mergeSort with left=" + left + ", right=" + right + ", items size=" + items.size() + ", criterion=" + criterion);
--        // Proceed only if the subarray has multiple elements
-         if (left < right) {
--            // Calculate midpoint to divide the array, avoiding integer overflow
--            int mid = left + (right - left) / 2;
--            // Log the split point for debugging
-+            int mid = left + (right - left) / 2; // Avoid integer overflow
-             System.out.println("MergeServlet: Splitting at mid=" + mid);
--            // Recursively sort the left subarray
-             mergeSort(items, left, mid, criterion);
--            // Recursively sort the right subarray
-             mergeSort(items, mid + 1, right, criterion);
--            // Merge the sorted subarrays
-             merge(items, left, mid, right, criterion);
-         }
--        // Log completion of sorting for this range
-         System.out.println("MergeServlet: Finished mergeSort for range left=" + left + ", right=" + right);
-     }
- 
--    // Merges two sorted subarrays into a single sorted array based on the criterion
-     private void merge(ArrayList<GroceryItem> items, int left, int mid, int right, SortCriterion criterion) {
--        // Log merging range for debugging
-         System.out.println("MergeServlet: Merging from left=" + left + ", mid=" + mid + ", right=" + right);
--        // Calculate sizes of left and right subarrays
-         int n1 = mid - left + 1;
-         int n2 = right - mid;
- 
--        // Initialize temporary arrays for left and right subarrays
-+        // Create temporary arrays for left and right halves
-         ArrayList<GroceryItem> leftArray = new ArrayList<>(n1);
-         ArrayList<GroceryItem> rightArray = new ArrayList<>(n2);
- 
--        // Copy items to temporary left array
-+        // Copy data to temporary arrays
-         for (int i = 0; i < n1; i++) {
-             leftArray.add(items.get(left + i));
-         }
--        // Copy items to temporary right array
-         for (int j = 0; j < n2; j++) {
-             rightArray.add(items.get(mid + 1 + j));
-         }
- 
--        // Merge items back into the original array
-+        // Merge the temporary arrays back into items
-         int i = 0, j = 0, k = left;
-         while (i < n1 && j < n2) {
--            // Get items from left and right subarrays
-             GroceryItem leftItem = leftArray.get(i);
-             GroceryItem rightItem = rightArray.get(j);
- 
--            // Compare items using the specified criterion
-+            // Compare based on the single criterion
-             int comparison = compareItems(leftItem, rightItem, criterion);
--            // Log comparison details for debugging
-             System.out.println("MergeServlet: Comparison (" + criterion + ") - " + getItemKey(leftItem, criterion) + " vs " + getItemKey(rightItem, criterion) + " -> " + comparison);
- 
--            // Place the smaller (or equal) item in the result array
-             if (comparison <= 0) {
-                 items.set(k++, leftArray.get(i++));
-             } else {
-@@ -80,75 +61,60 @@
-             }
-         }
- 
--        // Copy any remaining items from left subarray
-+        // Copy remaining elements of leftArray
-         while (i < n1) {
--            // Log copying of remaining left item for debugging
-             System.out.println("MergeServlet: Copying remaining left item at index " + i);
-             items.set(k++, leftArray.get(i++));
-         }
- 
--        // Copy any remaining items from right subarray
-+        // Copy remaining elements of rightArray
-         while (j < n2) {
--            // Log copying of remaining right item for debugging
-             System.out.println("MergeServlet: Copying remaining right item at index " + j);
-             items.set(k++, rightArray.get(j++));
-         }
- 
--        // Log the merged subarray for debugging
-         System.out.println("MergeServlet: Finished merging, items in range [" + left + "," + right + "]: " + items.subList(left, right + 1));
-     }
- 
--    // Compares two GroceryItems based on the specified criterion
-+    // Helper method to compare two GroceryItems based on a criterion
-     private int compareItems(GroceryItem item1, GroceryItem item2, SortCriterion criterion) {
-         switch (criterion) {
-             case NAME:
--                // Compare names case-insensitively, handling nulls as empty strings
-                 String name1 = item1.getProductName() != null ? item1.getProductName() : "";
-                 String name2 = item2.getProductName() != null ? item2.getProductName() : "";
-                 return name1.compareToIgnoreCase(name2);
-             case PRICE:
--                // Compare prices using Double.compare for precision
-                 return Double.compare(item1.getProductPrice(), item2.getProductPrice());
-             default:
--                // Return 0 for invalid criteria to ensure safe handling
--                return 0;
-+                return 0; // Should not happen
-         }
-     }
- 
--    // Retrieves the key (name or price) for logging comparison details
-+    // Helper method to get the key for logging
-     private String getItemKey(GroceryItem item, SortCriterion criterion) {
-         switch (criterion) {
-             case NAME:
--                // Return product name or "null" if name is absent
-                 return item.getProductName() != null ? item.getProductName() : "null";
-             case PRICE:
--                // Convert price to string for logging
-                 return String.valueOf(item.getProductPrice());
-             default:
--                // Return empty string for invalid criteria
-                 return "";
-         }
-     }
- 
--    // Sorts the items list using merge sort with the specified criterion
-+    // Public method to sort the items list with a single criterion
-     public void sortItems(ArrayList<GroceryItem> items, SortCriterion criterion) {
--        // Skip sorting if the list is null or empty
-         if (items == null || items.isEmpty()) {
--            // Log that sorting is skipped for debugging
-             System.out.println("MergeServlet: Items list is null or empty, skipping sort");
-             return;
-         }
--        // Log the start of sorting with criterion for debugging
-         System.out.println("MergeServlet: Applying Merge Sort with criterion=" + criterion);
--        // Perform merge sort on the entire list
-         mergeSort(items, 0, items.size() - 1, criterion);
--        // Log the sorted list for debugging
-         System.out.println("MergeServlet: Items after Merge Sort: " + items);
-     }
- 
--    // Sorts items by name for backward compatibility
-+    // Default sort method (for backward compatibility)
-     public void sortItems(ArrayList<GroceryItem> items) {
--        // Delegate to sortItems with NAME criterion
--        sortItems(items, SortCriterion.NAME);
-+        sortItems(items, SortCriterion.NAME); // Default to sorting by name
-     }
- }
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,16171 +0,0 @@
-Index: target/OnlineGroceryOrderSystem/css/userDashboard.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/userDashboard.css b/target/OnlineGroceryOrderSystem/css/userDashboard.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/userDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,388 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    /*background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg');*/
--    /*background-size: cover;*/
--    /*background-position: center;*/
--    /*background-repeat: no-repeat;*/
--    /*background-attachment: fixed;*/
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.back-link, .nav-links .back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--
--.back-link:hover, .nav-links .back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    text-decoration: none;
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--    transition: color 0.3s ease;
--}
--
--.logo:hover i {
--    color: #689f38;
--}
--
--.search-bar {
--    display: flex;
--    align-items: center;
--    background-color: #f1f1f1; /* Light gray background */
--    border: 1px solid #DDD; /* Subtle border */
--    border-radius: 20px; /* Fully rounded corners */
--}
--
--.search-bar input {
--    padding: 8px;
--    font-size: 14px;
--    border: none; /* Remove border since the parent has it */
--    border-radius: 20px 0 0 20px; /* Rounded on the left side */
--    outline: none;
--    background-color: transparent; /* Transparent to blend with parent background */
--    color: #333; /* Dark text for contrast */
--    flex: 1; /* Take up remaining space */
--}
--
--.search-bar input::placeholder {
--    color: #666; /* Placeholder text color */
--}
--
--.search-bar i {
--    padding: 8px 10px; /* Reduced padding to make the button narrower */
--    background-color: #8bc34a; /* Full green background */
--    color: #FFF; /* White icon */
--    border: none;
--    border-radius: 0 20px 20px 0; /* Rounded on the right side */
--    cursor: pointer;
--    transition: background-color 0.3s ease;
--}
--
--.search-bar i:hover {
--    background-color: #689f38; /* Darker green on hover */
--}
--
--.content {
--    width: 100%;
--    padding: 5px 1cm 20px 1cm;
--    background-color: transparent;
--}
--
--.profile-container {
--    max-width: 1200px;
--    margin: 10px auto 20px auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.section-header {
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.user-details {
--    display: flex;
--    justify-content: flex-start;
--    margin-bottom: 30px;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: flex-start;
--    gap: 20px;
--}
--
--.user-icon {
--    font-size: 60px;
--    color: #333;
--}
--
--.user-details-text p {
--    font-size: 16px;
--    color: #555;
--    margin: 5px 0;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--.user-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--}
--
--.user-row {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    background-color: #f9f9f9;
--    padding: 10px 20px;
--    border-radius: 5px;
--    transition: background-color 0.3s ease, box-shadow 0.3s ease;
--}
--
--.user-row:hover {
--    background-color: #e6e6e6; /* Slightly darker gray for hover */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Add a subtle shadow on hover */
--}
--
--.user-number, .user-email, .user-fullname {
--    flex: 1;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-section {
--    margin-top: 20px;
--}
--
--.activity-tabs {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    border-bottom: 1px solid #DDD;
--    margin-bottom: 20px;
--}
--
--.activity-tabs .tab {
--    padding: 10px 20px;
--    font-size: 16px;
--    color: #555;
--    cursor: pointer;
--    transition: color 0.3s ease;
--    text-decoration: none;
--}
--
--.activity-tabs .tab.active {
--    color: #333;
--    font-weight: bold;
--    border-bottom: 2px solid #333;
--}
--
--.activity-tabs .tab:hover {
--    color: #333;
--}
--
--.activity-tabs .search-bar {
--    display: flex;
--    align-items: center;
--    margin-left: auto; /* Pushes the search bar to the far right */
--    background-color: #f1f1f1; /* Light background */
--    border: 1px solid #DDD; /* Subtle border */
--    border-radius: 20px; /* Fully rounded corners */
--}
--
--.activity-tabs .search-bar form {
--    display: flex;
--    align-items: center;
--    width: 100%;
--}
--
--.activity-tabs .search-bar input[type="text"] {
--    padding: 8px;
--    font-size: 14px;
--    border: none; /* Remove border since the parent has it */
--    border-radius: 20px 0 0 20px; /* Rounded on the left side */
--    outline: none;
--    background-color: transparent; /* Transparent to blend with parent background */
--    color: #333; /* Dark text for contrast */
--    flex: 1; /* Take up remaining space */
--}
--
--.activity-tabs .search-bar input[type="text"]::placeholder {
--    color: #666; /* Placeholder text color */
--}
--
--.activity-tabs .search-bar button {
--    padding: 2px 7px; /* Reduced padding to make the button narrower */
--    background-color: #8bc34a; /* Full green background */
--    color: #FFF; /* White icon */
--    border: none;
--    border-radius: 0 20px 20px 0; /* Rounded on the right side */
--    cursor: pointer;
--    outline: none; /* Remove default outline */
--    transition: background-color 0.3s ease;
--}
--
--
--.activity-tabs .search-bar i:hover {
--    background-color: #689f38; /* Darker green on hover */
--}
--
--.activity-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--    max-height: 300px;
--    overflow-y: auto;
--    padding-right: 10px;
--}
--
--.activity-list::-webkit-scrollbar {
--    width: 8px;
--}
--
--.activity-list::-webkit-scrollbar-track {
--    background: #f1f1f1;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb {
--    background: #8bc34a;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb:hover {
--    background: #689f38;
--}
--
--.activity-item {
--    display: flex;
--    align-items: center;
--    background-color: #F9F9F9;
--    padding: 10px;
--    border-radius: 5px;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-item i {
--    font-size: 16px;
--    color: #333;
--    margin-right: 10px;
--}
--
--.activity-item p {
--    margin: 0;
--    flex: 1;
--}
--
--.activity-item .timestamp {
--    font-size: 12px;
--    color: #999;
--}
--
--.activity-item .status {
--    padding: 2px 8px;
--    border-radius: 10px;
--    font-size: 12px;
--    color: #FFF;
--}
--
--.activity-item .status.pending {
--    background-color: #FFA500;
--}
--
--.activity-item .status.completed {
--    background-color: #28A745;
--}
--
--.activity-item .status.disabled {
--    background-color: #DC3545;
--}
--
--.cancel-link {
--    display: inline-block;
--    padding: 2px 8px;
--    background-color: #00CED1;
--    color: #FFF;
--    border-radius: 10px;
--    font-size: 12px;
--    text-decoration: none;
--    transition: background-color 0.3s ease;
--}
--
--.cancel-link:hover {
--    background-color: #00B7B9;
--}
--
--.total-info {
--    margin-top: 20px;
--    padding: 10px;
--    background-color: #f9f9f9;
--    border-radius: 5px;
--    color: #2c3e50;
--    display: flex;
--    justify-content: space-between;
--    font-size: 16px;
--    font-weight: bold;
--}
--
--.error-message {
--    color: red;
--    text-align: center;
--    margin-bottom: 20px;
--}
--
--.activity-item-img {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    margin-right: 10px;
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/stockDashboard.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/stockDashboard.jsp b/target/OnlineGroceryOrderSystem/adminPages/stockDashboard.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/stockDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,92 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.GroceryItem" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Stock Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/stockDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/stockDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin or Stock Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "stock".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Get the low stock items from the request attribute
--    List<GroceryItem> lowStockItems = (List<GroceryItem>) request.getAttribute("lowStockItems");
--    if (lowStockItems == null) {
--        response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=missingData");
--        return;
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-chart-column"></i> Stock Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="stock-search" placeholder="Search Product ID" onkeyup="searchItems()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<!-- Refill Stock Section -->
--<div id="stock-section" class="stock-section">
--    <div class="section-header">
--        <h2>Refill Stock - 250 Minimum</h2>
--    </div>
--    <div class="stock-list" id="stock-items">
--        <%
--            if (lowStockItems != null && !lowStockItems.isEmpty()) {
--                for (GroceryItem item : lowStockItems) {
--        %>
--        <div class="stock-row" data-product-id="<%= item.getProductID() %>">
--            <span class="product-id">Product #<%= item.getProductID() %></span>
--            <span class="product-image">
--                <% if (item.getProductImageLink() != null && !item.getProductImageLink().isEmpty()) { %>
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="item-image">
--                <% } else { %>
--                    No Image
--                <% } %>
--            </span>
--            <span class="product-name"><%= item.getProductName() %></span>
--            <span class="product-category"><%= item.getProductCategory() %></span>
--            <span class="stock-count">Stock: <%= item.getQuantity() %></span>
--            <form action="${pageContext.request.contextPath}/StockAdminServlet" method="post" class="stock-update-form">
--                <input type="hidden" name="action" value="updateStock">
--                <input type="hidden" name="productID" value="<%= item.getProductID() %>">
--                <textarea name="stockCount" placeholder="Enter new stock count" class="stock-input" required></textarea>
--                <button type="submit" class="save-btn">Save</button>
--            </form>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No items with low stock found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/admin.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/admin.js b/target/OnlineGroceryOrderSystem/js/admin.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/admin.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,4 +0,0 @@
--// Placeholder for future JavaScript functionality
--document.addEventListener('DOMContentLoaded', function() {
--    console.log('Admin dashboard loaded');
--});
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/data/deliveredOrders.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/deliveredOrders.txt b/target/OnlineGroceryOrderSystem/data/deliveredOrders.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/data/deliveredOrders.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,782 +0,0 @@
----- Order Start: OD631189062774 ---
--orderNumber=OD631189062774
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-21 13:23:38
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:54:19
--[products]
--productID=7, quantity=1
--[total]
--totalPrice=67.00
----- Order End ---
--
----- Order Start: OD682072780215 ---
--orderNumber=OD682072780215
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 13:23:29
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:23:29
--[products]
--productID=16, quantity=1
--[total]
--totalPrice=60.00
----- Order End ---
--
----- Order Start: OD029969353013 ---
--orderNumber=OD029969353013
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 13:27:28
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:27:28
--[products]
--productID=22, quantity=1
--[total]
--totalPrice=864.00
----- Order End ---
--
----- Order Start: OD263333171327 ---
--orderNumber=OD263333171327
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-21 13:27:16
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:27:16
--[products]
--productID=16, quantity=1
--[total]
--totalPrice=60.00
----- Order End ---
--
----- Order Start: OD018792948393 ---
--orderNumber=OD018792948393
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 18:45:46
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 21:45:46
--[products]
--productID=10, quantity=1
--productID=14, quantity=1
--productID=11, quantity=1
--productID=3, quantity=1
--productID=25, quantity=1
--productID=12, quantity=1
--productID=4, quantity=1
--productID=9, quantity=1
--productID=2, quantity=1
--productID=6, quantity=1
--productID=1, quantity=1
--productID=28, quantity=1
--productID=8, quantity=1
--productID=13, quantity=1
--productID=23, quantity=1
--productID=30, quantity=1
--productID=24, quantity=1
--productID=5, quantity=1
--productID=20, quantity=1
--productID=22, quantity=1
--productID=21, quantity=1
--productID=27, quantity=1
--productID=32, quantity=1
--productID=17, quantity=1
--productID=15, quantity=1
--productID=29, quantity=1
--productID=26, quantity=1
--[total]
--totalPrice=15424.00
----- Order End ---
--
----- Order Start: OD414731133584 ---
--orderNumber=OD414731133584
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:04
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:04
--[products]
--productID=13, quantity=1
--productID=8, quantity=1
--[total]
--totalPrice=547.00
----- Order End ---
--
----- Order Start: OD475907670530 ---
--orderNumber=OD475907670530
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:15
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:15
--[products]
--productID=20, quantity=1
--productID=22, quantity=1
--[total]
--totalPrice=1514.00
----- Order End ---
--
----- Order Start: OD501473252419 ---
--orderNumber=OD501473252419
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:41
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:42:43
--[products]
--productID=31, quantity=1
--[total]
--totalPrice=289.00
----- Order End ---
--
----- Order Start: OD540591659521 ---
--orderNumber=OD540591659521
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:28
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:28
--[products]
--productID=40, quantity=1
--[total]
--totalPrice=4999.00
----- Order End ---
--
----- Order Start: OD055993378831 ---
--orderNumber=OD055993378831
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:32:53
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:32:53
--[products]
--productID=47, quantity=1
--[total]
--totalPrice=40.00
----- Order End ---
--
----- Order Start: OD005277691952 ---
--orderNumber=OD005277691952
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:07
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:33:07
--[products]
--productID=37, quantity=1
--[total]
--totalPrice=4375.00
----- Order End ---
--
----- Order Start: OD112009552234 ---
--orderNumber=OD112009552234
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 21:45:01
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:45:01
--[products]
--productID=18, quantity=1
--productID=11, quantity=1
--[total]
--totalPrice=142.00
----- Order End ---
--
----- Order Start: OD730565057552 ---
--orderNumber=OD730565057552
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 21:45:25
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:45:25
--[products]
--productID=44, quantity=1
--[total]
--totalPrice=2242.00
----- Order End ---
--
----- Order Start: OD732940639288 ---
--orderNumber=OD732940639288
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 21:59:12
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:59:12
--[products]
--productID=36, quantity=1
--[total]
--totalPrice=3500.00
----- Order End ---
--
----- Order Start: OD196538863027 ---
--orderNumber=OD196538863027
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=scheduled
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:26
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 12:23:05
--[products]
--productID=34, quantity=1
--productID=36, quantity=3
--[total]
--totalPrice=14875.00
----- Order End ---
--
----- Order Start: OD158055702554 ---
--orderNumber=OD158055702554
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-26 17:26:42
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 17:26:42
--[products]
--productID=17, quantity=1
--[total]
--totalPrice=1200.00
----- Order End ---
--
----- Order Start: OD731201910824 ---
--orderNumber=OD731201910824
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-26 17:46:40
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:42:52
--[products]
--productID=17, quantity=1
--[total]
--totalPrice=1200.00
----- Order End ---
--
----- Order Start: OD506939152583 ---
--orderNumber=OD506939152583
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 16:06:12
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-25 16:06:12
--[products]
--productID=27, quantity=8
--productID=17, quantity=1
--[total]
--totalPrice=11896.00
----- Order End ---
--
----- Order Start: OD850214594981 ---
--orderNumber=OD850214594981
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-26 18:53:56
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 18:53:56
--[products]
--productID=11, quantity=1
--[total]
--totalPrice=118.00
----- Order End ---
--
----- Order Start: OD214566292753 ---
--orderNumber=OD214566292753
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-26 18:58:49
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 18:58:49
--[products]
--productID=6, quantity=1
--[total]
--totalPrice=260.00
----- Order End ---
--
----- Order Start: OD162989834688 ---
--orderNumber=OD162989834688
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-24 21:32:24
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-24 21:32:24
--[products]
--productID=12, quantity=1
--[total]
--totalPrice=139.00
----- Order End ---
--
----- Order Start: OD922831337574 ---
--orderNumber=OD922831337574
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-27 13:38:56
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 11:17:35
--[products]
--productID=11, quantity=6
--[total]
--totalPrice=708.00
----- Order End ---
--
----- Order Start: OD999111222333 ---
--orderNumber=OD999111222333
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=scheduled
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-24 10:00:00
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-27 14:00:00
--[products]
--productID=5, quantity=2
--[total]
--totalPrice=300.00
----- Order End ---
--
----- Order Start: OD444555666777 ---
--orderNumber=OD444555666777
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 09:30:00
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-25 12:30:00
--[products]
--productID=8, quantity=1
--[total]
--totalPrice=275.00
----- Order End ---
--
----- Order Start: OD744649925723 ---
--orderNumber=OD744649925723
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 08:19:14
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-30 19:27:56
--[products]
--productID=18, quantity=1
--productID=47, quantity=9
--[total]
--totalPrice=384.00
----- Order End ---
--
----- Order Start: OD918259612180 ---
--orderNumber=OD918259612180
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-25 09:37:54
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-30 19:28:09
--[products]
--productID=7, quantity=1
--[total]
--totalPrice=67.00
----- Order End ---
--
----- Order Start: OD181572151420 ---
--orderNumber=OD181572151420
--userNumber=US030548082274
--name=jayashan guruge
--phoneNum=0764350677
--address="Sampatha"
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 10:09:03
--paymentStatus=Cancelled
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-25 10:09:03
--[products]
--productID=27, quantity=1
--[total]
--totalPrice=1337.00
----- Order End ---
--
----- Order Start: OD488567459491 ---
--orderNumber=OD488567459491
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-31 09:45:17
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:39:52
--[products]
--productID=21, quantity=1
--[total]
--totalPrice=1164.00
----- Order End ---
--
----- Order Start: OD898037967534 ---
--orderNumber=OD898037967534
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-31 09:54:35
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:52:29
--[products]
--productID=35, quantity=1
--[total]
--totalPrice=2250.00
----- Order End ---
--
----- Order Start: OD709699593942 ---
--orderNumber=OD709699593942
--userNumber=US021583101081
--name=aloka warnakula nethara
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-27 12:31:31
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:56:00
--[products]
--productID=38, quantity=1
--[total]
--totalPrice=1500.00
----- Order End ---
--
----- Order Start: OD496770012037 ---
--orderNumber=OD496770012037
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 18:43:30
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:12:14
--[products]
--productID=16, quantity=1
--productID=18, quantity=1
--productID=7, quantity=1
--productID=10, quantity=1
--[total]
--totalPrice=241.00
----- Order End ---
--
----- Order Start: OD700301789054 ---
--orderNumber=OD700301789054
--userNumber=US021583101081
--name=aloka warnakula nethara
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-27 12:49:09
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:32:08
--[products]
--productID=17, quantity=5
--[total]
--totalPrice=6000.00
----- Order End ---
--
----- Order Start: OD999617993294 ---
--orderNumber=OD999617993294
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-04-01 11:32:49
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 11:51:01
--[products]
--productID=7, quantity=3
--productID=15, quantity=4
--productID=9, quantity=1
--productID=2, quantity=3
--[total]
--totalPrice=6938.00
----- Order End ---
--
----- Order Start: OD405726526801 ---
--orderNumber=OD405726526801
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-30 19:47:00
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 12:16:52
--[products]
--productID=26, quantity=1
--productID=21, quantity=1
--productID=16, quantity=3
--[total]
--totalPrice=2874.00
----- Order End ---
--
----- Order Start: OD578414958670 ---
--orderNumber=OD578414958670
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-04-02 16:02:55
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-02 16:03:51
--[products]
--productID=32, quantity=9
--productID=3, quantity=20
--[total]
--totalPrice=14810.00
----- Order End ---
--
----- Order Start: OD929166235954 ---
--orderNumber=OD929166235954
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-31 09:41:28
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-08 08:36:05
--[products]
--productID=15, quantity=1
--productID=9, quantity=1
--[total]
--totalPrice=1673.00
----- Order End ---
--
----- Order Start: OD997468229137 ---
--orderNumber=OD997468229137
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-04-13 18:41:19
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-13 18:42:11
--[products]
--productID=27, quantity=7
--[total]
--totalPrice=9359.00
----- Order End ---
--
-Index: src/main/java/servlet/ProductAdminServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/ProductAdminServlet.java b/src/main/java/servlet/ProductAdminServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/ProductAdminServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,279 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.GroceryItem;
--
--import java.io.File;
--import java.io.IOException;
--import java.util.ArrayList;
--import java.util.Collections;
--import java.util.Comparator;
--import java.util.List;
--
--public class ProductAdminServlet extends HttpServlet {
--    private static final String ITEMS_FILE_PATH = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--    @Override
--    public void init() throws ServletException {
--        System.out.println("ProductAdminServlet initialized with ITEMS_FILE_PATH: " + ITEMS_FILE_PATH);
--        // Ensure the items.txt file exists
--        File file = new File(ITEMS_FILE_PATH);
--        if (!file.exists()) {
--            try {
--                file.getParentFile().mkdirs();
--                file.createNewFile();
--                System.out.println("ProductAdminServlet - Created items.txt file at: " + ITEMS_FILE_PATH);
--            } catch (IOException e) {
--                System.err.println("ProductAdminServlet - Failed to create items.txt file: " + e.getMessage());
--                throw new ServletException("Failed to initialize ProductAdminServlet due to file creation error", e);
--            }
--        }
--    }
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        System.out.println("ProductAdminServlet - doGet invoked with request URI: " + request.getRequestURI());
--        System.out.println("ProductAdminServlet - Context Path: " + request.getContextPath());
--        System.out.println("ProductAdminServlet - Servlet Path: " + request.getServletPath());
--        System.out.println("ProductAdminServlet - Query String: " + request.getQueryString());
--
--        // Check for error parameter to prevent redirect loop
--        String error = request.getParameter("error");
--        if ("missingData".equals(error)) {
--            System.out.println("ProductAdminServlet - Error: missingData detected. Rendering error message in productDashboard.jsp.");
--            request.setAttribute("errorMessage", "Failed to load products. Please try again.");
--            request.setAttribute("products", new ArrayList<GroceryItem>());
--            request.getRequestDispatcher("/adminPages/productDashboard.jsp").forward(request, response);
--            return;
--        }
--
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("ProductAdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        // Check if the user has the correct role (Super Admin or Product Admin)
--        String adminRole = (String) session.getAttribute("adminRole");
--        if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "product".equalsIgnoreCase(adminRole))) {
--            System.out.println("ProductAdminServlet - Unauthorized access. Redirecting to AdminServlet.");
--            response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--            return;
--        }
--
--        String action = request.getParameter("action");
--        System.out.println("ProductAdminServlet - Action: " + action);
--
--        if ("info".equals(action)) {
--            // Handle navigation to productDashboardInfo.jsp for editing
--            String productID = request.getParameter("productID");
--            if (productID == null) {
--                System.out.println("ProductAdminServlet - Missing productID parameter for info action.");
--                response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=invalidParameters");
--                return;
--            }
--
--            // Read all products
--            List<GroceryItem> products = FileUtil.readItems(ITEMS_FILE_PATH);
--            if (products == null) {
--                products = new ArrayList<>();
--                System.out.println("ProductAdminServlet - Failed to read products for info action. Using empty list.");
--            }
--
--            // Find the product
--            GroceryItem product = products.stream()
--                    .filter(item -> String.valueOf(item.getProductID()).equals(productID))
--                    .findFirst()
--                    .orElse(null);
--
--            if (product == null) {
--                System.out.println("ProductAdminServlet - Product not found: " + productID);
--                response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=productNotFound");
--                return;
--            }
--
--            // Set attributes for productDashboardInfo.jsp
--            request.setAttribute("product", product);
--            System.out.println("ProductAdminServlet - Forwarding to /adminPages/productDashboardInfo.jsp with productID: " + productID);
--            request.getRequestDispatcher("/adminPages/productDashboardInfo.jsp").forward(request, response);
--            return;
--        } else if ("add".equals(action)) {
--            // Handle navigation to productDashboardInfo.jsp for adding a new product
--            List<GroceryItem> products = FileUtil.readItems(ITEMS_FILE_PATH);
--            if (products == null) {
--                products = new ArrayList<>();
--                System.out.println("ProductAdminServlet - Failed to read products for add action. Using empty list.");
--            }
--
--            // Find the next available product ID
--            int nextProductID = findNextProductID(products);
--            request.setAttribute("nextProductID", String.valueOf(nextProductID));
--            System.out.println("ProductAdminServlet - Forwarding to /adminPages/productDashboardInfo.jsp for adding new product with nextProductID: " + nextProductID);
--            request.getRequestDispatcher("/adminPages/productDashboardInfo.jsp").forward(request, response);
--            return;
--        } else if ("delete".equals(action)) {
--            // Handle product deletion
--            String productID = request.getParameter("productID");
--            if (productID == null) {
--                System.out.println("ProductAdminServlet - Missing productID parameter for delete action.");
--                response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=invalidParameters");
--                return;
--            }
--
--            synchronized (this) {
--                List<GroceryItem> products = FileUtil.readItems(ITEMS_FILE_PATH);
--                if (products == null) {
--                    products = new ArrayList<>();
--                    System.out.println("ProductAdminServlet - Failed to read products for delete action. Using empty list.");
--                }
--
--                // Remove the product
--                products.removeIf(item -> String.valueOf(item.getProductID()).equals(productID));
--                try {
--                    FileUtil.writeItems(ITEMS_FILE_PATH, new ArrayList<>(products));
--                    System.out.println("ProductAdminServlet - Deleted product with productID: " + productID);
--                } catch (IOException e) {
--                    System.err.println("ProductAdminServlet - Error writing to items.txt during delete: " + e.getMessage());
--                    response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=deleteFailed");
--                    return;
--                }
--            }
--
--            // Redirect back to the dashboard
--            response.sendRedirect(request.getContextPath() + "/ProductAdminServlet");
--            return;
--        }
--
--        // Default action: Load all products for the dashboard
--        List<GroceryItem> products;
--        try {
--            products = FileUtil.readItems(ITEMS_FILE_PATH);
--            if (products == null) {
--                products = new ArrayList<>();
--                System.out.println("ProductAdminServlet - Failed to read products. Using empty list.");
--            } else {
--                Collections.sort(products, Comparator.comparingInt(GroceryItem::getProductID));
--                System.out.println("ProductAdminServlet - Loaded " + products.size() + " products from items.txt");
--            }
--        } catch (Exception e) {
--            System.err.println("ProductAdminServlet - Unexpected error reading items.txt: " + e.getMessage());
--            products = new ArrayList<>();
--            request.setAttribute("errorMessage", "Failed to load products due to an unexpected error.");
--        }
--        System.out.println("ProductAdminServlet - Setting products attribute with size: " + products.size()); // Debug
--        request.setAttribute("products", products);
--        // Forward to productDashboard.jsp
--        System.out.println("ProductAdminServlet - Forwarding to /adminPages/productDashboard.jsp");
--        request.getRequestDispatcher("/adminPages/productDashboard.jsp").forward(request, response);
--    }
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("ProductAdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        String action = request.getParameter("action");
--        if ("add".equals(action) || "update".equals(action)) {
--            String productID = request.getParameter("productID");
--            String productCategory = request.getParameter("productCategory");
--            String productName = request.getParameter("productName");
--            String productPriceStr = request.getParameter("productPrice");
--            String productImageLink = request.getParameter("productImageLink");
--            String quantityStr = request.getParameter("quantity");
--            String description = request.getParameter("description");
--
--            // Validate parameters
--            if (productID == null || productCategory == null || productName == null || productPriceStr == null ||
--                    productImageLink == null || quantityStr == null || description == null) {
--                System.out.println("ProductAdminServlet - Missing parameters for " + action + " action.");
--                response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=invalidParameters");
--                return;
--            }
--
--            try {
--                int productIDInt = Integer.parseInt(productID);
--                double productPrice = Double.parseDouble(productPriceStr);
--                int quantity = Integer.parseInt(quantityStr);
--
--                try {
--                    synchronized (this) {
--                        List<GroceryItem> products = FileUtil.readItems(ITEMS_FILE_PATH);
--                        if (products == null) {
--                            products = new ArrayList<>();
--                            System.out.println("ProductAdminServlet - Failed to read products for " + action + " action. Using empty list.");
--                        }
--
--                        if ("add".equals(action)) {
--                            // Add new product
--                            GroceryItem newProduct = new GroceryItem(productIDInt, productCategory, productName, productPrice, productImageLink, quantity, description);
--                            products.add(newProduct);
--                            System.out.println("ProductAdminServlet - Added new product with productID: " + productIDInt);
--                        } else {
--                            // Update existing product
--                            for (GroceryItem item : products) {
--                                if (item.getProductID() == productIDInt) {
--                                    item.setProductCategory(productCategory);
--                                    item.setProductName(productName);
--                                    item.setProductPrice(productPrice);
--                                    item.setProductImageLink(productImageLink);
--                                    item.setQuantity(quantity);
--                                    item.setDescription(description);
--                                    System.out.println("ProductAdminServlet - Updated product with productID: " + productIDInt);
--                                    break;
--                                }
--                            }
--                        }
--
--                        // Write updated products back to file
--                        FileUtil.writeItems(ITEMS_FILE_PATH, new ArrayList<>(products));
--                    }
--
--                    // Redirect back to the dashboard
--                    response.sendRedirect(request.getContextPath() + "/ProductAdminServlet");
--                } catch (IOException e) {
--                    System.err.println("ProductAdminServlet - Error writing to items.txt: " + e.getMessage());
--                    response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=saveFailed");
--                }
--            } catch (NumberFormatException e) {
--                System.out.println("ProductAdminServlet - Invalid number format in parameters: " + e.getMessage());
--                response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=invalidParameters");
--            }
--        } else {
--            System.out.println("ProductAdminServlet - Invalid action in doPost: " + action);
--            response.sendRedirect(request.getContextPath() + "/ProductAdminServlet?error=invalidAction");
--        }
--    }
--
--    // Find the lowest available product number
--    private int findNextProductID(List<GroceryItem> items) {
--        if (items.isEmpty()) {
--            return 1; // If no items exist, start with 1
--        }
--
--        // Sort items by productID to check for gaps
--        Collections.sort(items, Comparator.comparingInt(GroceryItem::getProductID));
--
--        // Check for gaps in product numbers
--        int expectedID = 1;
--        for (GroceryItem item : items) {
--            int currentID = item.getProductID();
--            if (currentID != expectedID) {
--                return expectedID; // Found a gap, return the first available number
--            }
--            expectedID++;
--        }
--
--        // No gaps found, return the next number after the highest ID
--        return expectedID;
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/cartAndOrders/checkOut.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/cartAndOrders/checkOut.jsp b/src/main/webapp/cartAndOrders/checkOut.jsp
-deleted file mode 100644
---- a/src/main/webapp/cartAndOrders/checkOut.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,127 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.User" %>
--<!DOCTYPE html>
--<html>
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>Checkout - Grocery</title>
--  <base href="${pageContext.request.contextPath}/">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/checkOut.css">
--  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--  <nav class="navbar">
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce">Produce</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Proteins">Proteins</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Dairy">Dairy</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Bakery">Bakery</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Pantry">Pantry</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Snacks">Snacks</a>
--    <a href="${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp">Checkout</a>
--  </nav>
--  <div class="search-container">
--    <form class="search-bar" id="searchForm">
--      <input type="text" name="name" id="name" placeholder="Search groceries">
--      <button type="submit" class="search-btn">Search</button>
--      <span class="dropdown-toggle" id="dropdown-toggle">▼</span>
--    </form>
--    <div class="dropdown-menu" id="dropdown-menu">
--      <div class="filter-item">
--        <label for="category">Product Category</label>
--        <select name="category" id="category">
--          <option value="">All</option>
--          <option value="produce">Produce</option>
--          <option value="proteins">Proteins</option>
--          <option value="dairy">Dairy</option>
--          <option value="bakery">Bakery</option>
--          <option value="pantry">Pantry</option>
--          <option value="snacks">Snacks</option>
--        </select>
--      </div>
--      <div class="filter-item">
--        <label for="minPrice">Min Price</label>
--        <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0" value="0">
--      </div>
--      <div class="filter-item">
--        <label for="maxPrice">Max Price</label>
--        <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100" value="100">
--      </div>
--    </div>
--  </div>
--  <!--<div class="cart-icon" id="cart-icon">
--    <i class="ri-shopping-cart-line"></i>
--    <span class="cart-item-count">0</span>
--  </div>-->
--</header>
--
--<div class="cart">
--  <h2 class="cart-title">Your Cart</h2>
--  <div class="cart-content"></div>
--  <div class="total">
--    <div class="total-price">Total RS. 0</div>
--    <button class="btn-buy">Buy Now</button>
--    <i class="ri-close-line" id="cart-close"></i>
--  </div>
--</div>
--
--<section class="checkout-container">
--  <div class="cart-section">
--    <h2 class="section-title">List Product In Cart</h2>
--    <div class="cart-items" id="cart-items"></div>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="keep-shopping">Keep shopping</a>
--  </div>
--
--  <div class="checkout-form">
--    <h2 class="section-title">CHECKOUT</h2>
--    <%
--      String loggedInUserFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
--      User loggedInUser = FileUtil.readLoggedInUser(loggedInUserFile);
--      String fullName = "";
--      String phoneNumber = "";
--      String address = "";
--      if (loggedInUser != null) {
--        fullName = loggedInUser.getFullName() != null ? loggedInUser.getFullName() : "";
--        phoneNumber = loggedInUser.getPhoneNumber() != null ? loggedInUser.getPhoneNumber() : "";
--        address = loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "";
--      }
--    %>
--    <form action="${pageContext.request.contextPath}/OrderServlet" method="post" id="checkout-form">
--      <input type="text" name="fullName" placeholder="Full Name" value="<%= fullName %>" required>
--      <input type="text" name="phoneNumber" placeholder="Phone Number" value="<%= phoneNumber %>" required>
--      <input type="text" name="address" placeholder="Address" value="<%= address %>" required>
--      <select name="deliveryMethod" id="deliveryMethod" required>
--        <option value="">Select Delivery Method</option>
--        <option value="store pickup">Store Pickup</option>
--        <option value="same-day">Same-Day Delivery</option>
--        <option value="scheduled">Scheduled Delivery</option>
--      </select>
--      <input type="date" name="deliveryDate" id="deliveryDate" style="display: none;" min="<%= java.time.LocalDate.now().toString() %>">
--      <select name="paymentMethod" id="paymentMethod" required>
--        <option value="">Select Payment Method</option>
--        <option value="online card">Online Card Payment</option>
--        <option value="cash on delivery">Cash on Delivery</option>
--      </select>
--      <div class="total-info" id="total-info">
--        <span>Total Quantity: <span id="total-quantity">0</span></span>
--        <span>Total Price: RS. <span id="total-price">0.00</span></span>
--      </div>
--      <button type="submit" class="checkout-btn">CHECKOUT</button>
--    </form>
--  </div>
--</section>
--
--<div class="search-results" id="search-results"></div>
--
--<script src="${pageContext.request.contextPath}/js/cart.js"></script>
--<script src="${pageContext.request.contextPath}/js/checkOut.js"></script>
--</body>
--</html> <!-- checkOut branch -->
-\ No newline at end of file
-Index: src/main/webapp/userLogin/orderCheck.jsp
-===================================================================
-diff --git a/src/main/webapp/userLogin/orderCheck.jsp b/src/main/webapp/userLogin/orderCheck.jsp
-deleted file mode 100644
---- a/src/main/webapp/userLogin/orderCheck.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,134 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html>
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Grocery</title>
--    <base href="${pageContext.request.contextPath}/">
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderCancel.css">
--    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <style>
--        .total-info {
--            margin-top: 20px;
--            padding: 10px;
--            background-color: #f9f9f9;
--            border-radius: 5px;
--            color: #2c3e50;
--            display: flex;
--            justify-content: space-between;
--            font-size: 16px;
--            font-weight: bold;
--        }
--    </style>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Delivered" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--    <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--</header>
--
--<section class="cancel-container">
--    <div class="order-section">
--        <%
--            // File paths
--            String deliveredOrdersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--            String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--            // Get the orderNumber from the request
--            String orderNumber = request.getParameter("orderNumber");
--            if (orderNumber == null || orderNumber.trim().isEmpty()) {
--        %>
--        <p>Error: Invalid order number.</p>
--        <%
--        } else {
--            // Read the order from deliveredOrders.txt
--            List<Order> orders = FileUtil.readAllDeliveredOrders(deliveredOrdersFile);
--            Order order = null;
--            for (Order o : orders) {
--                if (o.getOrderNumber().equals(orderNumber)) {
--                    order = o;
--                    break;
--                }
--            }
--
--            if (order == null) {
--        %>
--        <p>Error: Order not found.</p>
--        <%
--        } else {
--            // Determine the title based on deliveryStatus
--            String sectionTitle = "Delivered Products";
--            if ("Cancelled".equalsIgnoreCase(order.getDeliveryStatus())) {
--                sectionTitle = "Canceled Products";
--            }
--        %>
--        <h2 class="section-title"><%= sectionTitle %></h2>
--        <div class="order-items" id="order-items">
--            <%
--                // Read items from items.txt to get product details
--                List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                if (items == null) {
--                    items = new ArrayList<>();
--                }
--
--                // Calculate total quantity and total price
--                int totalQuantity = 0;
--                double totalPrice = order.getTotalPrice();
--                List<String[]> products = order.getProducts();
--
--                // Display each product in the order
--                for (String[] product : products) {
--                    String productID = product[0];
--                    int quantity = Integer.parseInt(product[1]);
--                    totalQuantity += quantity;
--
--                    // Find the product in items.txt to get its details
--                    GroceryItem item = null;
--                    for (GroceryItem groceryItem : items) {
--                        if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                            item = groceryItem;
--                            break;
--                        }
--                    }
--
--                    if (item != null) {
--                        double itemTotalPrice = item.getProductPrice() * quantity;
--            %>
--            <div class="order-item">
--                <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--                <div class="order-item-details">
--                    <span class="order-product-title"><%= item.getProductName() %></span>
--                    <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--                    <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--                </div>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--        <div class="total-info" id="total-info">
--            <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--            <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--        </div>
--        <%
--                }
--            }
--        %>
--    </div>
--</section>
--
--<script src="${pageContext.request.contextPath}/js/orderCancel.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/adminPages/productDashboard.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/productDashboard.jsp b/src/main/webapp/adminPages/productDashboard.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/productDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,106 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, java.util.ArrayList, java.util.Collections, java.util.Comparator, model.GroceryItem, model.FileUtil" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Product Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/productDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/productDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin or Product Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "product".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Read products directly from items.txt
--    String itemsFilePath = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--    List<GroceryItem> products = FileUtil.readItems(itemsFilePath);
--    if (products == null) {
--        products = new ArrayList<>();
--    }
--
--    // Sort products by productID in ascending order
--    Collections.sort(products, new Comparator<GroceryItem>() {
--        @Override
--        public int compare(GroceryItem item1, GroceryItem item2) {
--            return Integer.compare(item1.getProductID(), item2.getProductID());
--        }
--    });
--
--    String errorMessage = (String) request.getAttribute("errorMessage");
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-folder-open"></i> Product Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="product-search" placeholder="Search Product ID" onkeyup="searchProducts()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<!-- Product Section -->
--<div id="product-section" class="product-section">
--    <div class="section-header">
--        <h2>Manage Products</h2>
--        <a href="${pageContext.request.contextPath}/ProductAdminServlet?action=add" class="add-btn">Add New Product</a>
--    </div>
--    <% if ("saveFailed".equals(request.getParameter("error"))) { %>
--    <p style="color: red; text-align: center;">Failed to save the product. Please try again.</p>
--    <% } %>
--    <% if (errorMessage != null) { %>
--    <p style="color: red; text-align: center;"><%= errorMessage %></p>
--    <% } %>
--    <div class="product-list" id="product-items">
--        <%
--            if (products.isEmpty()) {
--        %>
--        <p style="color: red; text-align: center;">No products found in the system.</p>
--        <%
--        } else {
--            for (GroceryItem item : products) {
--        %>
--        <div class="product-row" data-product-id="<%= item.getProductID() %>">
--            <span class="product-id">Product #<%= item.getProductID() %></span>
--            <span class="product-image">
--                    <% if (item.getProductImageLink() != null && !item.getProductImageLink().isEmpty()) { %>
--                        <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="item-image">
--                    <% } else { %>
--                        No Image
--                    <% } %>
--                </span>
--            <span class="product-name"><%= item.getProductName() %></span>
--            <span class="product-category"><%= item.getProductCategory() %></span>
--            <span class="product-price">Price: <%= String.format("%.2f", item.getProductPrice()) %></span>
--            <span class="product-quantity">Stock: <%= item.getQuantity() %></span>
--            <span class="product-description"><%= item.getDescription() %></span>
--            <a href="${pageContext.request.contextPath}/ProductAdminServlet?action=info&productID=<%= item.getProductID() %>" class="info-btn">Info</a>
--        </div>
--        <%
--                }
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/checkOut.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/checkOut.css b/target/OnlineGroceryOrderSystem/css/checkOut.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/checkOut.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,244 +0,0 @@
--/* checkOut.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--*{
--    font-family: 'Poppins', sans-serif;
--}
--
--header {
--    position: fixed;
--    top: 0;
--    left: 0;
--    width: 100%;
--    padding: 20px 9%;
--    background: #ffffff;
--    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    z-index: 99;
--}
--
--.logo {
--    font-size: 18px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 600;
--    display: flex;
--    align-items: center;
--}
--
--.logo i {
--    color: #27ae60;
--    margin-right: 5px;
--    font-size: 24px;
--}
--
--.navbar {
--    display: flex;
--    justify-content: space-around;
--    align-items: center;
--    width: 60%;
--    max-width: 800px;
--    background: #ffffff;
--    padding: 10px 15px;
--    border-radius: 25px;
--    box-shadow: none;
--}
--
--.navbar a {
--    font-size: 16px;
--    color: #34495e;
--    text-decoration: none;
--    font-weight: 500;
--    padding: 10px 20px;
--    transition: color 0.3s ease;
--}
--
--.navbar a:hover {
--    color: #27ae60;
--}
--
--.cart-icon {
--    position: relative;
--    display: flex;
--    align-items: center;
--    font-size: 24px;
--    cursor: pointer;
--}
--
--.cart-icon i {
--    color: #333;
--}
--
--.cart-item-count {
--    position: absolute;
--    top: -8px;
--    right: -10px;
--    background: #ff4444;
--    color: #fff;
--    border-radius: 50%;
--    width: 16px;
--    height: 16px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    font-size: 10px;
--    font-weight: 500;
--    visibility: hidden;
--}
--
--.checkout-container {
--    display: flex;
--    justify-content: space-between;
--    padding: 120px 9% 30px;
--    max-width: 1500px;
--    margin: 0 auto;
--}
--
--.cart-section, .checkout-form {
--    flex: 1;
--    padding: 20px;
--}
--
--.cart-section {
--    background: #fff;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    margin-right: 20px;
--}
--
--.checkout-form {
--    background: #6a5acd;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    padding: 30px;
--}
--
--.checkout-form .section-title {
--    color: #fff;
--    margin-bottom: 20px;
--    font-size: 30px;
--    text-align: center;
--}
--
--.cart-items {
--    margin-bottom: 20px;
--}
--
--.cart-item {
--    display: flex;
--    align-items: center;
--    background: #fff;
--    padding: 10px;
--    border-radius: 10px;
--    margin-bottom: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #333;
--}
--
--.cart-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 10px;
--    border-radius: 5px;
--    object-fit: cover;
--}
--
--.cart-item-details {
--    flex-grow: 1;
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    width: 100%;
--}
--
--.cart-product-title {
--    font-size: 16px;
--    font-weight: 500;
--    flex-shrink: 0;
--    margin-right: 10px;
--}
--
--.cart-price {
--    font-size: 16px;
--    margin-right: 10px;
--}
--
--.cart-total {
--    font-size: 16px;
--    font-weight: 500;
--    white-space: nowrap;
--}
--
--.keep-shopping {
--    display: block;
--    text-align: center;
--    color: #6a5acd;
--    text-decoration: none;
--    font-size: 16px;
--    margin-top: 10px;
--}
--
--.keep-shopping:hover {
--    text-decoration: underline;
--}
--
--.checkout-form input,
--.checkout-form select {
--    width: 100%;
--    padding: 12px;
--    margin-bottom: 15px;
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    background: rgba(255, 255, 255, 0.2);
--    color: #fff;
--    outline: none;
--}
--
--.checkout-form input[type="date"] {
--    padding: 10px;
--}
--
--.checkout-form input::placeholder,
--.checkout-form select option {
--    color: #fff;
--}
--
--.total-info {
--    margin: 20px 0;
--    font-size: 16px;
--    color: #fff;
--}
--
--.total-info span {
--    display: block;
--    margin-bottom: 10px;
--}
--
--.checkout-btn {
--    width: 100%;
--    padding: 12px;
--    background: #20b2aa;
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    color: #fff;
--    cursor: pointer;
--    transition: background 0.3s;
--}
--
--.checkout-btn:hover {
--    background: #19a99d;
--}
--
--@media screen and (max-width: 768px) {
--    .checkout-container {
--        flex-direction: column;
--    }
--    .cart-section {
--        margin-right: 0;
--        margin-bottom: 20px;
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/css/admin.css
-===================================================================
-diff --git a/src/main/webapp/css/admin.css b/src/main/webapp/css/admin.css
-deleted file mode 100644
---- a/src/main/webapp/css/admin.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,247 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5; /* Light white background */
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95); /* Slightly brighter white for header */
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a; /* Green toolbox icon */
--    margin-right: 5px;
--}
--
--.nav-links {
--    display: flex;
--    gap: 20px;
--}
--
--.nav-links a {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    transition: color 0.3s ease;
--}
--
--.nav-links a:hover {
--    color: #8bc34a;
--}
--
--.header-icons {
--    display: flex;
--    gap: 10px;
--}
--
--.header-icons a {
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.header-icons .logout-icon {
--    background-color: #e74c3c; /* Red logout icon */
--    color: #fff;
--}
--
--.header-icons .logout-icon:hover {
--    background-color: #c0392b; /* Darker red on hover */
--}
--
--/* Profile container styling */
--.profile-container {
--    display: flex;
--    justify-content: center;
--    margin: 20px 0;
--}
--
--.user-info {
--    background-color: rgba(255, 255, 255, 0.95); /* Slightly brighter white for container */
--    border-radius: 30px;
--    padding: 20px;
--    width: 500px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.user-details {
--    display: flex;
--    align-items: center;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: center;
--    width: 100%;
--}
--
--.user-icon {
--    font-size: 80px;
--    color: #333;
--    margin-right: 40px;
--}
--
--.user-details-text p {
--    margin: 5px 0;
--    font-size: 16px;
--    color: #555;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--/* Stats container styling */
--.stats-container {
--    display: flex;
--    justify-content: center;
--    gap: 20px;
--    margin: 20px 0;
--    flex-wrap: wrap; /* Allow wrapping for better responsiveness */
--}
--
--.stat-box {
--    background-color: rgba(255, 255, 255, 0.95); /* Match user-info background */
--    border-radius: 30px;
--    padding: 20px;
--    width: 300px;
--    min-height: 150px; /* Ensure consistent height */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    text-align: center;
--    display: flex;
--    flex-direction: column;
--    justify-content: center; /* Center content vertically */
--}
--
--.stat-header h2 {
--    margin: 0;
--    font-size: 20px;
--    color: #333;
--    margin-bottom: 10px;
--}
--
--.stat-number {
--    font-size: 28px;
--    font-weight: 600;
--    color: #8bc34a; /* Green color for the number */
--}
--
--/* Heading styling (matching homepage) */
--.heading {
--    text-align: center;
--    padding: 10px 10px;
--    font-size: 30px;
--    color: #130f40;
--}
--
--.heading span {
--    background: #28A745;
--    color: #fff;
--    display: inline-block;
--    padding: .5rem 3rem;
--    clip-path: polygon(100% 0, 93% 50%, 100% 99%, 0% 100%, 7% 50%, 0% 0);
--}
--
--/* Dashboard container styling (new section) */
--.dashboard-container {
--    display: flex;
--    justify-content: center;
--    gap: 20px;
--    margin: 20px 0;
--    flex-wrap: wrap; /* Allow wrapping for better responsiveness */
--}
--
--.dashboard-box {
--    background-color: rgba(255, 255, 255, 0.95); /* Match stat-box background */
--    border-radius: 30px;
--    padding: 20px;
--    width: 300px;
--    min-height: 150px; /* Match stat-box height */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    text-align: center;
--    text-decoration: none; /* Remove underline from link */
--    color: inherit; /* Inherit text color */
--    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Add hover effect */
--    display: flex;
--    flex-direction: column;
--    justify-content: center; /* Center content vertically */
--}
--
--.dashboard-box:hover {
--    transform: translateY(-5px); /* Slight lift on hover */
--    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Deeper shadow on hover */
--}
--
--.dashboard-box:hover .dashboard-header h2 {
--    color: #8bc34a; /* Change text color to green on hover */
--}
--
--.dashboard-header h2 {
--    margin: 0;
--    font-size: 20px;
--    color: #333;
--    transition: color 0.3s ease; /* Smooth color transition on hover */
--}
--
--/* Chart container styling */
--.chart-container {
--    margin: 20px auto;
--    padding: 20px;
--    background-color: rgba(255, 255, 255, 0.95); /* Match other containers */
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    max-width: 800px; /* Limit width for better readability */
--}
--
--.chart-container canvas {
--    max-width: 100%;
--    height: 400px; /* Adjust height as needed */
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/userDashboard.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/userDashboard.jsp b/target/OnlineGroceryOrderSystem/adminPages/userDashboard.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/userDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,82 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, java.util.ArrayList, model.User" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>User Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !"super".equalsIgnoreCase(adminRole)) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    List<User> users = (List<User>) request.getAttribute("users");
--    if (users == null) {
--        users = new ArrayList<>();
--    }
--
--    String errorMessage = (String) request.getAttribute("errorMessage");
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-users"></i> User Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="user-search" placeholder="Search User Number" onkeyup="searchUsers()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="section-header">
--            <h2>Manage Users</h2>
--        </div>
--        <% if (errorMessage != null) { %>
--        <p class="error-message"><%= errorMessage %></p>
--        <% } %>
--        <div class="user-list" id="user-items">
--            <%
--                if (users.isEmpty()) {
--            %>
--            <p class="error-message">No users found in the system.</p>
--            <%
--            } else {
--                for (User user : users) {
--            %>
--            <div class="user-row" data-user-number="<%= user.getUserNumber() %>">
--                <span class="user-number">User #<%= user.getUserNumber() %></span>
--                <span class="user-email"><%= user.getEmail() %></span>
--                <span class="user-fullname"><%= user.getFullName() %></span>
--                <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= user.getUserNumber() %>" class="cancel-link">Info</a>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/js/orderDashboardInfo.js
-===================================================================
-diff --git a/src/main/webapp/js/orderDashboardInfo.js b/src/main/webapp/js/orderDashboardInfo.js
-deleted file mode 100644
---- a/src/main/webapp/js/orderDashboardInfo.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,10 +0,0 @@
--// orderDashboardInfo.js
--
--function navigateToTab(tab) {
--    window.location.href = `${window.location.pathname}?tab=${tab}`;
--}
--
--function handleStatusChange() {
--    // This function can be used for future client-side validation or UI updates
--    // For now, it can be empty since the form submission handles the status update
--}
-\ No newline at end of file
-Index: src/main/webapp/userLogin/orderCancel.jsp
-===================================================================
-diff --git a/src/main/webapp/userLogin/orderCancel.jsp b/src/main/webapp/userLogin/orderCancel.jsp
-deleted file mode 100644
---- a/src/main/webapp/userLogin/orderCancel.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,123 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html>
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>Cancel Order - Grocery</title>
--  <base href="${pageContext.request.contextPath}/">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderCancel.css">
--  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/UserProfileServlet" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--</header>
--
--<section class="cancel-container">
--  <div class="order-section">
--    <h2 class="section-title">Ordered Products</h2>
--    <div class="order-items" id="order-items">
--      <%
--        // File paths
--        String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--        String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--        // Get the orderNumber from the request
--        String orderNumber = request.getParameter("orderNumber");
--        if (orderNumber == null || orderNumber.trim().isEmpty()) {
--      %>
--      <p>Error: Invalid order number.</p>
--      <%
--      } else {
--        // Read the order from orders.txt
--        List<Order> orders = FileUtil.readAllOrders(ordersFile);
--        Order order = null;
--        for (Order o : orders) {
--          if (o.getOrderNumber().equals(orderNumber)) {
--            order = o;
--            break;
--          }
--        }
--
--        if (order == null) {
--      %>
--      <p>Error: Order not found.</p>
--      <%
--      } else {
--        // Read items from items.txt to get product details
--        List<GroceryItem> items = FileUtil.readItems(itemsFile);
--        if (items == null) {
--          items = new ArrayList<>();
--        }
--
--        // Calculate total quantity and total price
--        int totalQuantity = 0;
--        double totalPrice = order.getTotalPrice();
--        List<String[]> products = order.getProducts();
--
--        // Display each product in the order
--        for (String[] product : products) {
--          String productID = product[0];
--          int quantity = Integer.parseInt(product[1]);
--          totalQuantity += quantity;
--
--          // Find the product in items.txt to get its details
--          GroceryItem item = null;
--          for (GroceryItem groceryItem : items) {
--            if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--              item = groceryItem;
--              break;
--            }
--          }
--
--          if (item != null) {
--            double itemTotalPrice = item.getProductPrice() * quantity;
--      %>
--      <div class="order-item">
--        <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--        <div class="order-item-details">
--          <span class="order-product-title"><%= item.getProductName() %></span>
--          <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--          <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--        </div>
--      </div>
--      <%
--          }
--        }
--      %>
--    </div>
--  </div>
--
--  <div class="cancel-form">
--    <h2 class="section-title">CANCEL ORDER</h2>
--    <form action="${pageContext.request.contextPath}/UserProfileServlet" method="get" id="cancel-form">
--      <input type="hidden" name="action" value="cancelOrder">
--      <input type="hidden" name="orderNumber" value="<%= orderNumber %>">
--      <div class="total-info" id="total-info">
--        <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--        <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--      </div>
--      <button type="submit" class="cancel-btn">CANCEL</button>
--    </form>
--  </div>
--  <%
--      }
--    }
--  %>
--</section>
--
--<script src="${pageContext.request.contextPath}/js/orderCancel.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/adminPages/userDashboard.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/userDashboard.jsp b/src/main/webapp/adminPages/userDashboard.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/userDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,82 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, java.util.ArrayList, model.User" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>User Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !"super".equalsIgnoreCase(adminRole)) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    List<User> users = (List<User>) request.getAttribute("users");
--    if (users == null) {
--        users = new ArrayList<>();
--    }
--
--    String errorMessage = (String) request.getAttribute("errorMessage");
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-users"></i> User Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="user-search" placeholder="Search User Number" onkeyup="searchUsers()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="section-header">
--            <h2>Manage Users</h2>
--        </div>
--        <% if (errorMessage != null) { %>
--        <p class="error-message"><%= errorMessage %></p>
--        <% } %>
--        <div class="user-list" id="user-items">
--            <%
--                if (users.isEmpty()) {
--            %>
--            <p class="error-message">No users found in the system.</p>
--            <%
--            } else {
--                for (User user : users) {
--            %>
--            <div class="user-row" data-user-number="<%= user.getUserNumber() %>">
--                <span class="user-number">User #<%= user.getUserNumber() %></span>
--                <span class="user-email"><%= user.getEmail() %></span>
--                <span class="user-fullname"><%= user.getFullName() %></span>
--                <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= user.getUserNumber() %>" class="cancel-link">Info</a>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/orderDashboardInfo.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/orderDashboardInfo.js b/target/OnlineGroceryOrderSystem/js/orderDashboardInfo.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/orderDashboardInfo.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,10 +0,0 @@
--// orderDashboardInfo.js
--
--function navigateToTab(tab) {
--    window.location.href = `${window.location.pathname}?tab=${tab}`;
--}
--
--function handleStatusChange() {
--    // This function can be used for future client-side validation or UI updates
--    // For now, it can be empty since the form submission handles the status update
--}
-\ No newline at end of file
-Index: src/main/java/servlet/OrderAdminServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/OrderAdminServlet.java b/src/main/java/servlet/OrderAdminServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/OrderAdminServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,336 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.User;
--import model.FileUtil.Order;
--
--import java.io.*;
--import java.time.LocalDate;
--import java.time.LocalDateTime;
--import java.time.format.DateTimeFormatter;
--import java.time.format.DateTimeParseException;
--import java.util.Collections;
--import java.util.Comparator;
--import java.util.List;
--import java.util.stream.Collectors;
--
--public class OrderAdminServlet extends HttpServlet {
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String DELIVERED_ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--    private static final String USERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/users.txt";
--    private static final DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
--    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd");
--
--    @Override
--    public void init() throws ServletException {
--        // Log the file paths for debugging
--        System.out.println("OrderAdminServlet initialized with ORDERS_FILE path: " + ORDERS_FILE);
--        System.out.println("OrderAdminServlet initialized with DELIVERED_ORDERS_FILE path: " + DELIVERED_ORDERS_FILE);
--        System.out.println("OrderAdminServlet initialized with USERS_FILE path: " + USERS_FILE);
--    }
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        System.out.println("OrderAdminServlet - doGet invoked with request URI: " + request.getRequestURI());
--        System.out.println("OrderAdminServlet - Context Path: " + request.getContextPath());
--        System.out.println("OrderAdminServlet - Servlet Path: " + request.getServletPath());
--
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("OrderAdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        // Check if the user has the correct role (Order Admin or Super Admin)
--        String adminRole = (String) session.getAttribute("adminRole");
--        if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "order".equalsIgnoreCase(adminRole))) {
--            System.out.println("OrderAdminServlet - Unauthorized access. Redirecting to AdminServlet.");
--            response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--            return;
--        }
--
--        String action = request.getParameter("action");
--
--        if ("info".equals(action)) {
--            // Handle navigation to orderDashboardInfo.jsp
--            String orderNumber = request.getParameter("orderNumber");
--            String tab = request.getParameter("tab");
--            if (orderNumber == null || tab == null) {
--                System.out.println("OrderAdminServlet - Missing orderNumber or tab parameter for info action.");
--                response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=invalidParameters");
--                return;
--            }
--
--            // Determine which file to read based on the tab
--            List<Order> orders;
--            if ("active".equalsIgnoreCase(tab)) {
--                orders = FileUtil.readAllOrders(ORDERS_FILE);
--            } else {
--                orders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--            }
--
--            // Find the order
--            Order order = orders.stream()
--                    .filter(o -> o.getOrderNumber().equals(orderNumber))
--                    .findFirst()
--                    .orElse(null);
--
--            if (order == null) {
--                System.out.println("OrderAdminServlet - Order not found: " + orderNumber);
--                response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=orderNotFound");
--                return;
--            }
--
--            // Fetch user details
--            List<User> users = FileUtil.readUsers(USERS_FILE);
--            User user = users.stream()
--                    .filter(u -> u.getUserNumber().equals(order.getUserNumber()))
--                    .findFirst()
--                    .orElse(null);
--
--            if (user == null) {
--                System.out.println("OrderAdminServlet - User not found for userNumber: " + order.getUserNumber());
--                response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=userNotFound");
--                return;
--            }
--
--            // Set attributes for orderDashboardInfo.jsp
--            request.setAttribute("order", order);
--            request.setAttribute("user", user);
--            request.setAttribute("tab", tab);
--            System.out.println("OrderAdminServlet - Forwarding to /adminPages/orderDashboardInfo.jsp with orderNumber: " + orderNumber + ", tab: " + tab);
--            request.getRequestDispatcher("/adminPages/orderDashboardInfo.jsp").forward(request, response);
--            return;
--        }
--
--        // Read active orders from orders.txt
--        List<Order> activeOrders = FileUtil.readAllOrders(ORDERS_FILE);
--        if (activeOrders != null) {
--            activeOrders = activeOrders.stream()
--                    .filter(order -> {
--                        String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : "";
--                        boolean isActive = "pending".equals(orderStatus);
--                        System.out.println("OrderAdminServlet - Order " + order.getOrderNumber() + " isActive: " + isActive + " (orderStatus: " + orderStatus + ")");
--                        return isActive;
--                    })
--                    .collect(Collectors.toList());
--
--            // Sort active orders by confirmationDate in ascending order (oldest first)
--            Collections.sort(activeOrders, new Comparator<Order>() {
--                @Override
--                public int compare(Order o1, Order o2) {
--                    String date1Str = o1.getConfirmationDate();
--                    String date2Str = o2.getConfirmationDate();
--                    LocalDate date1 = parseDate(date1Str);
--                    LocalDate date2 = parseDate(date2Str);
--                    System.out.println("OrderAdminServlet - Comparing Active Orders: " + o1.getOrderNumber() + " (" + date1 + ") vs " + o2.getOrderNumber() + " (" + date2 + ")");
--                    return date1.compareTo(date2); // Ascending order
--                }
--            });
--            System.out.println("OrderAdminServlet - Loaded " + activeOrders.size() + " active orders from orders.txt");
--        } else {
--            activeOrders = Collections.emptyList();
--            System.out.println("OrderAdminServlet - No active orders found in orders.txt");
--        }
--
--        // Read all orders from deliveredOrders.txt (for both cancelled and delivered)
--        List<Order> allDeliveredOrders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--        if (allDeliveredOrders != null) {
--            System.out.println("OrderAdminServlet - Total orders in deliveredOrders.txt: " + allDeliveredOrders.size());
--            for (Order order : allDeliveredOrders) {
--                System.out.println("OrderAdminServlet - Order in deliveredOrders.txt: " + order.getOrderNumber() + ", deliveryStatus: " + order.getDeliveryStatus() + ", deliveredDate: " + order.getDeliveredDate());
--            }
--        } else {
--            allDeliveredOrders = Collections.emptyList();
--            System.out.println("OrderAdminServlet - No orders found in deliveredOrders.txt");
--        }
--
--        // Filter cancelled orders from deliveredOrders.txt
--        List<Order> cancelledOrders = allDeliveredOrders.stream()
--                .filter(order -> {
--                    String deliveryStatus = order.getDeliveryStatus() != null ? order.getDeliveryStatus().trim().toLowerCase() : "";
--                    boolean isCancelled = "cancelled".equals(deliveryStatus) || "canceled".equals(deliveryStatus);
--                    System.out.println("OrderAdminServlet - Order " + order.getOrderNumber() + " isCancelled: " + isCancelled + " (deliveryStatus: " + deliveryStatus + ")");
--                    return isCancelled;
--                })
--                .collect(Collectors.toList());
--
--        // Sort cancelled orders by deliveredDate in descending order (newest first)
--        Collections.sort(cancelledOrders, new Comparator<Order>() {
--            @Override
--            public int compare(Order o1, Order o2) {
--                String date1Str = o1.getDeliveredDate();
--                String date2Str = o2.getDeliveredDate();
--                LocalDate date1 = parseDate(date1Str);
--                LocalDate date2 = parseDate(date2Str);
--                System.out.println("OrderAdminServlet - Comparing Cancelled Orders: " + o1.getOrderNumber() + " (" + date1 + ") vs " + o2.getOrderNumber() + " (" + date2 + ")");
--                return date2.compareTo(date1); // Descending order (newest first)
--            }
--        });
--        System.out.println("OrderAdminServlet - Loaded " + cancelledOrders.size() + " cancelled orders from deliveredOrders.txt");
--
--        // Filter delivered orders from deliveredOrders.txt
--        List<Order> deliveredOrders = allDeliveredOrders.stream()
--                .filter(order -> {
--                    String deliveryStatus = order.getDeliveryStatus() != null ? order.getDeliveryStatus().trim().toLowerCase() : "";
--                    boolean isDelivered = "delivered".equals(deliveryStatus);
--                    System.out.println("OrderAdminServlet - Order " + order.getOrderNumber() + " isDelivered: " + isDelivered + " (deliveryStatus: " + deliveryStatus + ")");
--                    return isDelivered;
--                })
--                .collect(Collectors.toList());
--
--        // Sort delivered orders by deliveredDate in descending order (newest first)
--        Collections.sort(deliveredOrders, new Comparator<Order>() {
--            @Override
--            public int compare(Order o1, Order o2) {
--                String date1Str = o1.getDeliveredDate();
--                String date2Str = o2.getDeliveredDate();
--                LocalDate date1 = parseDate(date1Str);
--                LocalDate date2 = parseDate(date2Str);
--                System.out.println("OrderAdminServlet - Comparing Delivered Orders: " + o1.getOrderNumber() + " (" + date1 + ") vs " + o2.getOrderNumber() + " (" + date2 + ")");
--                return date2.compareTo(date1); // Descending order (newest first)
--            }
--        });
--        System.out.println("OrderAdminServlet - Loaded " + deliveredOrders.size() + " delivered orders from deliveredOrders.txt");
--
--        // Set orders as request attributes
--        request.setAttribute("activeOrders", activeOrders);
--        request.setAttribute("cancelledOrders", cancelledOrders);
--        request.setAttribute("deliveredOrders", deliveredOrders);
--
--        // Forward to orderDashboard.jsp
--        System.out.println("OrderAdminServlet - Forwarding to /adminPages/orderDashboard.jsp");
--        request.getRequestDispatcher("/adminPages/orderDashboard.jsp").forward(request, response);
--    }
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("OrderAdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        String action = request.getParameter("action");
--        if ("updateStatus".equals(action)) {
--            String orderNumber = request.getParameter("orderNumber");
--            String tab = request.getParameter("tab");
--            String newStatus = request.getParameter("status");
--            String newPaymentStatus = request.getParameter("paymentStatus"); // New parameter for cash on delivery
--
--            if (orderNumber == null || tab == null || newStatus == null) {
--                System.out.println("OrderAdminServlet - Missing parameters for updateStatus action.");
--                response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=invalidParameters");
--                return;
--            }
--
--            synchronized (this) {
--                // Determine the source file based on the tab
--                List<Order> orders;
--                String sourceFile;
--                if ("active".equalsIgnoreCase(tab)) {
--                    sourceFile = ORDERS_FILE;
--                    orders = FileUtil.readAllOrders(ORDERS_FILE);
--                } else {
--                    sourceFile = DELIVERED_ORDERS_FILE;
--                    orders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--                }
--
--                // Find the order
--                Order order = orders.stream()
--                        .filter(o -> o.getOrderNumber().equals(orderNumber))
--                        .findFirst()
--                        .orElse(null);
--
--                if (order == null) {
--                    System.out.println("OrderAdminServlet - Order not found for update: " + orderNumber);
--                    response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=orderNotFound");
--                    return;
--                }
--
--                // Update the order status
--                String previousStatus = order.getDeliveryStatus();
--                order.setDeliveryStatus(newStatus);
--                order.setOrderStatus(newStatus.equalsIgnoreCase("Pending") ? "Pending" : newStatus.toLowerCase());
--
--                // Handle paymentStatus
--                if ("cash on delivery".equalsIgnoreCase(order.getPaymentMethod())) {
--                    // For cash on delivery, use the admin-provided paymentStatus
--                    if (newPaymentStatus != null && ("Pending".equalsIgnoreCase(newPaymentStatus) || "Completed".equalsIgnoreCase(newPaymentStatus) || "Cancelled".equalsIgnoreCase(newPaymentStatus))) {
--                        order.setPaymentStatus(newPaymentStatus);
--                    } else {
--                        // Fallback to current paymentStatus if the provided value is invalid
--                        System.out.println("OrderAdminServlet - Invalid paymentStatus provided for cash on delivery: " + newPaymentStatus + ". Keeping existing value: " + order.getPaymentStatus());
--                    }
--                } else {
--                    // For other payment methods (e.g., online card), set paymentStatus automatically
--                    order.setPaymentStatus(newStatus.equalsIgnoreCase("Delivered") ? "Completed" : newStatus.equalsIgnoreCase("Cancelled") ? "Cancelled" : "Pending");
--                }
--
--                // Set deliveredDate for "Delivered" or "Cancelled" status
--                if ("Delivered".equalsIgnoreCase(newStatus) || "Cancelled".equalsIgnoreCase(newStatus)) {
--                    order.setDeliveredDate(LocalDateTime.now().format(DATETIME_FORMATTER));
--                } else if ("Delivered".equalsIgnoreCase(previousStatus) || "Cancelled".equalsIgnoreCase(previousStatus)) {
--                    // Clear deliveredDate if the status is changed from Delivered or Cancelled to Pending
--                    order.setDeliveredDate("");
--                }
--
--                // Determine the target file and move the order if necessary
--                if ("active".equalsIgnoreCase(tab) && !newStatus.equalsIgnoreCase("Pending")) {
--                    // Move from orders.txt to deliveredOrders.txt
--                    orders.removeIf(o -> o.getOrderNumber().equals(orderNumber));
--                    FileUtil.writeAllOrders(ORDERS_FILE, orders);
--                    FileUtil.writeDeliveredOrder(DELIVERED_ORDERS_FILE, order);
--                    tab = newStatus.equalsIgnoreCase("Delivered") ? "delivered" : "cancelled";
--                } else if (!"active".equalsIgnoreCase(tab) && newStatus.equalsIgnoreCase("Pending")) {
--                    // Move from deliveredOrders.txt to orders.txt
--                    orders.removeIf(o -> o.getOrderNumber().equals(orderNumber));
--                    FileUtil.writeAllDeliveredOrders(DELIVERED_ORDERS_FILE, orders);
--                    FileUtil.writeOrder(ORDERS_FILE, order);
--                    tab = "active";
--                } else {
--                    // Update in the same file
--                    if ("active".equalsIgnoreCase(tab)) {
--                        FileUtil.writeAllOrders(ORDERS_FILE, orders);
--                    } else {
--                        FileUtil.writeAllDeliveredOrders(DELIVERED_ORDERS_FILE, orders);
--                    }
--                }
--
--                System.out.println("OrderAdminServlet - Updated order " + orderNumber + " with new status: " + newStatus + ", new paymentStatus: " + order.getPaymentStatus() + ", new tab: " + tab);
--            }
--
--            // Redirect back to orderDashboard.jsp with the updated tab
--            response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?tab=" + tab);
--        }
--    }
--
--    // Helper method to parse date strings that may include time
--    private LocalDate parseDate(String dateStr) {
--        if (dateStr == null || dateStr.trim().isEmpty()) {
--            System.out.println("OrderAdminServlet - parseDate: Date string is null or empty, returning LocalDate.MIN");
--            return LocalDate.MIN; // Use a very early date for sorting (e.g., 0001-01-01)
--        }
--
--        try {
--            // First try parsing as a full datetime (e.g., "2025-03-25 08:19:14")
--            LocalDateTime dateTime = LocalDateTime.parse(dateStr, DATETIME_FORMATTER);
--            return dateTime.toLocalDate();
--        } catch (DateTimeParseException e1) {
--            try {
--                // If that fails, try parsing as just a date (e.g., "2025-03-25")
--                return LocalDate.parse(dateStr, DATE_FORMATTER);
--            } catch (DateTimeParseException e2) {
--                System.err.println("OrderAdminServlet - parseDate: Invalid date format for date: " + dateStr + ". Using default date for sorting.");
--                return LocalDate.MIN; // Fallback to a default date if parsing fails
--            }
--        }
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/userLogin/userProfile.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/userLogin/userProfile.jsp b/src/main/webapp/userLogin/userProfile.jsp
-deleted file mode 100644
---- a/src/main/webapp/userLogin/userProfile.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,162 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.User" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="java.util.List" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>User Profile</title>
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userProfile.css">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--  <a  class="logo"><i class="fa-solid fa-user"></i> User Profile</a>
--<%--  <a href="${pageContext.request.contextPath}/index.jsp"></a>--%>
--</header>
--
--<div class="content">
--  <%
--    User loggedInUser = (User) session.getAttribute("user");
--    if (loggedInUser == null) {
--  %>
--  <p>You must be logged in to view this page.</p>
--  <p><a href="${pageContext.request.contextPath}/userLogin/login.jsp">Log In</a></p>
--  <% } else { %>
--  <div class="profile-container">
--    <div class="user-info">
--      <div class="user-info-header">
--        <h2>User Info</h2>
--        <button id="edit-btn" class="edit-btn"><i class="fas fa-edit"></i> Edit Profile</button>
--      </div>
--      <div class="user-details">
--        <div class="user-details-left">
--          <div class="user-icon">
--            <i class="fas fa-user-circle"></i>
--          </div>
--          <div class="user-details-text">
--            <p><strong>User Number:</strong> <span id="userNumberDisplay"><%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %></span></p>
--            <p><strong>Email:</strong> <span id="emailDisplay"><%= loggedInUser.getEmail() %></span></p>
--            <p><strong>Full Name:</strong> <span id="fullNameDisplay"><%= loggedInUser.getFullName() %></span></p>
--            <p><strong>Address:</strong> <span id="addressDisplay"><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "Not provided" %></span></p>
--            <p><strong>Phone Number:</strong> <span id="phoneNumberDisplay"><%= loggedInUser.getPhoneNumber() %></span></p>
--          </div>
--        </div>
--      </div>
--    </div>
--
--    <div id="profile-form-container" style="display: none;">
--      <form id="profile-form" action="${pageContext.request.contextPath}/UserProfileServlet" method="post">
--        <div class="form-group">
--          <label for="userNumber">User Number:</label>
--          <input type="text" id="userNumber" name="userNumber" value="<%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %>" readonly>
--        </div>
--        <div class="form-group">
--          <label for="email">Email:</label>
--          <input type="email" id="email" name="email" value="<%= loggedInUser.getEmail() %>" readonly>
--        </div>
--        <div class="form-group">
--          <label for="fullName">Full Name:</label>
--          <input type="text" id="fullName" name="fullName" value="<%= loggedInUser.getFullName() %>" required>
--        </div>
--        <div class="form-group">
--          <label for="address">Address:</label>
--          <textarea id="address" name="address" required><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "" %></textarea>
--        </div>
--        <div class="form-group">
--          <label for="phoneNumber">Phone Number:</label>
--          <input type="text" id="phoneNumber" name="phoneNumber" value="<%= loggedInUser.getPhoneNumber() %>" required>
--        </div>
--        <div class="form-buttons">
--          <button type="submit" name="action" value="save" class="save-btn">Save</button>
--          <button type="button" id="delete-btn" class="delete-btn">Delete Account</button>
--        </div>
--      </form>
--    </div>
--  </div>
--
--  <div class="profile-container">
--    <div class="activity-section">
--      <div class="activity-tabs">
--        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Active" class="tab <%= "Active".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Active</a>
--        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Delivered" class="tab <%= "Delivered".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Delivered</a>
--        <div class="search-bar">
--          <form action="${pageContext.request.contextPath}/UserProfileSearchServlet" method="get">
--            <input type="hidden" name="tab" value="${activeTab != null ? activeTab : 'Active'}">
--            <input type="text" name="searchQuery" placeholder="Search OrderID" value="${param.searchQuery}">
--            <button type="submit"><i class="fas fa-search"></i></button>
--          </form>
--        </div>
--      </div>
--      <div class="activity-list">
--        <%
--          List<Order> orders = (List<Order>) request.getAttribute("orders");
--          if (orders == null || orders.isEmpty()) {
--        %>
--        <div class="activity-item">
--          <p>No orders found.</p>
--        </div>
--        <%
--        } else {
--          for (Order order : orders) {
--            String statusClass = "pending";
--            if ("Delivered".equalsIgnoreCase(order.getDeliveryStatus())) {
--              statusClass = "completed";
--            } else if ("Cancelled".equalsIgnoreCase(order.getOrderStatus())) {
--              statusClass = "disabled";
--            }
--        %>
--        <div class="activity-item">
--          <i class="fas fa-shopping-cart"></i>
--          <p>
--            Order <%= order.getOrderNumber() %> placed on <%= order.getConfirmationDate() %>
--            (Status: <span class="status <%= statusClass %>"><%= order.getDeliveryStatus() %></span>)
--            <% if ("Active".equals(request.getAttribute("activeTab")) && !"Cancelled".equalsIgnoreCase(order.getOrderStatus())) { %>
--            <a href="${pageContext.request.contextPath}/userLogin/orderCancel.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
--            <% } else if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
--            <a href="${pageContext.request.contextPath}/userLogin/orderCheck.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
--            <% } %>
--          </p>
--          <span class="timestamp">
--            <% if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
--              <%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %>
--            <% } else { %>
--              <%= order.getConfirmationDate() %>
--            <% } %>
--          </span>
--        </div>
--        <%
--            }
--          }
--        %>
--      </div>
--    </div>
--  </div>
--
--  <!-- Delete Confirmation Modal -->
--  <div id="deleteModal" class="modal">
--    <div class="modal-content">
--      <div class="modal-header">
--        <h3>Warning</h3>
--      </div>
--      <div class="modal-body">
--        <p>Are you sure you want to delete your account? This action cannot be undone.</p>
--        <div class="modal-buttons">
--          <button id="confirmDelete" class="modal-btn confirm-btn">Confirm</button>
--          <button id="cancelDelete" class="modal-btn cancel-btn">Cancel</button>
--        </div>
--      </div>
--    </div>
--  </div>
--  <% } %>
--</div>
--
--<script src="${pageContext.request.contextPath}/js/userProfile.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/adminPages/orderCheck.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/orderCheck.jsp b/src/main/webapp/adminPages/orderCheck.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/orderCheck.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,157 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <%
--        String userNumber = request.getParameter("userNumber");
--        String source = request.getParameter("source");
--        String backLink = userNumber != null ?
--                "/UserAdminServlet?action=info&userNumber=" + userNumber + "&tab=" + ("active".equalsIgnoreCase(source) ? "Active" : "Delivered") :
--                "/UserAdminServlet";
--    %>
--    <a href="${pageContext.request.contextPath}<%= backLink %>" class="back-link"><i class="fas fa-arrow-left"></i></a>
--    <a class="logo"><i class="fa-solid fa-basket-shopping"></i> Order Details - Admin</a>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="activity-section">
--            <div class="section-header">
--                <%
--                    // File paths
--                    String deliveredOrdersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--                    String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--                    String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--                    // Get the orderNumber and source from the request
--                    String orderNumber = request.getParameter("orderNumber");
--                    source = request.getParameter("source");
--                    if (orderNumber == null || orderNumber.trim().isEmpty()) {
--                %>
--                <p class="error-message">Error: Invalid order number.</p>
--                <%
--                } else {
--                    // Read the order based on source
--                    List<Order> orders = "delivered".equalsIgnoreCase(source) ?
--                            FileUtil.readAllDeliveredOrders(deliveredOrdersFile) :
--                            FileUtil.readAllOrders(ordersFile);
--                    Order order = null;
--                    for (Order o : orders) {
--                        if (o.getOrderNumber().equals(orderNumber)) {
--                            order = o;
--                            break;
--                        }
--                    }
--
--                    if (order == null) {
--                %>
--                <p class="error-message">Error: Order not found.</p>
--                <%
--                } else {
--                    // Determine the title based on deliveryStatus
--                    String sectionTitle = "Delivered Products";
--                    if ("delivered".equalsIgnoreCase(source)) {
--                        sectionTitle = "Delivered Products";
--                    } else if ("active".equalsIgnoreCase(source)) {
--                        sectionTitle = "Active Order Products";
--                    }
--                    if ("Cancelled".equalsIgnoreCase(order.getDeliveryStatus())) {
--                        sectionTitle = "Canceled Products";
--                    }
--                %>
--                <h2><%= sectionTitle %></h2>
--                <%
--                        }
--                    }
--                %>
--            </div>
--            <div class="activity-list">
--                <%
--                    if (orderNumber != null && !orderNumber.trim().isEmpty()) {
--                        List<Order> orders = "delivered".equalsIgnoreCase(source) ?
--                                FileUtil.readAllDeliveredOrders(deliveredOrdersFile) :
--                                FileUtil.readAllOrders(ordersFile);
--                        Order order = null;
--                        for (Order o : orders) {
--                            if (o.getOrderNumber().equals(orderNumber)) {
--                                order = o;
--                                break;
--                            }
--                        }
--
--                        if (order != null) {
--                            // Read items from items.txt to get product details
--                            List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                            if (items == null) {
--                                items = new ArrayList<>();
--                            }
--
--                            // Calculate total quantity and total price
--                            int totalQuantity = 0;
--                            double totalPrice = order.getTotalPrice();
--                            List<String[]> products = order.getProducts();
--
--                            // Display each product in the order
--                            for (String[] product : products) {
--                                String productID = product[0];
--                                int quantity = Integer.parseInt(product[1]);
--                                totalQuantity += quantity;
--
--                                // Find the product in items.txt to get its details
--                                GroceryItem item = null;
--                                for (GroceryItem groceryItem : items) {
--                                    if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                                        item = groceryItem;
--                                        break;
--                                    }
--                                }
--
--                                if (item != null) {
--                                    double itemTotalPrice = item.getProductPrice() * quantity;
--                %>
--                <div class="activity-item">
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="activity-item-img">
--                    <p>
--                        <%= item.getProductName() %> - RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %>
--                        (Total: RS. <%= String.format("%.2f", itemTotalPrice) %>)
--                    </p>
--                    <span class="timestamp">
--                            <%= "delivered".equalsIgnoreCase(source) ? (order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A") : order.getConfirmationDate() %>
--                        </span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--                <div class="total-info">
--                    <span>Total Quantity: <%= totalQuantity %></span>
--                    <span>Total Price: RS. <%= String.format("%.2f", totalPrice) %></span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--            </div>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/js/userDashboard.js
-===================================================================
-diff --git a/src/main/webapp/js/userDashboard.js b/src/main/webapp/js/userDashboard.js
-deleted file mode 100644
---- a/src/main/webapp/js/userDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,17 +0,0 @@
--// Search users in userDashboard.jsp
--function searchUsers() {
--    const input = document.getElementById("user-search");
--    if (input) {
--        const searchValue = input.value.toLowerCase();
--        const userRows = document.getElementsByClassName("user-row");
--
--        for (let i = 0; i < userRows.length; i++) {
--            const userNumber = userRows[i].getAttribute("data-user-number").toLowerCase();
--            if (userNumber.includes(searchValue)) {
--                userRows[i].style.display = "";
--            } else {
--                userRows[i].style.display = "none";
--            }
--        }
--    }
--}
-\ No newline at end of file
-Index: src/main/java/servlet/ProductDetailsServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/ProductDetailsServlet.java b/src/main/java/servlet/ProductDetailsServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/ProductDetailsServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,57 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import model.FileUtil;
--import model.GroceryItem;
--
--import java.io.IOException;
--import java.util.ArrayList;
--
--public class ProductDetailsServlet extends HttpServlet {
--    private static final String ITEMS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        String productIdStr = request.getParameter("productId");
--        if (productIdStr == null || productIdStr.isEmpty()) {
--            request.setAttribute("error", "Product ID is required.");
--            request.getRequestDispatcher("/cartAndOrders/product-details.jsp").forward(request, response);
--            return;
--        }
--
--        int productId;
--        try {
--            productId = Integer.parseInt(productIdStr);
--        } catch (NumberFormatException e) {
--            request.setAttribute("error", "Invalid Product ID.");
--            request.getRequestDispatcher("/cartAndOrders/product-details.jsp").forward(request, response);
--            return;
--        }
--
--        // Load the latest items from items.txt
--        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
--        if (items == null || items.isEmpty()) {
--            request.setAttribute("error", "No products available.");
--            request.getRequestDispatcher("/cartAndOrders/product-details.jsp").forward(request, response);
--            return;
--        }
--
--        // Find the item by productId
--        GroceryItem item = items.stream()
--                .filter(i -> i.getProductID() == productId)
--                .findFirst()
--                .orElse(null);
--
--        if (item == null) {
--            request.setAttribute("error", "Product not found.");
--        } else {
--            request.setAttribute("item", item);
--            request.setAttribute("outOfStock", item.getQuantity() <= 0); // Optional, for consistency
--        }
--
--        request.getRequestDispatcher("/cartAndOrders/product-details.jsp").forward(request, response);
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/js/stockDashboard.js
-===================================================================
-diff --git a/src/main/webapp/js/stockDashboard.js b/src/main/webapp/js/stockDashboard.js
-deleted file mode 100644
---- a/src/main/webapp/js/stockDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,16 +0,0 @@
--function searchItems() {
--    // Get the search input value
--    let input = document.getElementById("stock-search").value.toLowerCase();
--    // Get all stock rows
--    let stockRows = document.getElementsByClassName("stock-row");
--
--    // Loop through all stock rows and hide those that don't match the search query
--    for (let i = 0; i < stockRows.length; i++) {
--        let productId = stockRows[i].getAttribute("data-product-id").toLowerCase();
--        if (productId.includes(input)) {
--            stockRows[i].style.display = "flex";
--        } else {
--            stockRows[i].style.display = "none";
--        }
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/data/admins.txt
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/admins.txt b/target/OnlineGroceryOrderSystem/data/admins.txt
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/data/admins.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,27 +0,0 @@
----- Admin Start: AD181627987901 ---
--adminNumber=AD181627987901
--email=admin1@gmail.admin
--password=admin123
--role=order
----- Admin End ---
--
----- Admin Start: AD181627987902 ---
--adminNumber=AD181627987902
--email=admin2@gmail.admin
--password=admin456
--role=stock
----- Admin End ---
--
----- Admin Start: AD181627987903 ---
--adminNumber=AD181627987903
--email=admin3@gmail.admin
--password=admin789
--role=super
----- Admin End ---
--
----- Admin Start: AD181627987904 ---
--adminNumber=AD181627987904
--email=admin4@gmail.admin
--password=admin012
--role=product
----- Admin End ---
-\ No newline at end of file
-Index: src/main/webapp/adminPages/orderDashboardInfo.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/orderDashboardInfo.jsp b/src/main/webapp/adminPages/orderDashboardInfo.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/orderDashboardInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,200 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.FileUtil, model.FileUtil.Order, model.User, model.GroceryItem, java.util.List, java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderDashboardInfo.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/orderDashboardInfo.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check session attributes
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "order".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Get request attributes
--    Order order = (Order) request.getAttribute("order");
--    User user = (User) request.getAttribute("user");
--    String tab = (String) request.getAttribute("tab");
--
--    if (order == null || user == null || tab == null) {
--        response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=missingData");
--        return;
--    }
--
--    // Debug: Print the tab value to confirm it's correct
--    System.out.println("orderDashboardInfo.jsp - Tab value: " + tab);
--
--    String sectionTitle = "Ordered Products";
--    if ("delivered".equalsIgnoreCase(tab)) {
--        sectionTitle = "Delivered Products";
--    } else if ("cancelled".equalsIgnoreCase(tab)) {
--        sectionTitle = "Cancelled Products";
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/OrderAdminServlet?tab=<%= java.net.URLEncoder.encode(tab, "UTF-8") %>" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--        <a href="#" class="nav-link <%= "active".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('active')">Active</a>
--        <a href="#" class="nav-link <%= "delivered".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('delivered')">Delivered</a>
--        <a href="#" class="nav-link <%= "cancelled".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('cancelled')">Cancelled</a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-box"></i> Order Admin Dashboard
--    </div>
--</header>
--
--<section class="info-container">
--    <!-- User Info Section -->
--    <div class="user-info">
--        <h2>User Info</h2>
--        <div class="user-details">
--            <i class="fas fa-user-circle user-icon"></i>
--            <div class="details">
--                <p><strong>User Number:</strong> <%= user.getUserNumber() %></p>
--                <p><strong>Email:</strong> <%= user.getEmail() %></p>
--                <p><strong>Full Name:</strong> <%= user.getFullName() %></p>
--                <p><strong>Address:</strong> <%= user.getAddress() %></p>
--                <p><strong>Phone Number:</strong> <%= user.getPhoneNumber() %></p>
--            </div>
--        </div>
--    </div>
--
--    <!-- Order Info Section -->
--    <div class="order-info">
--        <h2 class="section-title"><%= sectionTitle %></h2>
--        <div class="order-items">
--            <%
--                // Use relative path for items.txt
--                String itemsFile = application.getRealPath("/data/items.txt");
--                List<GroceryItem> items = null;
--                try {
--                    items = FileUtil.readItems(itemsFile);
--                } catch (Exception e) {
--                    out.println("Error reading items: " + e.getMessage());
--                }
--                if (items == null) {
--                    items = new ArrayList<>();
--                }
--
--                int totalQuantity = 0;
--                double totalPrice = order.getTotalPrice();
--                List<String[]> products = order.getProducts();
--
--                for (String[] product : products) {
--                    String productID = product[0];
--                    int quantity = Integer.parseInt(product[1]);
--                    totalQuantity += quantity;
--
--                    GroceryItem item = null;
--                    for (GroceryItem groceryItem : items) {
--                        if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                            item = groceryItem;
--                            break;
--                        }
--                    }
--
--                    if (item != null) {
--                        double itemTotalPrice = item.getProductPrice() * quantity;
--            %>
--            <div class="order-item">
--                <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--                <div class="order-item-details">
--                    <span class="order-product-title"><%= item.getProductName() %></span>
--                    <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--                    <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--                </div>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--        <div class="total-info">
--            <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--            <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--        </div>
--    </div>
--
--    <!-- Status Update Section -->
--    <div class="status-update">
--        <h3>Update Order Status</h3>
--        <form action="${pageContext.request.contextPath}/OrderAdminServlet" method="post">
--            <input type="hidden" name="action" value="updateStatus">
--            <input type="hidden" name="orderNumber" value="<%= order.getOrderNumber() %>">
--            <input type="hidden" name="tab" value="<%= tab %>">
--            <div class="status-field">
--                <label for="status">Order Status:</label>
--                <select name="status" id
--                        ="status" onchange="handleStatusChange()">
--                    <option value="Pending" <%= "Pending".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Pending</option>
--                    <option value="Delivered" <%= "Delivered".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Delivered</option>
--                    <option value="Cancelled" <%= "Cancelled".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Cancelled</option>
--                </select>
--            </div>
--            <% if ("cash on delivery".equalsIgnoreCase(order.getPaymentMethod())) { %>
--            <div class="status-field">
--                <label for="paymentStatus">Payment Status:</label>
--                <select name="paymentStatus" id="paymentStatus">
--                    <option value="Pending" <%= "Pending".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Pending</option>
--                    <option value="Completed" <%= "Completed".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Completed</option>
--                    <option value="Cancelled" <%= "Cancelled".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Cancelled</option>
--                </select>
--            </div>
--            <% } %>
--            <button type="submit" class="save-btn">Save</button>
--        </form>
--    </div>
--
--    <!-- Order Stats Section -->
--    <div class="order-stats">
--        <h3>Order Stats</h3>
--        <div class="stats-container">
--            <div class="stat-box">
--                <span class="stat-label">Order Date</span>
--                <span class="stat-value"><%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Delivered Date</span>
--                <span class="stat-value"><%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Delivery Method</span>
--                <span class="stat-value"><%= order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Payment Method</span>
--                <span class="stat-value"><%= order.getPaymentMethod() != null ? order.getPaymentMethod() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Payment Status</span>
--                <span class="stat-value <%= order.getPaymentStatus().toLowerCase() %>"><%= order.getPaymentStatus() %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Status</span>
--                <span class="stat-value <%= order.getDeliveryStatus().toLowerCase() %>"><%= order.getDeliveryStatus() %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Order Number</span>
--                <span class="stat-value <%= order.getOrderNumber().toLowerCase() %>"><%= order.getOrderNumber() %></span>
--            </div>
--        </div>
--    </div>
--</section>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/cartAndOrders/processCheckOut.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/processCheckOut.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/processCheckOut.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/cartAndOrders/processCheckOut.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,39 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<html>
--<head>
--    <title>Order Confirmation - Grocery</title>
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/processCheckOut.css">
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<div class="container">
--    <h1>Order Confirmation</h1>
--    <p>Thank you for your order!</p>
--    <div class="order-details">
--        <p><strong>Order Number:</strong> <%= request.getAttribute("orderNumber") %></p>
--        <%-- Debug: Log the userNumber value --%>
--        <% System.out.println("User ID in JSP: " + request.getAttribute("userNumber")); %>
--        <p><strong>User ID:</strong> <%= request.getAttribute("userNumber") != null ? request.getAttribute("userNumber") : "" %></p>
--        <p><strong>Full Name:</strong> <%= request.getAttribute("fullName") %></p>
--        <p><strong>Phone Number:</strong> <%= request.getAttribute("phoneNumber") %></p>
--        <p><strong>Address:</strong> <%= request.getAttribute("address") %></p>
--        <p><strong>Delivery Method:</strong> <%= request.getAttribute("deliveryMethod") %></p>
--        <% String deliveryDate = (String) request.getAttribute("deliveryDate"); %>
--        <% if (deliveryDate != null && !deliveryDate.isEmpty()) { %>
--        <p><strong>Delivery Date:</strong> <%= deliveryDate %></p>
--        <% } %>
--        <p><strong>Payment Method:</strong> <%= request.getAttribute("paymentMethod") %></p>
--        <p><strong>Payment Status:</strong> <%= request.getAttribute("paymentStatus") %></p>
--        <p><strong>Delivery Status:</strong> <%= request.getAttribute("deliveryStatus") %></p>
--        <p><strong>Order Status:</strong> <%= request.getAttribute("orderStatus") %></p>
--        <p><strong>Total Price:</strong> RS. <%= request.getAttribute("totalPrice") %></p>
--    </div>
--    <div class="links">
--        <a href="${pageContext.request.contextPath}/index.jsp" class="btn">Back to Home</a>
--        <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Back to Shopping</a>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/admin.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/admin.css b/target/OnlineGroceryOrderSystem/css/admin.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/admin.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,247 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5; /* Light white background */
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95); /* Slightly brighter white for header */
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a; /* Green toolbox icon */
--    margin-right: 5px;
--}
--
--.nav-links {
--    display: flex;
--    gap: 20px;
--}
--
--.nav-links a {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    transition: color 0.3s ease;
--}
--
--.nav-links a:hover {
--    color: #8bc34a;
--}
--
--.header-icons {
--    display: flex;
--    gap: 10px;
--}
--
--.header-icons a {
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.header-icons .logout-icon {
--    background-color: #e74c3c; /* Red logout icon */
--    color: #fff;
--}
--
--.header-icons .logout-icon:hover {
--    background-color: #c0392b; /* Darker red on hover */
--}
--
--/* Profile container styling */
--.profile-container {
--    display: flex;
--    justify-content: center;
--    margin: 20px 0;
--}
--
--.user-info {
--    background-color: rgba(255, 255, 255, 0.95); /* Slightly brighter white for container */
--    border-radius: 30px;
--    padding: 20px;
--    width: 500px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.user-details {
--    display: flex;
--    align-items: center;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: center;
--    width: 100%;
--}
--
--.user-icon {
--    font-size: 80px;
--    color: #333;
--    margin-right: 40px;
--}
--
--.user-details-text p {
--    margin: 5px 0;
--    font-size: 16px;
--    color: #555;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--/* Stats container styling */
--.stats-container {
--    display: flex;
--    justify-content: center;
--    gap: 20px;
--    margin: 20px 0;
--    flex-wrap: wrap; /* Allow wrapping for better responsiveness */
--}
--
--.stat-box {
--    background-color: rgba(255, 255, 255, 0.95); /* Match user-info background */
--    border-radius: 30px;
--    padding: 20px;
--    width: 300px;
--    min-height: 150px; /* Ensure consistent height */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    text-align: center;
--    display: flex;
--    flex-direction: column;
--    justify-content: center; /* Center content vertically */
--}
--
--.stat-header h2 {
--    margin: 0;
--    font-size: 20px;
--    color: #333;
--    margin-bottom: 10px;
--}
--
--.stat-number {
--    font-size: 28px;
--    font-weight: 600;
--    color: #8bc34a; /* Green color for the number */
--}
--
--/* Heading styling (matching homepage) */
--.heading {
--    text-align: center;
--    padding: 10px 10px;
--    font-size: 30px;
--    color: #130f40;
--}
--
--.heading span {
--    background: #28A745;
--    color: #fff;
--    display: inline-block;
--    padding: .5rem 3rem;
--    clip-path: polygon(100% 0, 93% 50%, 100% 99%, 0% 100%, 7% 50%, 0% 0);
--}
--
--/* Dashboard container styling (new section) */
--.dashboard-container {
--    display: flex;
--    justify-content: center;
--    gap: 20px;
--    margin: 20px 0;
--    flex-wrap: wrap; /* Allow wrapping for better responsiveness */
--}
--
--.dashboard-box {
--    background-color: rgba(255, 255, 255, 0.95); /* Match stat-box background */
--    border-radius: 30px;
--    padding: 20px;
--    width: 300px;
--    min-height: 150px; /* Match stat-box height */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    text-align: center;
--    text-decoration: none; /* Remove underline from link */
--    color: inherit; /* Inherit text color */
--    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Add hover effect */
--    display: flex;
--    flex-direction: column;
--    justify-content: center; /* Center content vertically */
--}
--
--.dashboard-box:hover {
--    transform: translateY(-5px); /* Slight lift on hover */
--    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* Deeper shadow on hover */
--}
--
--.dashboard-box:hover .dashboard-header h2 {
--    color: #8bc34a; /* Change text color to green on hover */
--}
--
--.dashboard-header h2 {
--    margin: 0;
--    font-size: 20px;
--    color: #333;
--    transition: color 0.3s ease; /* Smooth color transition on hover */
--}
--
--/* Chart container styling */
--.chart-container {
--    margin: 20px auto;
--    padding: 20px;
--    background-color: rgba(255, 255, 255, 0.95); /* Match other containers */
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    max-width: 800px; /* Limit width for better readability */
--}
--
--.chart-container canvas {
--    max-width: 100%;
--    height: 400px; /* Adjust height as needed */
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/processCheckOut.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/processCheckOut.css b/target/OnlineGroceryOrderSystem/css/processCheckOut.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/processCheckOut.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,79 +0,0 @@
--/* processCheckout.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #f4f4f4;
--    margin: 0;
--    padding: 0;
--    display: flex;
--    justify-content: center;
--    align-items: center;
--    min-height: 100vh;
--}
--
--.container {
--    background-color: #6a5acd; /* Purple background */
--    padding: 40px;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    width: 100%;
--    max-width: 500px;
--    text-align: center;
--}
--
--h1 {
--    font-size: 30px;
--    margin-bottom: 20px;
--    color: #fff;
--}
--
--p {
--    font-size: 16px;
--    margin: 10px 0;
--    line-height: 1.5;
--}
--
--.order-details {
--    text-align: left;
--    background: rgba(255, 255, 255, 0.2);
--    padding: 15px;
--    border-radius: 5px;
--    margin: 15px 0;
--}
--
--.links {
--    margin-top: 20px;
--}
--
--.btn {
--    background-color: #20b2aa;
--    color: #fff;
--    padding: 10px 15px;
--    text-decoration: none;
--    font-weight: bold;
--    border-radius: 5px;
--    transition: background 0.3s;
--    display: inline-block;
--    margin: 5px;
--}
--
--.btn:hover {
--    background-color: #19a99d;
--}
--
--@media screen and (max-width: 768px) {
--    .container {
--        padding: 20px;
--        margin: 20px;
--    }
--
--    h1 {
--        font-size: 24px;
--    }
--
--    p {
--        font-size: 14px;
--    }
--}
-Index: src/main/webapp/css/orderCancel.css
-===================================================================
-diff --git a/src/main/webapp/css/orderCancel.css b/src/main/webapp/css/orderCancel.css
-deleted file mode 100644
---- a/src/main/webapp/css/orderCancel.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,189 +0,0 @@
--/* orderCancel.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--* {
--    font-family: 'Poppins', sans-serif;
--    margin: 0;
--    padding: 0;
--    box-sizing: border-box;
--}
--
--body {
--    background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg'); /* Adjust the path to your background image */
--    background-size: cover;
--    background-position: center;
--    background-repeat: no-repeat;
--    background-attachment: fixed;
--    min-height: 100vh;
--}
--
--header {
--    position: fixed;
--    top: 0;
--    left: 0;
--    width: 100%;
--    padding: 20px 9%;
--    background: #ffffff;
--    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
--    display: flex;
--    justify-content: space-between; /* Space between back-link and logo */
--    align-items: center;
--    z-index: 99;
--}
--
--.back-link {
--    font-size: 16px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 500;
--    display: flex;
--    align-items: center;
--}
--
--.back-link i {
--    margin-right: 5px;
--}
--
--.back-link:hover {
--    color: #27ae60;
--}
--
--.logo {
--    font-size: 18px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 600;
--    display: flex;
--    align-items: center;
--    position: absolute; /* Center the logo */
--    left: 50%;
--    transform: translateX(-50%); /* Center horizontally */
--}
--
--.logo i {
--    color: #27ae60;
--    margin-right: 5px;
--    font-size: 24px;
--}
--
--.cancel-container {
--    display: flex;
--    justify-content: space-between;
--    padding: 120px 9% 30px;
--    max-width: 1500px;
--    margin: 0 auto;
--}
--
--.order-section, .cancel-form {
--    flex: 1;
--    padding: 20px;
--}
--
--.order-section {
--    background: #fff;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    margin-right: 20px;
--}
--
--.cancel-form {
--    background: #6a5acd;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    padding: 30px;
--}
--
--.cancel-form .section-title {
--    color: #fff;
--    margin-bottom: 20px;
--    font-size: 30px;
--    text-align: center;
--}
--
--.order-items {
--    margin-bottom: 20px;
--    max-height: 400px; /* Limit the height to enable scrolling */
--    overflow-y: auto; /* Enable vertical scrolling */
--}
--
--.order-item {
--    display: flex;
--    align-items: center;
--    background: #fff;
--    padding: 10px;
--    border-radius: 10px;
--    margin-bottom: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #333;
--}
--
--.order-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 10px;
--    border-radius: 5px;
--    object-fit: cover;
--}
--
--.order-item-details {
--    flex-grow: 1;
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    width: 100%;
--}
--
--.order-product-title {
--    font-size: 16px;
--    font-weight: 500;
--    flex-shrink: 0;
--    margin-right: 10px;
--}
--
--.order-price {
--    font-size: 16px;
--    margin-right: 10px;
--}
--
--.order-total {
--    font-size: 16px;
--    font-weight: 500;
--    white-space: nowrap;
--}
--
--.total-info {
--    margin: 20px 0;
--    font-size: 16px;
--    color: #fff;
--}
--
--.total-info span {
--    display: block;
--    margin-bottom: 10px;
--}
--
--.cancel-btn {
--    width: 100%;
--    padding: 12px;
--    background: #e74c3c; /* Red color for cancel button */
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    color: #fff;
--    cursor: pointer;
--    transition: background 0.3s;
--}
--
--.cancel-btn:hover {
--    background: #c0392b; /* Darker red on hover */
--}
--
--@media screen and (max-width: 768px) {
--    .cancel-container {
--        flex-direction: column;
--    }
--    .order-section {
--        margin-right: 0;
--        margin-bottom: 20px;
--    }
--}
-\ No newline at end of file
-Index: src/main/java/servlet/StockAdminServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/StockAdminServlet.java b/src/main/java/servlet/StockAdminServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/StockAdminServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,144 +0,0 @@
--package servlet;
--
--import model.FileUtil;
--import model.GroceryItem;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import java.io.IOException;
--import java.util.ArrayList;
--
--public class StockAdminServlet extends HttpServlet {
--    private static final int LOW_STOCK_THRESHOLD = 250; // Define the threshold for low stock
--    private static final String ITEMS_FILE_PATH = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Check if the admin is logged in
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--            return;
--        }
--
--        // Check if the user has the correct role (Super Admin or Stock Admin)
--        String adminRole = (String) session.getAttribute("adminRole");
--        if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "stock".equalsIgnoreCase(adminRole))) {
--            response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--            return;
--        }
--
--        // Read items from items.txt
--        System.out.println("Reading items from: " + ITEMS_FILE_PATH);
--        ArrayList<GroceryItem> allItems;
--        try {
--            allItems = FileUtil.readItems(ITEMS_FILE_PATH);
--        } catch (Exception e) {
--            e.printStackTrace();
--            request.setAttribute("error", "Error reading items: " + e.getMessage());
--            request.getRequestDispatcher("/error.jsp").forward(request, response);
--            return;
--        }
--
--        // Filter items with low stock
--        ArrayList<GroceryItem> lowStockItems = new ArrayList<>();
--        for (GroceryItem item : allItems) {
--            if (item.getQuantity() < LOW_STOCK_THRESHOLD) {
--                lowStockItems.add(item);
--            }
--        }
--
--        // Set the low stock items as a request attribute
--        request.setAttribute("lowStockItems", lowStockItems);
--
--        // Forward to stockDashboard.jsp in adminPages directory
--        request.getRequestDispatcher("/adminPages/stockDashboard.jsp").forward(request, response);
--    }
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Check if the admin is logged in
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--            return;
--        }
--
--        // Check if the user has the correct role
--        String adminRole = (String) session.getAttribute("adminRole");
--        if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "stock".equalsIgnoreCase(adminRole))) {
--            response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--            return;
--        }
--
--        // Get the action parameter
--        String action = request.getParameter("action");
--        if ("updateStock".equals(action)) {
--            // Get the product ID and new stock count
--            String productID = request.getParameter("productID");
--            String stockCountStr = request.getParameter("stockCount");
--
--            // Validate input
--            if (productID == null || stockCountStr == null || productID.trim().isEmpty() || stockCountStr.trim().isEmpty()) {
--                response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=invalidInput");
--                return;
--            }
--
--            int newStockCount;
--            try {
--                newStockCount = Integer.parseInt(stockCountStr);
--                if (newStockCount < 0) {
--                    response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=invalidStockCount");
--                    return;
--                }
--            } catch (NumberFormatException e) {
--                response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=invalidStockCount");
--                return;
--            }
--
--            // Read items from items.txt
--            System.out.println("Reading items from: " + ITEMS_FILE_PATH);
--            ArrayList<GroceryItem> allItems;
--            try {
--                allItems = FileUtil.readItems(ITEMS_FILE_PATH);
--            } catch (Exception e) {
--                e.printStackTrace();
--                response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=readError");
--                return;
--            }
--
--            // Update the stock count for the specified product
--            boolean itemFound = false;
--            for (GroceryItem item : allItems) {
--                if (String.valueOf(item.getProductID()).equals(productID)) {
--                    item.setQuantity(newStockCount);
--                    itemFound = true;
--                    break;
--                }
--            }
--
--            if (!itemFound) {
--                response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=itemNotFound");
--                return;
--            }
--
--            // Save the updated items back to items.txt
--            try {
--                System.out.println("Writing items to: " + ITEMS_FILE_PATH);
--                FileUtil.writeItems(ITEMS_FILE_PATH, allItems);
--            } catch (Exception e) {
--                e.printStackTrace();
--                response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=writeError");
--                return;
--            }
--
--            // Redirect back to StockServlet to refresh the dashboard
--            response.sendRedirect(request.getContextPath() + "/StockAdminServlet?success=stockUpdated");
--        } else {
--            response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=invalidAction");
--        }
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/js/checkOut.js
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/js/checkOut.js b/src/main/webapp/js/checkOut.js
-deleted file mode 100644
---- a/src/main/webapp/js/checkOut.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,120 +0,0 @@
--document.addEventListener('DOMContentLoaded', () => {
--    const cartItemsContainer = document.getElementById('cart-items');
--    const totalQuantityElement = document.getElementById('total-quantity');
--    const totalPriceElement = document.getElementById('total-price');
--    const deliveryMethodSelect = document.getElementById('deliveryMethod');
--    const deliveryDateInput = document.getElementById('deliveryDate');
--
--    if (!cartItemsContainer || !totalQuantityElement || !totalPriceElement || !deliveryMethodSelect || !deliveryDateInput) {
--        console.error('Required elements not found in DOM');
--        return;
--    }
--
--    const contextPath = document.head.querySelector('base') ? document.head.querySelector('base').href : '/OnlineGroceryOrderSystem';
--    console.log('Using context path:', contextPath);
--
--    // Fetch cart items
--    fetch(`${contextPath}/CartServlet?action=getCart`, {
--        method: 'GET',
--        headers: { 'Content-Type': 'application/json' }
--    })
--        .then(response => {
--            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
--            return response.json();
--        })
--        .then(data => {
--            console.log('Fetched cart data:', data);
--            if (!data.success) {
--                cartItemsContainer.innerHTML = '<p>' + (data.message || 'Error loading cart items.') + '</p>';
--                totalQuantityElement.textContent = '0';
--                totalPriceElement.textContent = '0.00';
--                return;
--            }
--
--            const cartItems = data.cart;
--            if (cartItems.length === 0) {
--                cartItemsContainer.innerHTML = '<p>No items in cart.</p>';
--                totalQuantityElement.textContent = '0';
--                totalPriceElement.textContent = '0.00';
--                return;
--            }
--
--            let totalQuantity = 0;
--            let totalPrice = 0;
--
--            cartItemsContainer.innerHTML = '';
--            cartItems.forEach(item => {
--                const cartItem = document.createElement('div');
--                cartItem.classList.add('cart-item');
--                const itemTotal = (item.productPrice || 0) * (item.quantity || 1);
--                const imageSrc = item.productImageLink || 'https://via.placeholder.com/50';
--                cartItem.innerHTML = `
--                    <img src="${imageSrc}" alt="${item.productName || 'Unknown Item'}" class="cart-item-img">
--                    <div class="cart-item-details">
--                        <span class="cart-product-title">${item.productName || 'Unknown Item'}</span>
--                        <span class="cart-price">RS. ${item.productPrice ? item.productPrice.toFixed(2) : '0.00'} / Product X ${item.quantity || 1}</span>
--                        <span class="cart-total">RS. ${itemTotal.toFixed(2)}</span>
--                    </div>
--                `;
--                cartItemsContainer.appendChild(cartItem);
--
--                totalQuantity += item.quantity || 1;
--                totalPrice += itemTotal;
--            });
--
--            totalQuantityElement.textContent = totalQuantity;
--            totalPriceElement.textContent = totalPrice.toFixed(2);
--        })
--        .catch(error => {
--            console.error('Error fetching cart:', error);
--            cartItemsContainer.innerHTML = '<p>Error loading cart items.</p>';
--            totalQuantityElement.textContent = '0';
--            totalPriceElement.textContent = '0.00';
--        });
--
--    // Toggle delivery date input based on delivery method
--    deliveryMethodSelect.addEventListener('change', () => {
--        if (deliveryMethodSelect.value === 'scheduled' || deliveryMethodSelect.value === 'store pickup') {
--            deliveryDateInput.style.display = 'block';
--            deliveryDateInput.setAttribute('required', 'required');
--        } else {
--            deliveryDateInput.style.display = 'none';
--            deliveryDateInput.removeAttribute('required');
--            deliveryDateInput.value = '';
--        }
--    });
--
--    // Form validation
--    const checkoutForm = document.getElementById('checkout-form');
--    if (checkoutForm) {
--        let isSubmitting = false;
--
--        checkoutForm.addEventListener('submit', (e) => {
--            if (isSubmitting) {
--                e.preventDefault();
--                return;
--            }
--
--            const fullName = document.querySelector('input[name="fullName"]').value;
--            const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;
--            const address = document.querySelector('input[name="address"]').value;
--            const deliveryMethod = deliveryMethodSelect.value;
--            const paymentMethod = document.querySelector('select[name="paymentMethod"]').value;
--            const deliveryDate = deliveryDateInput.value;
--
--            if (!fullName || !phoneNumber || !address || !deliveryMethod || !paymentMethod) {
--                alert('Please fill in all fields.');
--                e.preventDefault();
--                return;
--            }
--
--            if ((deliveryMethod === 'scheduled' || deliveryMethod === 'store pickup') && !deliveryDate) {
--                alert('Please select a delivery or pickup date.');
--                e.preventDefault();
--                return;
--            }
--
--            isSubmitting = true;
--        });
--    }
--});
-\ No newline at end of file
-Index: src/main/webapp/css/userProfile.css
-===================================================================
-diff --git a/src/main/webapp/css/userProfile.css b/src/main/webapp/css/userProfile.css
-deleted file mode 100644
---- a/src/main/webapp/css/userProfile.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,471 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    /*background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg');*/
--    /*background-size: cover;*/
--    /*background-position: center;*/
--    /*background-repeat: no-repeat;*/
--    /*background-attachment: fixed;*/
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.back-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    transition: color 0.3s ease;
--}
--
--.back-link i {
--    margin-right: 5px;
--}
--
--.back-link:hover {
--    color: #8bc34a;
--}
--
--.logo {
--    text-decoration: none;
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--    transition: color 0.3s ease;
--}
--
--.logo:hover i {
--    color: #689f38;
--}
--
--.content {
--    width: 100%;
--    padding: 5px 1cm 20px 1cm;
--    background-color: transparent;
--}
--
--.profile-container:nth-child(1) {
--    max-width: 1000px;
--    margin: 10px auto 20px auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.profile-container:nth-child(2) {
--    max-width: 1200px;
--    margin: 0 auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.edit-btn {
--    background-color: #00CED1;
--    color: #FFF;
--    border: none;
--    padding: 8px 15px;
--    border-radius: 20px;
--    cursor: pointer;
--    font-size: 14px;
--    display: flex;
--    align-items: center;
--    gap: 5px;
--    transition: background-color 0.3s ease;
--}
--
--.edit-btn i {
--    font-size: 14px;
--}
--
--.edit-btn:hover {
--    background-color: #00B7B9;
--}
--
--.user-details {
--    display: flex;
--    justify-content: flex-start;
--    margin-bottom: 30px;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: flex-start;
--    gap: 20px;
--}
--
--.user-icon {
--    font-size: 60px;
--    color: #333;
--}
--
--.user-details-text p {
--    font-size: 16px;
--    color: #555;
--    margin: 5px 0;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--.activity-section {
--    margin-top: 20px;
--}
--
--.activity-tabs {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    border-bottom: 1px solid #DDD;
--    margin-bottom: 20px;
--}
--
--.activity-tabs .tab {
--    padding: 10px 20px;
--    font-size: 16px;
--    color: #555;
--    cursor: pointer;
--    transition: color 0.3s ease;
--    text-decoration: none;
--}
--
--.activity-tabs .tab.active {
--    color: #333;
--    font-weight: bold;
--    border-bottom: 2px solid #333;
--}
--
--.activity-tabs .tab:hover {
--    color: #333;
--}
--
--.activity-tabs .search-bar {
--    display: flex;
--    align-items: center;
--    margin-left: auto; /* Pushes the search bar to the far right */
--}
--
--.activity-tabs .search-bar form {
--    display: flex;
--    align-items: center;
--}
--
--.activity-tabs .search-bar input[type="text"] {
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #DDD;
--    border-radius: 20px 0 0 20px;
--    outline: none;
--}
--
--.activity-tabs .search-bar button {
--    padding: 8px 15px;
--    background-color: #8bc34a;
--    color: #FFF;
--    border: none;
--    border-radius: 0 20px 20px 0;
--    cursor: pointer;
--    transition: background-color 0.3s ease;
--}
--
--.activity-tabs .search-bar button:hover {
--    background-color: #689f38;
--}
--
--.activity-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--    max-height: 300px; /* Set a fixed height for the scrollable area */
--    overflow-y: auto; /* Enable vertical scrolling */
--    padding-right: 10px; /* Add padding to avoid content being hidden under scrollbar */
--}
--
--/* Webkit Scrollbar Styling */
--.activity-list::-webkit-scrollbar {
--    width: 8px;
--}
--
--.activity-list::-webkit-scrollbar-track {
--    background: #f1f1f1;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb {
--    background: #8bc34a; /* Match the theme color */
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb:hover {
--    background: #689f38; /* Darker shade on hover */
--}
--
--.activity-item {
--    display: flex;
--    align-items: center;
--    background-color: #F9F9F9;
--    padding: 10px;
--    border-radius: 5px;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-item i {
--    font-size: 16px;
--    color: #333;
--    margin-right: 10px;
--}
--
--.activity-item p {
--    margin: 0;
--    flex: 1;
--}
--
--.activity-item .timestamp {
--    font-size: 12px;
--    color: #999;
--}
--
--.activity-item .status {
--    padding: 2px 8px;
--    border-radius: 10px;
--    font-size: 12px;
--    color: #FFF;
--}
--
--.activity-item .status.pending {
--    background-color: #FFA500;
--}
--
--.activity-item .status.completed {
--    background-color: #28A745;
--}
--
--.activity-item .status.disabled {
--    background-color: #DC3545;
--}
--
--.activity-item .cancel-link {
--    display: inline-block; /* Makes it behave like a button */
--    padding: 2px 8px; /* Same padding as the status */
--    background-color: #00CED1; /* Red background */
--    color: #FFF; /* White text */
--    border-radius: 10px; /* Rounded corners */
--    font-size: 12px; /* Same font size as the status */
--    text-decoration: none; /* Remove underline */
--    margin-left: 10px; /* Space from the status */
--    transition: background-color 0.3s ease; /* Smooth hover transition */
--}
--
--.activity-item .cancel-link:hover {
--    background-color: #00B7B9; /* Darker red on hover */
--}
--
--.form-group {
--    margin: 15px 0;
--}
--
--.form-group label {
--    display: block;
--    font-size: 16px;
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.form-group input,
--.form-group textarea {
--    width: 100%;
--    padding: 8px;
--    font-size: 16px;
--    border: 1px solid #DDD;
--    border-radius: 5px;
--    box-sizing: border-box;
--}
--
--.form-group textarea {
--    height: 80px;
--    resize: vertical;
--}
--
--.form-group input[readonly] {
--    background-color: #F5F5F5;
--    cursor: not-allowed;
--}
--
--.form-buttons {
--    text-align: center;
--}
--
--.save-btn,
--.delete-btn {
--    display: inline-block;
--    margin: 10px 5px 0 0;
--    padding: 8px 15px;
--    border: none;
--    border-radius: 20px;
--    cursor: pointer;
--    font-size: 14px;
--    text-align: center;
--}
--
--.save-btn {
--    background-color: #8bc34a;
--    color: #FFF;
--}
--
--.save-btn:hover {
--    background-color: #689f38;
--}
--
--.delete-btn {
--    background-color: #e74c3c;
--    color: #FFF;
--}
--
--.delete-btn:hover {
--    background-color: #c0392b;
--}
--
--/* Modal (Popup) Styling */
--.modal {
--    display: none;
--    position: fixed;
--    z-index: 1000;
--    left: 0;
--    top: 0;
--    width: 100%;
--    height: 100%;
--    background-color: rgba(0, 0, 0, 0.5);
--    justify-content: center;
--    align-items: center;
--}
--
--.modal-content {
--    background: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    overflow: hidden;
--    width: 500px;
--    text-align: center;
--    font-family: 'Source Sans Pro', sans-serif;
--    animation: fadeIn 0.5s ease-in-out;
--}
--
--.modal-header {
--    padding: 2em;
--    background-color: #FF4D4D;
--    background: rgba(255, 0, 0, 0.3);
--    color: #fff;
--    border-top-right-radius: 8px;
--    border-top-left-radius: 8px;
--}
--
--.modal-header h3 {
--    font-weight: lighter;
--    text-transform: uppercase;
--    letter-spacing: 2px;
--    font-size: 1.2em;
--    margin: 0;
--    color: #B22222;
--}
--
--.modal-body {
--    padding: 2em;
--    background: #fff;
--    border-bottom-right-radius: 8px;
--    border-bottom-left-radius: 8px;
--}
--
--.modal-body p {
--    color: #757575;
--    letter-spacing: 1px;
--    font-size: 1.1em;
--    line-height: 1.5;
--    margin: 0 0 1.5em 0;
--}
--
--.modal-buttons {
--    display: flex;
--    justify-content: center;
--    gap: 1em;
--}
--
--.modal-btn {
--    padding: 0.8em 2em;
--    border-radius: 30px;
--    text-decoration: none;
--    font-size: 15px;
--    text-transform: uppercase;
--    cursor: pointer;
--    transition: all 0.4s ease;
--}
--
--.confirm-btn {
--    background: #FF4D4D;
--    color: #fff;
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.21);
--}
--
--.confirm-btn:hover {
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.41);
--}
--
--.cancel-btn {
--    background: #689f38;
--    color: #fff;
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.21);
--}
--
--.cancel-btn:hover {
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.41);
--}
--
--@keyframes fadeIn {
--    from { opacity: 0; transform: scale(0.9); }
--    to { opacity: 1; transform: scale(1); }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/stockDashboard.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/stockDashboard.js b/target/OnlineGroceryOrderSystem/js/stockDashboard.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/stockDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,16 +0,0 @@
--function searchItems() {
--    // Get the search input value
--    let input = document.getElementById("stock-search").value.toLowerCase();
--    // Get all stock rows
--    let stockRows = document.getElementsByClassName("stock-row");
--
--    // Loop through all stock rows and hide those that don't match the search query
--    for (let i = 0; i < stockRows.length; i++) {
--        let productId = stockRows[i].getAttribute("data-product-id").toLowerCase();
--        if (productId.includes(input)) {
--            stockRows[i].style.display = "flex";
--        } else {
--            stockRows[i].style.display = "none";
--        }
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/productDashboardInfo.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/productDashboardInfo.jsp b/target/OnlineGroceryOrderSystem/adminPages/productDashboardInfo.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/productDashboardInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,308 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.GroceryItem" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Product Details</title>
--  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
--  <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/productDashboard.css?v=<%= System.currentTimeMillis() %>">
--  <script src="${pageContext.request.contextPath}/js/productDashboard.js"></script>
--  <style>
--    .product-info-section {
--      display: flex;
--      flex-direction: column;
--      align-items: center;
--      padding: 20px;
--      max-width: 600px;
--      margin: 0 auto;
--    }
--    .product-image-preview {
--      margin-bottom: 20px;
--      text-align: center;
--    }
--    .product-image-preview img {
--      max-width: 200px;
--      max-height: 200px;
--      border-radius: 8px;
--    }
--    .product-form {
--      width: 100%;
--      display: flex;
--      flex-direction: column;
--      gap: 15px;
--    }
--    .form-group {
--      display: flex;
--      align-items: center;
--      gap: 10px;
--    }
--    .form-group label {
--      flex: 0 0 120px;
--      font-weight: 500;
--    }
--    .form-group input,
--    .form-group select,
--    .form-group textarea,
--    .form-group span {
--      flex: 1;
--      padding: 8px;
--      border: 1px solid #ccc;
--      border-radius: 4px;
--      font-size: 14px;
--    }
--    .form-group textarea {
--      resize: vertical;
--      min-height: 80px;
--    }
--    .form-actions {
--      display: flex;
--      justify-content: center;
--      gap: 10px;
--      margin-top: 20px;
--    }
--    .save-btn, .delete-btn, .confirm-btn, .cancel-btn {
--      padding: 10px 20px;
--      border: none;
--      border-radius: 4px;
--      cursor: pointer;
--      font-size: 14px;
--    }
--    .save-btn {
--      background-color: #28a745;
--      color: white;
--    }
--    .delete-btn {
--      background-color: #dc3545;
--      color: white;
--    }
--    .confirm-btn {
--      background-color: #dc3545;
--      color: white;
--    }
--    .cancel-btn {
--      background-color: #6c757d;
--      color: white;
--    }
--
--    /* Modal Styles */
--    .modal {
--      display: none;
--      position: fixed;
--      z-index: 1000;
--      left: 0;
--      top: 0;
--      width: 100%;
--      height: 100%;
--      background-color: rgba(0, 0, 0, 0.5);
--      justify-content: center;
--      align-items: center;
--    }
--    .modal-content {
--      width: 500px;
--      background: rgba(255, 255, 255, 0.9);
--      border-radius: 10px;
--      overflow: hidden;
--      text-align: center;
--      font-family: 'Source Sans Pro', sans-serif;
--      animation: fadeIn 1s ease-in-out;
--    }
--    .modal-upper {
--      padding: 2em;
--      background-color: #dc3545;
--      background: rgba(255, 0, 0, 0.3);
--      color: #fff;
--      border-top-right-radius: 8px;
--      border-top-left-radius: 8px;
--    }
--    .modal-lower {
--      padding: 2em;
--      background: #fff;
--      border-bottom-right-radius: 8px;
--      border-bottom-left-radius: 8px;
--    }
--    .modal-status {
--      font-weight: lighter;
--      text-transform: uppercase;
--      letter-spacing: 2px;
--      font-size: 1.2em;
--      margin-top: -0.2em;
--      margin-bottom: 10px;
--      color: #721c24;
--    }
--    .modal-message {
--      margin-top: -0.5em;
--      color: #757575;
--      letter-spacing: 1px;
--      font-size: 1.1em;
--      line-height: 1.5;
--    }
--    .modal-actions {
--      display: flex;
--      justify-content: center;
--      gap: 10px;
--      margin-top: 1.5em;
--    }
--    .modal-actions a, .modal-actions button {
--      text-decoration: none;
--      padding: 0.8em 3em;
--      border-radius: 25px;
--      transition: all 0.4s ease;
--      font-size: 1.1em;
--      text-transform: uppercase;
--    }
--    .confirm-btn:hover, .cancel-btn:hover {
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);
--    }
--  </style>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if the user has the correct role (Super Admin or Product Admin)
--  String adminRole = (String) session.getAttribute("adminRole");
--  if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "product".equalsIgnoreCase(adminRole))) {
--    response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--    return;
--  }
--
--  // Get the product and action from request attributes
--  GroceryItem product = (GroceryItem) request.getAttribute("product");
--  String action = request.getParameter("action");
--  boolean isEdit = "info".equals(action) && product != null;
--  String productID = isEdit ? String.valueOf(product.getProductID()) : (String) request.getAttribute("nextProductID");
--%>
--<header>
--  <div class="nav-links">
--    <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--  </div>
--  <div class="logo">
--    <i class="fa-solid fa-folder-open"></i> <%= isEdit ? "Edit Product" : "Add New Product" %>
--  </div>
--</header>
--
--<div class="product-info-section">
--  <div class="product-image-preview">
--    <% if (isEdit && product.getProductImageLink() != null && !product.getProductImageLink().isEmpty()) { %>
--    <img id="product-image" src="<%= product.getProductImageLink() %>" alt="Product Image">
--    <% } else { %>
--    <img id="product-image" src="" alt="Product Image" style="display: none;">
--    <p id="no-image-text">No Image</p>
--    <% } %>
--  </div>
--
--  <form action="${pageContext.request.contextPath}/ProductAdminServlet" method="post" class="product-form">
--    <input type="hidden" name="action" value="<%= isEdit ? "update" : "add" %>">
--    <input type="hidden" name="productID" value="<%= productID %>">
--
--    <div class="form-group">
--      <label>Product Number:</label>
--      <span><%= productID %></span>
--    </div>
--
--    <div class="form-group">
--      <label for="productCategory">Category:</label>
--      <select id="productCategory" name="productCategory" required>
--        <option value="Produce" <%= isEdit && "Produce".equals(product.getProductCategory()) ? "selected" : "" %>>Produce</option>
--        <option value="Proteins" <%= isEdit && "Proteins".equals(product.getProductCategory()) ? "selected" : "" %>>Proteins</option>
--        <option value="Dairy" <%= isEdit && "Dairy".equals(product.getProductCategory()) ? "selected" : "" %>>Dairy</option>
--        <option value="Bakery" <%= isEdit && "Bakery".equals(product.getProductCategory()) ? "selected" : "" %>>Bakery</option>
--        <option value="Pantry" <%= isEdit && "Pantry".equals(product.getProductCategory()) ? "selected" : "" %>>Pantry</option>
--        <option value="Snacks" <%= isEdit && "Snacks".equals(product.getProductCategory()) ? "selected" : "" %>>Snacks</option>
--      </select>
--    </div>
--
--    <div class="form-group">
--      <label for="productName">Name:</label>
--      <input type="text" id="productName" name="productName" value="<%= isEdit ? product.getProductName() : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="productPrice">Price:</label>
--      <input type="number" step="0.01" id="productPrice" name="productPrice" value="<%= isEdit ? String.format("%.2f", product.getProductPrice()) : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="productImageLink">Image Link:</label>
--      <input type="url" id="productImageLink" name="productImageLink" value="<%= isEdit ? product.getProductImageLink() : "" %>" oninput="previewImage()" required>
--    </div>
--
--    <div class="form-group">
--      <label for="quantity">Stock Count:</label>
--      <input type="number" id="quantity" name="quantity" value="<%= isEdit ? product.getQuantity() : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="description">Description:</label>
--      <textarea id="description" name="description" required><%= isEdit ? product.getDescription() : "" %></textarea>
--    </div>
--
--    <div class="form-actions">
--      <button type="submit" class="save-btn">Save</button>
--      <% if (isEdit) { %>
--      <button type="button" class="delete-btn" onclick="showDeleteModal('<%= productID %>')">Delete</button>
--      <% } %>
--    </div>
--  </form>
--</div>
--
--<!-- Delete Confirmation Modal -->
--<div id="deleteModal" class="modal">
--  <div class="modal-content">
--    <div class="modal-upper">
--      <h3 class="modal-status">Confirm Deletion</h3>
--    </div>
--    <div class="modal-lower">
--      <p class="modal-message">
--        Are you sure you want to delete this product? This action cannot be undone.
--      </p>
--      <div class="modal-actions">
--        <a id="confirmDeleteLink" href="#" class="confirm-btn">Confirm</a>
--        <button type="button" class="cancel-btn" onclick="closeDeleteModal()">Cancel</button>
--      </div>
--    </div>
--  </div>
--</div>
--
--<script>
--  function previewImage() {
--    const imageLink = document.getElementById("productImageLink").value;
--    const imageElement = document.getElementById("product-image");
--    const noImageText = document.getElementById("no-image-text");
--
--    if (imageLink) {
--      imageElement.src = imageLink;
--      imageElement.style.display = "block";
--      noImageText.style.display = "none";
--    } else {
--      imageElement.style.display = "none";
--      noImageText.style.display = "block";
--    }
--  }
--
--  function showDeleteModal(productID) {
--    const modal = document.getElementById("deleteModal");
--    const confirmLink = document.getElementById("confirmDeleteLink");
--    confirmLink.href = "${pageContext.request.contextPath}/ProductAdminServlet?action=delete&productID=" + productID;
--    modal.style.display = "flex";
--  }
--
--  function closeDeleteModal() {
--    const modal = document.getElementById("deleteModal");
--    modal.style.display = "none";
--  }
--</script>
--
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/orderDashboard.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/orderDashboard.jsp b/target/OnlineGroceryOrderSystem/adminPages/orderDashboard.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/orderDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,164 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.FileUtil.Order" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Order Admin Dashboard</title>
--    <!-- Import Poppins font to match adminPage.css -->
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <!-- Add cache-busting query parameter to force CSS reload -->
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/orderDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Order Admin or Super Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "order".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Check if orders are set; if not, redirect to OrderAdminServlet
--    if (request.getAttribute("activeOrders") == null || request.getAttribute("cancelledOrders") == null || request.getAttribute("deliveredOrders") == null) {
--        System.out.println("orderDashboard.jsp - Orders not set, redirecting to OrderAdminServlet");
--        response.sendRedirect(request.getContextPath() + "/OrderAdminServlet");
--        return;
--    }
--
--    // Get the tab parameter from the request attribute
--    String tab = (String) request.getAttribute("tab");
--    if (tab == null || tab.trim().isEmpty()) {
--        tab = "active"; // Default to "active" if no tab is specified
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--        <a href="#" class="nav-link <%= "active".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('active')">Active</a>
--        <a href="#" class="nav-link <%= "delivered".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('delivered')">Delivered</a>
--        <a href="#" class="nav-link <%= "cancelled".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('cancelled')">Cancelled</a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-box"></i> Order Admin Dashboard
--    </div>
--</header>
--
--<!-- Active Orders Section -->
--<div id="active-section" class="order-section" style="display: <%= "active".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Active Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="active-search" placeholder="Search Order ID" onkeyup="searchOrders('active')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="active-orders">
--        <%
--            List<Order> activeOrders = (List<Order>) request.getAttribute("activeOrders");
--            if (activeOrders != null && !activeOrders.isEmpty()) {
--                for (Order order : activeOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> placed on <%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %>
--            (Status: <span class="status pending">Pending</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=active" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-active" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No active orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--<!-- Cancelled Orders Section -->
--<div id="cancelled-section" class="order-section" style="display: <%= "cancelled".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Cancelled Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="cancelled-search" placeholder="Search Order ID" onkeyup="searchOrders('cancelled')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="cancelled-orders">
--        <%
--            List<Order> cancelledOrders = (List<Order>) request.getAttribute("cancelledOrders");
--            if (cancelledOrders != null && !cancelledOrders.isEmpty()) {
--                for (Order order : cancelledOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> cancelled on <%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %>
--            (Status: <span class="status cancelled">Cancelled</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=cancelled" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-cancelled" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No cancelled orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--<!-- Delivered Orders Section -->
--<div id="delivered-section" class="order-section" style="display: <%= "delivered".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Delivered Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="delivered-search" placeholder="Search Order ID" onkeyup="searchOrders('delivered')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="delivered-orders">
--        <%
--            List<Order> deliveredOrders = (List<Order>) request.getAttribute("deliveredOrders");
--            if (deliveredOrders != null && !deliveredOrders.isEmpty()) {
--                for (Order order : deliveredOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> delivered on <%= order.getDeliveredDate() != null ? order.getDeliveredDate() : "N/A" %>
--            (Status: <span class="status delivered">Delivered</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=delivered" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-delivered" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No delivered orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/java/servlet/UserAdminServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/UserAdminServlet.java b/src/main/java/servlet/UserAdminServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/UserAdminServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,210 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.User;
--
--import java.io.File;
--import java.io.IOException;
--import java.time.LocalDateTime;
--import java.time.format.DateTimeFormatter;
--import java.util.ArrayList;
--import java.util.List;
--import java.util.stream.Collectors;
--
--public class UserAdminServlet extends HttpServlet {
--    private static final String USERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/users.txt";
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String DELIVERED_ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--    private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        System.out.println("UserAdminServlet - doGet invoked with request URI: " + request.getRequestURI());
--
--        // Check for admin session
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("UserAdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        // Log session attributes
--        System.out.println("UserAdminServlet - Session adminNumber: " + session.getAttribute("adminNumber"));
--        System.out.println("UserAdminServlet - Session adminEmail: " + session.getAttribute("adminEmail"));
--        System.out.println("UserAdminServlet - Session adminRole: " + session.getAttribute("adminRole"));
--
--        // Check if the admin has the correct role (Super Admin)
--        String adminRole = (String) session.getAttribute("adminRole");
--        if (adminRole == null || !"super".equalsIgnoreCase(adminRole)) {
--            System.out.println("UserAdminServlet - Unauthorized access attempt by role: " + adminRole);
--            response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--            return;
--        }
--
--        String action = request.getParameter("action");
--
--        if ("info".equals(action)) {
--            String userNumber = request.getParameter("userNumber");
--            System.out.println("UserAdminServlet - Info action requested for userNumber: " + userNumber);
--            if (userNumber == null || userNumber.trim().isEmpty()) {
--                request.setAttribute("errorMessage", "Invalid user number.");
--                doDefault(request, response);
--                return;
--            }
--
--            // Fetch user details
--            List<User> users = FileUtil.readUsers(USERS_FILE);
--            User selectedUser = null;
--            if (users != null) {
--                for (User user : users) {
--                    if (user.getUserNumber().equals(userNumber)) {
--                        selectedUser = user;
--                        System.out.println("UserAdminServlet - Found user: " + user.getUserNumber());
--                        break;
--                    }
--                }
--            }
--
--            if (selectedUser == null) {
--                System.out.println("UserAdminServlet - User not found for userNumber: " + userNumber);
--                request.setAttribute("errorMessage", "User not found.");
--                doDefault(request, response);
--                return;
--            }
--
--            // Fetch user's active and delivered orders
--            List<FileUtil.Order> activeOrders = FileUtil.readAllOrders(ORDERS_FILE);
--            List<FileUtil.Order> deliveredOrders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--
--            // Get search query
--            String searchQuery = request.getParameter("searchQuery");
--            System.out.println("UserAdminServlet - SearchQuery: " + searchQuery);
--
--            // Filter orders by userNumber and searchQuery
--            if (activeOrders != null) {
--                System.out.println("UserAdminServlet - Total active orders before filtering: " + activeOrders.size());
--                activeOrders = activeOrders.stream()
--                        .filter(order -> userNumber.equals(order.getUserNumber()))
--                        .filter(order -> searchQuery == null || searchQuery.trim().isEmpty() || order.getOrderNumber().toLowerCase().contains(searchQuery.toLowerCase()))
--                        .collect(Collectors.toList());
--                System.out.println("UserAdminServlet - Active orders after filtering: " + activeOrders.size());
--
--                // Sort by confirmationDate (oldest first)
--                activeOrders.sort((o1, o2) -> {
--                    try {
--                        LocalDateTime date1 = LocalDateTime.parse(o1.getConfirmationDate(), DATE_TIME_FORMATTER);
--                        LocalDateTime date2 = LocalDateTime.parse(o2.getConfirmationDate(), DATE_TIME_FORMATTER);
--                        return date1.compareTo(date2); // Oldest first (ascending)
--                    } catch (Exception e) {
--                        System.err.println("Error parsing confirmationDate: " + e.getMessage());
--                        return 0;
--                    }
--                });
--            } else {
--                activeOrders = new ArrayList<>();
--            }
--
--            if (deliveredOrders != null) {
--                System.out.println("UserAdminServlet - Total delivered orders before filtering: " + deliveredOrders.size());
--                deliveredOrders = deliveredOrders.stream()
--                        .filter(order -> userNumber.equals(order.getUserNumber()))
--                        .filter(order -> searchQuery == null || searchQuery.trim().isEmpty() || order.getOrderNumber().toLowerCase().contains(searchQuery.toLowerCase()))
--                        .collect(Collectors.toList());
--                System.out.println("UserAdminServlet - Delivered orders after filtering: " + deliveredOrders.size());
--
--                // Sort by deliveredDate (newest first)
--                deliveredOrders.sort((o1, o2) -> {
--                    try {
--                        if (o1.getDeliveredDate() == null || o1.getDeliveredDate().isEmpty()) return 1;
--                        if (o2.getDeliveredDate() == null || o2.getDeliveredDate().isEmpty()) return -1;
--                        LocalDateTime date1 = LocalDateTime.parse(o1.getDeliveredDate(), DATE_TIME_FORMATTER);
--                        LocalDateTime date2 = LocalDateTime.parse(o2.getDeliveredDate(), DATE_TIME_FORMATTER);
--                        return date2.compareTo(date1); // Newest first (descending)
--                    } catch (Exception e) {
--                        System.err.println("Error parsing deliveredDate: " + e.getMessage());
--                        return 0;
--                    }
--                });
--            } else {
--                deliveredOrders = new ArrayList<>();
--            }
--
--            // Set attributes for userInfo.jsp
--            request.setAttribute("selectedUser", selectedUser);
--            request.setAttribute("activeOrders", activeOrders);
--            request.setAttribute("deliveredOrders", deliveredOrders);
--
--            // Forward to userInfo.jsp
--            System.out.println("UserAdminServlet - Forwarding to /adminPages/userInfo.jsp for userNumber: " + userNumber);
--            request.getRequestDispatcher("/adminPages/userInfo.jsp").forward(request, response);
--        } else {
--            doDefault(request, response);
--        }
--    }
--
--    private void doDefault(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        System.out.println("UserAdminServlet - Attempting to read users from: " + USERS_FILE);
--
--        // Check if the file exists
--        File usersFile = new File(USERS_FILE);
--        System.out.println("UserAdminServlet - Does users.txt exist? " + usersFile.exists());
--        System.out.println("UserAdminServlet - Is users.txt readable? " + usersFile.canRead());
--        System.out.println("UserAdminServlet - Users file absolute path: " + usersFile.getAbsolutePath());
--
--        // Read users from users.txt
--        List<User> users = new ArrayList<>();
--        try {
--            users = FileUtil.readUsers(USERS_FILE);
--            if (users == null) {
--                System.out.println("UserAdminServlet - FileUtil.readUsers returned null. Using empty list.");
--                users = new ArrayList<>();
--            } else {
--                System.out.println("UserAdminServlet - Loaded " + users.size() + " users from users.txt");
--                for (User user : users) {
--                    System.out.println("UserAdminServlet - User: " + user.getUserNumber() + ", Email: " + user.getEmail() + ", Full Name: " + user.getFullName());
--                }
--            }
--        } catch (Exception e) {
--            System.err.println("UserAdminServlet - Unexpected error reading users.txt: " + e.getMessage());
--            e.printStackTrace();
--            request.setAttribute("errorMessage", "Failed to load users due to an unexpected error: " + e.getMessage());
--        }
--
--        // Set users as request attribute
--        request.setAttribute("users", users);
--
--        // Forward to userDashboard.jsp
--        System.out.println("UserAdminServlet - Forwarding to /adminPages/userDashboard.jsp");
--        request.getRequestDispatcher("/adminPages/userDashboard.jsp").forward(request, response);
--    }
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        String action = request.getParameter("action");
--        if ("delete".equals(action)) {
--            String userNumber = request.getParameter("userNumber");
--            System.out.println("UserAdminServlet - Delete action requested for userNumber: " + userNumber);
--            if (userNumber != null && !userNumber.trim().isEmpty()) {
--                synchronized (this) {
--                    List<User> users = FileUtil.readUsers(USERS_FILE);
--                    if (users != null) {
--                        users.removeIf(user -> user.getUserNumber().equals(userNumber));
--                        FileUtil.writeUsers(USERS_FILE, users);
--                        System.out.println("UserAdminServlet - Deleted user with userNumber: " + userNumber);
--                    } else {
--                        System.out.println("UserAdminServlet - Failed to read users for deletion.");
--                    }
--                }
--            }
--            response.sendRedirect(request.getContextPath() + "/UserAdminServlet");
--        } else {
--            doGet(request, response);
--        }
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/data/admins.txt
-===================================================================
-diff --git a/src/main/webapp/data/admins.txt b/src/main/webapp/data/admins.txt
-deleted file mode 100644
---- a/src/main/webapp/data/admins.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,27 +0,0 @@
----- Admin Start: AD181627987901 ---
--adminNumber=AD181627987901
--email=admin1@gmail.admin
--password=admin123
--role=order
----- Admin End ---
--
----- Admin Start: AD181627987902 ---
--adminNumber=AD181627987902
--email=admin2@gmail.admin
--password=admin456
--role=stock
----- Admin End ---
--
----- Admin Start: AD181627987903 ---
--adminNumber=AD181627987903
--email=admin3@gmail.admin
--password=admin789
--role=super
----- Admin End ---
--
----- Admin Start: AD181627987904 ---
--adminNumber=AD181627987904
--email=admin4@gmail.admin
--password=admin012
--role=product
----- Admin End ---
-\ No newline at end of file
-Index: src/main/webapp/js/productDashboard.js
-===================================================================
-diff --git a/src/main/webapp/js/productDashboard.js b/src/main/webapp/js/productDashboard.js
-deleted file mode 100644
---- a/src/main/webapp/js/productDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,42 +0,0 @@
--// Search products by product ID
--function searchProducts() {
--    let input = document.getElementById("product-search").value.toLowerCase();
--    let productRows = document.getElementsByClassName("product-row");
--
--    for (let i = 0; i < productRows.length; i++) {
--        let productId = productRows[i].getAttribute("data-product-id").toLowerCase();
--        if (productId.includes(input)) {
--            productRows[i].style.display = "flex";
--        } else {
--            productRows[i].style.display = "none";
--        }
--    }
--}
--
--// Preview image when the image link is updated
--function previewImage() {
--    let imageLink = document.getElementById("productImageLink").value;
--    let imageElement = document.getElementById("product-image");
--    let noImageText = document.getElementById("no-image-text");
--
--    if (imageLink && imageLink.trim() !== "") {
--        imageElement.src = imageLink;
--        imageElement.style.display = "block";
--        if (noImageText) {
--            noImageText.style.display = "none";
--        }
--    } else {
--        imageElement.src = "";
--        imageElement.style.display = "none";
--        if (noImageText) {
--            noImageText.style.display = "block";
--        }
--    }
--}
--
--// Confirm deletion of a product
--function confirmDelete(productID) {
--    if (confirm("Are you sure you want to delete this product?")) {
--        window.location.href = "/OnlineGroceryOrderSystem/ProductAdminServlet?action=delete&productID=" + productID;
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/orderCheck.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/orderCheck.jsp b/target/OnlineGroceryOrderSystem/adminPages/orderCheck.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/orderCheck.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,157 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <%
--        String userNumber = request.getParameter("userNumber");
--        String source = request.getParameter("source");
--        String backLink = userNumber != null ?
--                "/UserAdminServlet?action=info&userNumber=" + userNumber + "&tab=" + ("active".equalsIgnoreCase(source) ? "Active" : "Delivered") :
--                "/UserAdminServlet";
--    %>
--    <a href="${pageContext.request.contextPath}<%= backLink %>" class="back-link"><i class="fas fa-arrow-left"></i></a>
--    <a class="logo"><i class="fa-solid fa-basket-shopping"></i> Order Details - Admin</a>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="activity-section">
--            <div class="section-header">
--                <%
--                    // File paths
--                    String deliveredOrdersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--                    String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--                    String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--                    // Get the orderNumber and source from the request
--                    String orderNumber = request.getParameter("orderNumber");
--                    source = request.getParameter("source");
--                    if (orderNumber == null || orderNumber.trim().isEmpty()) {
--                %>
--                <p class="error-message">Error: Invalid order number.</p>
--                <%
--                } else {
--                    // Read the order based on source
--                    List<Order> orders = "delivered".equalsIgnoreCase(source) ?
--                            FileUtil.readAllDeliveredOrders(deliveredOrdersFile) :
--                            FileUtil.readAllOrders(ordersFile);
--                    Order order = null;
--                    for (Order o : orders) {
--                        if (o.getOrderNumber().equals(orderNumber)) {
--                            order = o;
--                            break;
--                        }
--                    }
--
--                    if (order == null) {
--                %>
--                <p class="error-message">Error: Order not found.</p>
--                <%
--                } else {
--                    // Determine the title based on deliveryStatus
--                    String sectionTitle = "Delivered Products";
--                    if ("delivered".equalsIgnoreCase(source)) {
--                        sectionTitle = "Delivered Products";
--                    } else if ("active".equalsIgnoreCase(source)) {
--                        sectionTitle = "Active Order Products";
--                    }
--                    if ("Cancelled".equalsIgnoreCase(order.getDeliveryStatus())) {
--                        sectionTitle = "Canceled Products";
--                    }
--                %>
--                <h2><%= sectionTitle %></h2>
--                <%
--                        }
--                    }
--                %>
--            </div>
--            <div class="activity-list">
--                <%
--                    if (orderNumber != null && !orderNumber.trim().isEmpty()) {
--                        List<Order> orders = "delivered".equalsIgnoreCase(source) ?
--                                FileUtil.readAllDeliveredOrders(deliveredOrdersFile) :
--                                FileUtil.readAllOrders(ordersFile);
--                        Order order = null;
--                        for (Order o : orders) {
--                            if (o.getOrderNumber().equals(orderNumber)) {
--                                order = o;
--                                break;
--                            }
--                        }
--
--                        if (order != null) {
--                            // Read items from items.txt to get product details
--                            List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                            if (items == null) {
--                                items = new ArrayList<>();
--                            }
--
--                            // Calculate total quantity and total price
--                            int totalQuantity = 0;
--                            double totalPrice = order.getTotalPrice();
--                            List<String[]> products = order.getProducts();
--
--                            // Display each product in the order
--                            for (String[] product : products) {
--                                String productID = product[0];
--                                int quantity = Integer.parseInt(product[1]);
--                                totalQuantity += quantity;
--
--                                // Find the product in items.txt to get its details
--                                GroceryItem item = null;
--                                for (GroceryItem groceryItem : items) {
--                                    if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                                        item = groceryItem;
--                                        break;
--                                    }
--                                }
--
--                                if (item != null) {
--                                    double itemTotalPrice = item.getProductPrice() * quantity;
--                %>
--                <div class="activity-item">
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="activity-item-img">
--                    <p>
--                        <%= item.getProductName() %> - RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %>
--                        (Total: RS. <%= String.format("%.2f", itemTotalPrice) %>)
--                    </p>
--                    <span class="timestamp">
--                            <%= "delivered".equalsIgnoreCase(source) ? (order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A") : order.getConfirmationDate() %>
--                        </span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--                <div class="total-info">
--                    <span>Total Quantity: <%= totalQuantity %></span>
--                    <span>Total Price: RS. <%= String.format("%.2f", totalPrice) %></span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--            </div>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/cartAndOrders/checkOut.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/cartAndOrders/checkOut.jsp b/target/OnlineGroceryOrderSystem/cartAndOrders/checkOut.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/cartAndOrders/checkOut.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,127 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.User" %>
--<!DOCTYPE html>
--<html>
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>Checkout - Grocery</title>
--  <base href="${pageContext.request.contextPath}/">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/checkOut.css">
--  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--  <nav class="navbar">
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce">Produce</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Proteins">Proteins</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Dairy">Dairy</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Bakery">Bakery</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Pantry">Pantry</a>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Snacks">Snacks</a>
--    <a href="${pageContext.request.contextPath}/cartAndOrders/checkOut.jsp">Checkout</a>
--  </nav>
--  <div class="search-container">
--    <form class="search-bar" id="searchForm">
--      <input type="text" name="name" id="name" placeholder="Search groceries">
--      <button type="submit" class="search-btn">Search</button>
--      <span class="dropdown-toggle" id="dropdown-toggle">▼</span>
--    </form>
--    <div class="dropdown-menu" id="dropdown-menu">
--      <div class="filter-item">
--        <label for="category">Product Category</label>
--        <select name="category" id="category">
--          <option value="">All</option>
--          <option value="produce">Produce</option>
--          <option value="proteins">Proteins</option>
--          <option value="dairy">Dairy</option>
--          <option value="bakery">Bakery</option>
--          <option value="pantry">Pantry</option>
--          <option value="snacks">Snacks</option>
--        </select>
--      </div>
--      <div class="filter-item">
--        <label for="minPrice">Min Price</label>
--        <input type="number" name="minPrice" id="minPrice" min="0" step="0.01" placeholder="0" value="0">
--      </div>
--      <div class="filter-item">
--        <label for="maxPrice">Max Price</label>
--        <input type="number" name="maxPrice" id="maxPrice" min="0" step="0.01" placeholder="100" value="100">
--      </div>
--    </div>
--  </div>
--  <!--<div class="cart-icon" id="cart-icon">
--    <i class="ri-shopping-cart-line"></i>
--    <span class="cart-item-count">0</span>
--  </div>-->
--</header>
--
--<div class="cart">
--  <h2 class="cart-title">Your Cart</h2>
--  <div class="cart-content"></div>
--  <div class="total">
--    <div class="total-price">Total RS. 0</div>
--    <button class="btn-buy">Buy Now</button>
--    <i class="ri-close-line" id="cart-close"></i>
--  </div>
--</div>
--
--<section class="checkout-container">
--  <div class="cart-section">
--    <h2 class="section-title">List Product In Cart</h2>
--    <div class="cart-items" id="cart-items"></div>
--    <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="keep-shopping">Keep shopping</a>
--  </div>
--
--  <div class="checkout-form">
--    <h2 class="section-title">CHECKOUT</h2>
--    <%
--      String loggedInUserFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
--      User loggedInUser = FileUtil.readLoggedInUser(loggedInUserFile);
--      String fullName = "";
--      String phoneNumber = "";
--      String address = "";
--      if (loggedInUser != null) {
--        fullName = loggedInUser.getFullName() != null ? loggedInUser.getFullName() : "";
--        phoneNumber = loggedInUser.getPhoneNumber() != null ? loggedInUser.getPhoneNumber() : "";
--        address = loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "";
--      }
--    %>
--    <form action="${pageContext.request.contextPath}/OrderServlet" method="post" id="checkout-form">
--      <input type="text" name="fullName" placeholder="Full Name" value="<%= fullName %>" required>
--      <input type="text" name="phoneNumber" placeholder="Phone Number" value="<%= phoneNumber %>" required>
--      <input type="text" name="address" placeholder="Address" value="<%= address %>" required>
--      <select name="deliveryMethod" id="deliveryMethod" required>
--        <option value="">Select Delivery Method</option>
--        <option value="store pickup">Store Pickup</option>
--        <option value="same-day">Same-Day Delivery</option>
--        <option value="scheduled">Scheduled Delivery</option>
--      </select>
--      <input type="date" name="deliveryDate" id="deliveryDate" style="display: none;" min="<%= java.time.LocalDate.now().toString() %>">
--      <select name="paymentMethod" id="paymentMethod" required>
--        <option value="">Select Payment Method</option>
--        <option value="online card">Online Card Payment</option>
--        <option value="cash on delivery">Cash on Delivery</option>
--      </select>
--      <div class="total-info" id="total-info">
--        <span>Total Quantity: <span id="total-quantity">0</span></span>
--        <span>Total Price: RS. <span id="total-price">0.00</span></span>
--      </div>
--      <button type="submit" class="checkout-btn">CHECKOUT</button>
--    </form>
--  </div>
--</section>
--
--<div class="search-results" id="search-results"></div>
--
--<script src="${pageContext.request.contextPath}/js/cart.js"></script>
--<script src="${pageContext.request.contextPath}/js/checkOut.js"></script>
--</body>
--</html> <!-- checkOut branch -->
-\ No newline at end of file
-Index: src/main/webapp/adminPages/productDashboardInfo.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/productDashboardInfo.jsp b/src/main/webapp/adminPages/productDashboardInfo.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/productDashboardInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,308 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.GroceryItem" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Product Details</title>
--  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
--  <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/productDashboard.css?v=<%= System.currentTimeMillis() %>">
--  <script src="${pageContext.request.contextPath}/js/productDashboard.js"></script>
--  <style>
--    .product-info-section {
--      display: flex;
--      flex-direction: column;
--      align-items: center;
--      padding: 20px;
--      max-width: 600px;
--      margin: 0 auto;
--    }
--    .product-image-preview {
--      margin-bottom: 20px;
--      text-align: center;
--    }
--    .product-image-preview img {
--      max-width: 200px;
--      max-height: 200px;
--      border-radius: 8px;
--    }
--    .product-form {
--      width: 100%;
--      display: flex;
--      flex-direction: column;
--      gap: 15px;
--    }
--    .form-group {
--      display: flex;
--      align-items: center;
--      gap: 10px;
--    }
--    .form-group label {
--      flex: 0 0 120px;
--      font-weight: 500;
--    }
--    .form-group input,
--    .form-group select,
--    .form-group textarea,
--    .form-group span {
--      flex: 1;
--      padding: 8px;
--      border: 1px solid #ccc;
--      border-radius: 4px;
--      font-size: 14px;
--    }
--    .form-group textarea {
--      resize: vertical;
--      min-height: 80px;
--    }
--    .form-actions {
--      display: flex;
--      justify-content: center;
--      gap: 10px;
--      margin-top: 20px;
--    }
--    .save-btn, .delete-btn, .confirm-btn, .cancel-btn {
--      padding: 10px 20px;
--      border: none;
--      border-radius: 4px;
--      cursor: pointer;
--      font-size: 14px;
--    }
--    .save-btn {
--      background-color: #28a745;
--      color: white;
--    }
--    .delete-btn {
--      background-color: #dc3545;
--      color: white;
--    }
--    .confirm-btn {
--      background-color: #dc3545;
--      color: white;
--    }
--    .cancel-btn {
--      background-color: #6c757d;
--      color: white;
--    }
--
--    /* Modal Styles */
--    .modal {
--      display: none;
--      position: fixed;
--      z-index: 1000;
--      left: 0;
--      top: 0;
--      width: 100%;
--      height: 100%;
--      background-color: rgba(0, 0, 0, 0.5);
--      justify-content: center;
--      align-items: center;
--    }
--    .modal-content {
--      width: 500px;
--      background: rgba(255, 255, 255, 0.9);
--      border-radius: 10px;
--      overflow: hidden;
--      text-align: center;
--      font-family: 'Source Sans Pro', sans-serif;
--      animation: fadeIn 1s ease-in-out;
--    }
--    .modal-upper {
--      padding: 2em;
--      background-color: #dc3545;
--      background: rgba(255, 0, 0, 0.3);
--      color: #fff;
--      border-top-right-radius: 8px;
--      border-top-left-radius: 8px;
--    }
--    .modal-lower {
--      padding: 2em;
--      background: #fff;
--      border-bottom-right-radius: 8px;
--      border-bottom-left-radius: 8px;
--    }
--    .modal-status {
--      font-weight: lighter;
--      text-transform: uppercase;
--      letter-spacing: 2px;
--      font-size: 1.2em;
--      margin-top: -0.2em;
--      margin-bottom: 10px;
--      color: #721c24;
--    }
--    .modal-message {
--      margin-top: -0.5em;
--      color: #757575;
--      letter-spacing: 1px;
--      font-size: 1.1em;
--      line-height: 1.5;
--    }
--    .modal-actions {
--      display: flex;
--      justify-content: center;
--      gap: 10px;
--      margin-top: 1.5em;
--    }
--    .modal-actions a, .modal-actions button {
--      text-decoration: none;
--      padding: 0.8em 3em;
--      border-radius: 25px;
--      transition: all 0.4s ease;
--      font-size: 1.1em;
--      text-transform: uppercase;
--    }
--    .confirm-btn:hover, .cancel-btn:hover {
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);
--    }
--  </style>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if the user has the correct role (Super Admin or Product Admin)
--  String adminRole = (String) session.getAttribute("adminRole");
--  if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "product".equalsIgnoreCase(adminRole))) {
--    response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--    return;
--  }
--
--  // Get the product and action from request attributes
--  GroceryItem product = (GroceryItem) request.getAttribute("product");
--  String action = request.getParameter("action");
--  boolean isEdit = "info".equals(action) && product != null;
--  String productID = isEdit ? String.valueOf(product.getProductID()) : (String) request.getAttribute("nextProductID");
--%>
--<header>
--  <div class="nav-links">
--    <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--  </div>
--  <div class="logo">
--    <i class="fa-solid fa-folder-open"></i> <%= isEdit ? "Edit Product" : "Add New Product" %>
--  </div>
--</header>
--
--<div class="product-info-section">
--  <div class="product-image-preview">
--    <% if (isEdit && product.getProductImageLink() != null && !product.getProductImageLink().isEmpty()) { %>
--    <img id="product-image" src="<%= product.getProductImageLink() %>" alt="Product Image">
--    <% } else { %>
--    <img id="product-image" src="" alt="Product Image" style="display: none;">
--    <p id="no-image-text">No Image</p>
--    <% } %>
--  </div>
--
--  <form action="${pageContext.request.contextPath}/ProductAdminServlet" method="post" class="product-form">
--    <input type="hidden" name="action" value="<%= isEdit ? "update" : "add" %>">
--    <input type="hidden" name="productID" value="<%= productID %>">
--
--    <div class="form-group">
--      <label>Product Number:</label>
--      <span><%= productID %></span>
--    </div>
--
--    <div class="form-group">
--      <label for="productCategory">Category:</label>
--      <select id="productCategory" name="productCategory" required>
--        <option value="Produce" <%= isEdit && "Produce".equals(product.getProductCategory()) ? "selected" : "" %>>Produce</option>
--        <option value="Proteins" <%= isEdit && "Proteins".equals(product.getProductCategory()) ? "selected" : "" %>>Proteins</option>
--        <option value="Dairy" <%= isEdit && "Dairy".equals(product.getProductCategory()) ? "selected" : "" %>>Dairy</option>
--        <option value="Bakery" <%= isEdit && "Bakery".equals(product.getProductCategory()) ? "selected" : "" %>>Bakery</option>
--        <option value="Pantry" <%= isEdit && "Pantry".equals(product.getProductCategory()) ? "selected" : "" %>>Pantry</option>
--        <option value="Snacks" <%= isEdit && "Snacks".equals(product.getProductCategory()) ? "selected" : "" %>>Snacks</option>
--      </select>
--    </div>
--
--    <div class="form-group">
--      <label for="productName">Name:</label>
--      <input type="text" id="productName" name="productName" value="<%= isEdit ? product.getProductName() : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="productPrice">Price:</label>
--      <input type="number" step="0.01" id="productPrice" name="productPrice" value="<%= isEdit ? String.format("%.2f", product.getProductPrice()) : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="productImageLink">Image Link:</label>
--      <input type="url" id="productImageLink" name="productImageLink" value="<%= isEdit ? product.getProductImageLink() : "" %>" oninput="previewImage()" required>
--    </div>
--
--    <div class="form-group">
--      <label for="quantity">Stock Count:</label>
--      <input type="number" id="quantity" name="quantity" value="<%= isEdit ? product.getQuantity() : "" %>" required>
--    </div>
--
--    <div class="form-group">
--      <label for="description">Description:</label>
--      <textarea id="description" name="description" required><%= isEdit ? product.getDescription() : "" %></textarea>
--    </div>
--
--    <div class="form-actions">
--      <button type="submit" class="save-btn">Save</button>
--      <% if (isEdit) { %>
--      <button type="button" class="delete-btn" onclick="showDeleteModal('<%= productID %>')">Delete</button>
--      <% } %>
--    </div>
--  </form>
--</div>
--
--<!-- Delete Confirmation Modal -->
--<div id="deleteModal" class="modal">
--  <div class="modal-content">
--    <div class="modal-upper">
--      <h3 class="modal-status">Confirm Deletion</h3>
--    </div>
--    <div class="modal-lower">
--      <p class="modal-message">
--        Are you sure you want to delete this product? This action cannot be undone.
--      </p>
--      <div class="modal-actions">
--        <a id="confirmDeleteLink" href="#" class="confirm-btn">Confirm</a>
--        <button type="button" class="cancel-btn" onclick="closeDeleteModal()">Cancel</button>
--      </div>
--    </div>
--  </div>
--</div>
--
--<script>
--  function previewImage() {
--    const imageLink = document.getElementById("productImageLink").value;
--    const imageElement = document.getElementById("product-image");
--    const noImageText = document.getElementById("no-image-text");
--
--    if (imageLink) {
--      imageElement.src = imageLink;
--      imageElement.style.display = "block";
--      noImageText.style.display = "none";
--    } else {
--      imageElement.style.display = "none";
--      noImageText.style.display = "block";
--    }
--  }
--
--  function showDeleteModal(productID) {
--    const modal = document.getElementById("deleteModal");
--    const confirmLink = document.getElementById("confirmDeleteLink");
--    confirmLink.href = "${pageContext.request.contextPath}/ProductAdminServlet?action=delete&productID=" + productID;
--    modal.style.display = "flex";
--  }
--
--  function closeDeleteModal() {
--    const modal = document.getElementById("deleteModal");
--    modal.style.display = "none";
--  }
--</script>
--
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/js/userProfile.js
-===================================================================
-diff --git a/src/main/webapp/js/userProfile.js b/src/main/webapp/js/userProfile.js
-deleted file mode 100644
---- a/src/main/webapp/js/userProfile.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,58 +0,0 @@
--// Toggle the edit form visibility
--const editBtn = document.getElementById('edit-btn');
--const profileFormContainer = document.getElementById('profile-form-container');
--const userInfo = document.querySelector('.user-info');
--
--if (editBtn) {
--    editBtn.addEventListener('click', () => {
--        if (profileFormContainer.style.display === 'none' || profileFormContainer.style.display === '') {
--            profileFormContainer.style.display = 'block';
--            userInfo.style.display = 'none'; // Hide the user info display
--            editBtn.textContent = 'Cancel'; // Change button text to "Cancel"
--            editBtn.innerHTML = '<i class="fas fa-times"></i> Cancel'; // Update icon
--        } else {
--            profileFormContainer.style.display = 'none';
--            userInfo.style.display = 'block'; // Show the user info display
--            editBtn.textContent = 'Edit Profile'; // Change button text back
--            editBtn.innerHTML = '<i class="fas fa-edit"></i> Edit Profile'; // Update icon
--        }
--    });
--}
--
--// Delete Confirmation Modal Logic
--const deleteBtn = document.getElementById('delete-btn');
--const deleteModal = document.getElementById('deleteModal');
--const confirmDelete = document.getElementById('confirmDelete');
--const cancelDelete = document.getElementById('cancelDelete');
--
--if (deleteBtn) {
--    deleteBtn.addEventListener('click', () => {
--        deleteModal.style.display = 'flex'; // Show the modal
--    });
--}
--
--if (cancelDelete) {
--    cancelDelete.addEventListener('click', () => {
--        deleteModal.style.display = 'none'; // Hide the modal
--    });
--}
--
--if (confirmDelete) {
--    confirmDelete.addEventListener('click', () => {
--        // Programmatically submit the form with action=delete
--        const form = document.getElementById('profile-form');
--        const actionInput = document.createElement('input');
--        actionInput.type = 'hidden';
--        actionInput.name = 'action';
--        actionInput.value = 'delete';
--        form.appendChild(actionInput);
--        form.submit();
--    });
--}
--
--// Close modal if user clicks outside of it
--window.addEventListener('click', (event) => {
--    if (event.target === deleteModal) {
--        deleteModal.style.display = 'none';
--    }
--});
-\ No newline at end of file
-Index: src/main/java/servlet/AdminServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/AdminServlet.java b/src/main/java/servlet/AdminServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/AdminServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,202 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.Admin;
--
--import java.io.IOException;
--import java.time.LocalDate;
--import java.time.format.DateTimeFormatter;
--import java.util.*;
--
--public class AdminServlet extends HttpServlet {
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String DELIVERED_ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--    private static final String ADMINS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/admins.txt";
--
--    @Override
--    public void init() throws ServletException {
--        // Log the file paths for debugging
--        System.out.println("AdminServlet initialized with ORDERS_FILE path: " + ORDERS_FILE);
--        System.out.println("AdminServlet initialized with DELIVERED_ORDERS_FILE path: " + DELIVERED_ORDERS_FILE);
--        System.out.println("AdminServlet initialized with ADMINS_FILE path: " + ADMINS_FILE);
--    }
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        System.out.println("AdminServlet - doGet invoked with request URI: " + request.getRequestURI());
--        System.out.println("AdminServlet - Context Path: " + request.getContextPath());
--        System.out.println("AdminServlet - Servlet Path: " + request.getServletPath());
--
--        HttpSession session = request.getSession(false);
--        if (session == null || session.getAttribute("adminEmail") == null) {
--            System.out.println("AdminServlet - No admin session found. Redirecting to admin login page.");
--            response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=notLoggedIn");
--            return;
--        }
--
--        // Fetch admin details including role
--        String adminEmail = (String) session.getAttribute("adminEmail");
--        Admin admin = FileUtil.readAdminByEmail(adminEmail, ADMINS_FILE);
--        if (admin != null) {
--            session.setAttribute("adminNumber", admin.getAdminNumber());
--            session.setAttribute("adminRole", admin.getRole());
--            System.out.println("AdminServlet - Admin details fetched: " + admin);
--        } else {
--            System.out.println("AdminServlet - Admin not found for email: " + adminEmail);
--            session.setAttribute("adminRole", "unknown");
--        }
--
--        // Read orders from orders.txt
--        List<FileUtil.Order> orders = FileUtil.readAllOrders(ORDERS_FILE);
--        int totalOrders = 0;
--        if (orders != null) {
--            for (FileUtil.Order order : orders) {
--                String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : null;
--                if (orderStatus != null && !orderStatus.equals("cancelled")) {
--                    totalOrders++;
--                    System.out.println("AdminServlet - Counting order in orders.txt as Total Order: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                } else {
--                    System.out.println("AdminServlet - Order in orders.txt not counted as Total Order: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                }
--            }
--        } else {
--            System.out.println("AdminServlet - No orders found in orders.txt");
--        }
--
--        // Read delivered orders from deliveredOrders.txt
--        List<FileUtil.Order> deliveredOrders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--        int deliveredCount = 0;
--        if (deliveredOrders != null) {
--            for (FileUtil.Order order : deliveredOrders) {
--                String deliveryStatus = order.getDeliveryStatus() != null ? order.getDeliveryStatus().trim().toLowerCase() : null;
--                if ("delivered".equalsIgnoreCase(deliveryStatus)) {
--                    deliveredCount++;
--                    System.out.println("AdminServlet - Counting order in deliveredOrders.txt as Delivered: " + order.getOrderNumber() + " with deliveryStatus: " + deliveryStatus);
--                } else {
--                    System.out.println("AdminServlet - Order in deliveredOrders.txt not counted as Delivered: " + order.getOrderNumber() + " with deliveryStatus: " + deliveryStatus);
--                }
--            }
--        } else {
--            System.out.println("AdminServlet - No orders found in deliveredOrders.txt");
--        }
--
--        // Count cancelled orders from both orders.txt and deliveredOrders.txt, avoiding double-counting
--        Set<String> cancelledOrderNumbers = new HashSet<>();
--        int cancelledOrders = 0;
--
--        // Check orders.txt
--        if (orders != null) {
--            for (FileUtil.Order order : orders) {
--                String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : null;
--                if (orderStatus != null && orderStatus.equals("cancelled")) {
--                    cancelledOrderNumbers.add(order.getOrderNumber());
--                    System.out.println("AdminServlet - Found cancelled order in orders.txt: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                } else {
--                    System.out.println("AdminServlet - Order in orders.txt not cancelled: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                }
--            }
--        }
--
--        // Check deliveredOrders.txt
--        if (deliveredOrders != null) {
--            for (FileUtil.Order order : deliveredOrders) {
--                String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : null;
--                if (orderStatus != null && orderStatus.equals("cancelled")) {
--                    cancelledOrderNumbers.add(order.getOrderNumber());
--                    System.out.println("AdminServlet - Found cancelled order in deliveredOrders.txt: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                } else {
--                    System.out.println("AdminServlet - Order in deliveredOrders.txt not cancelled: " + order.getOrderNumber() + " with orderStatus: " + orderStatus);
--                }
--            }
--        }
--
--        cancelledOrders = cancelledOrderNumbers.size();
--        System.out.println("AdminServlet - Unique Cancelled Orders (orderStatus=cancelled in both files): " + cancelledOrders);
--
--        // Group delivered and cancelled orders by month for the chart
--        Map<String, Integer> deliveredByMonth = new TreeMap<>(); // TreeMap to sort by month
--        Map<String, Integer> cancelledByMonth = new TreeMap<>();
--        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
--        DateTimeFormatter monthFormatter = DateTimeFormatter.ofPattern("MMM yyyy");
--
--        // Process delivered orders
--        if (deliveredOrders != null) {
--            for (FileUtil.Order order : deliveredOrders) {
--                String deliveryStatus = order.getDeliveryStatus() != null ? order.getDeliveryStatus().trim().toLowerCase() : null;
--                String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : null;
--
--                // Use deliveredDate for delivered orders, confirmationDate for cancelled orders
--                String dateStr = "delivered".equalsIgnoreCase(deliveryStatus) ? order.getDeliveredDate() : order.getConfirmationDate();
--
--                if (dateStr != null && !dateStr.isEmpty()) {
--                    try {
--                        LocalDate date = LocalDate.parse(dateStr, formatter);
--                        String monthKey = date.format(monthFormatter); // e.g., "Jan 2025"
--
--                        if ("delivered".equalsIgnoreCase(deliveryStatus)) {
--                            deliveredByMonth.put(monthKey, deliveredByMonth.getOrDefault(monthKey, 0) + 1);
--                        } else if ("cancelled".equalsIgnoreCase(orderStatus)) {
--                            cancelledByMonth.put(monthKey, cancelledByMonth.getOrDefault(monthKey, 0) + 1);
--                        }
--                    } catch (Exception e) {
--                        System.out.println("AdminServlet - Error parsing date: " + dateStr + ", error: " + e.getMessage());
--                    }
--                }
--            }
--        }
--
--        // Process cancelled orders from orders.txt (if not already counted in deliveredOrders.txt)
--        if (orders != null) {
--            for (FileUtil.Order order : orders) {
--                String orderStatus = order.getOrderStatus() != null ? order.getOrderStatus().trim().toLowerCase() : null;
--                String dateStr = order.getConfirmationDate();
--
--                if (orderStatus != null && orderStatus.equals("cancelled") && !cancelledOrderNumbers.contains(order.getOrderNumber())) {
--                    if (dateStr != null && !dateStr.isEmpty()) {
--                        try {
--                            LocalDate date = LocalDate.parse(dateStr, formatter);
--                            String monthKey = date.format(monthFormatter); // e.g., "Jan 2025"
--                            cancelledByMonth.put(monthKey, cancelledByMonth.getOrDefault(monthKey, 0) + 1);
--                        } catch (Exception e) {
--                            System.out.println("AdminServlet - Error parsing confirmationDate: " + dateStr + ", error: " + e.getMessage());
--                        }
--                    }
--                }
--            }
--        }
--
--        // Prepare lists for the chart
--        List<String> chartLabels = new ArrayList<>(deliveredByMonth.keySet());
--        chartLabels.addAll(cancelledByMonth.keySet());
--        chartLabels = new ArrayList<>(new TreeSet<>(chartLabels)); // Remove duplicates and sort
--
--        List<Integer> deliveredData = new ArrayList<>();
--        List<Integer> cancelledData = new ArrayList<>();
--        for (String month : chartLabels) {
--            deliveredData.add(deliveredByMonth.getOrDefault(month, 0));
--            cancelledData.add(cancelledByMonth.getOrDefault(month, 0));
--        }
--
--        // Log the chart data for debugging
--        System.out.println("AdminServlet - Chart Labels: " + chartLabels);
--        System.out.println("AdminServlet - Delivered Data: " + deliveredData);
--        System.out.println("AdminServlet - Cancelled Data: " + cancelledData);
--
--        // Set counts and chart data as request attributes
--        request.setAttribute("totalOrders", totalOrders);
--        request.setAttribute("deliveredOrders", deliveredCount);
--        request.setAttribute("cancelledOrders", cancelledOrders);
--        request.setAttribute("chartLabels", chartLabels);
--        request.setAttribute("deliveredData", deliveredData);
--        request.setAttribute("cancelledData", cancelledData);
--
--        // Forward to adminPage.jsp
--        System.out.println("AdminServlet - Forwarding to /adminPages/adminPage.jsp");
--        request.getRequestDispatcher("/adminPages/adminPage.jsp").forward(request, response);
--    }
--}
-\ No newline at end of file
-Index: src/main/java/servlet/OrderServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/OrderServlet.java b/src/main/java/servlet/OrderServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/OrderServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,172 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import model.FileUtil;
--import model.GroceryItem;
--import model.User;
--
--import java.io.BufferedWriter;
--import java.io.File;
--import java.io.FileWriter;
--import java.io.IOException;
--import java.time.LocalDate;
--import java.time.LocalDateTime;
--import java.time.format.DateTimeFormatter;
--import java.util.ArrayList;
--import java.util.Random;
--
--public class OrderServlet extends HttpServlet {
--    private static final String ITEMS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--    private static final String CART_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/cart.txt";
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String LOGGED_IN_USER_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
--
--    @Override
--    public void init() throws ServletException {
--        File ordersDir = new File("/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data");
--        if (!ordersDir.exists()) {
--            ordersDir.mkdirs();
--            System.out.println("Created directory: " + ordersDir.getAbsolutePath());
--        }
--        System.out.println("ITEMS_FILE path: " + ITEMS_FILE);
--        System.out.println("CART_FILE path: " + CART_FILE);
--        System.out.println("ORDERS_FILE path: " + ORDERS_FILE);
--        System.out.println("LOGGED_IN_USER_FILE path: " + LOGGED_IN_USER_FILE);
--    }
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Read the logged-in user from loggedInUser.txt
--        User loggedInUser = FileUtil.readLoggedInUser(LOGGED_IN_USER_FILE);
--        if (loggedInUser == null) {
--            System.out.println("No logged-in user found in " + LOGGED_IN_USER_FILE);
--            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "No logged-in user found");
--            return;
--        }
--        System.out.println("Logged-in user: " + loggedInUser);
--
--        ArrayList<GroceryItem> cart;
--        synchronized (this) {
--            cart = FileUtil.readItems(CART_FILE);
--            if (cart == null || cart.isEmpty()) {
--                System.out.println("Cart is empty or null in " + CART_FILE);
--                response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Cart is empty");
--                return;
--            }
--            System.out.println("Loaded cart from " + CART_FILE + ": " + cart);
--        }
--
--        // Declare variables at method scope
--        double totalPrice;
--        String orderNumber;
--        String userNumber;
--
--        ArrayList<GroceryItem> items = FileUtil.readItems(ITEMS_FILE);
--
--        synchronized (this) {
--            // Only check if items exist, no stock validation since CartServlet reserved them
--            for (GroceryItem cartItem : cart) {
--                GroceryItem stockItem = items.stream()
--                        .filter(item -> item.getProductID() == cartItem.getProductID())
--                        .findFirst()
--                        .orElse(null);
--                if (stockItem == null) {
--                    response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Item ID " + cartItem.getProductID() + " not found in inventory");
--                    return;
--                }
--            }
--
--            totalPrice = cart.stream().mapToDouble(GroceryItem::getTotalPrice).sum();
--
--            String fullName = request.getParameter("fullName");
--            String phoneNumber = request.getParameter("phoneNumber");
--            String address = request.getParameter("address");
--            String deliveryMethod = request.getParameter("deliveryMethod");
--            String paymentMethod = request.getParameter("paymentMethod");
--
--            if (fullName == null || phoneNumber == null || address == null ||
--                    deliveryMethod == null || paymentMethod == null) {
--                response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Missing required fields");
--                return;
--            }
--
--            do {
--                orderNumber = generateOrderNumber();
--            } while (!FileUtil.isOrderNumberUnique(orderNumber, ORDERS_FILE));
--
--            userNumber = loggedInUser.getUserNumber();
--            if (userNumber == null) {
--                System.err.println("User number is null for logged-in user: " + loggedInUser);
--                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "User number is missing for the logged-in user");
--                return;
--            }
--            System.out.println("User Number: " + userNumber);
--
--            String confirmationDate = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
--            String paymentStatus = "online card".equals(paymentMethod) ? "Paid" : "Pending";
--            String deliveryStatus = "Pending";
--            String orderStatus = "Pending";
--
--            try (BufferedWriter writer = new BufferedWriter(new FileWriter(ORDERS_FILE, true))) {
--                writer.write("--- Order Start: " + orderNumber + " ---\n");
--                writer.write("orderNumber=" + orderNumber + "\n");
--                writer.write("userNumber=" + userNumber + "\n");
--                writer.write("name=" + (fullName != null ? fullName : "") + "\n");
--                writer.write("phoneNum=" + (phoneNumber != null ? phoneNumber : "") + "\n");
--                writer.write("address=" + (address != null ? address : "") + "\n");
--                writer.write("deliveryMethod=" + (deliveryMethod != null ? deliveryMethod : "") + "\n");
--                writer.write("paymentMethod=" + (paymentMethod != null ? paymentMethod : "") + "\n");
--                writer.write("confirmationDate=" + confirmationDate + "\n");
--                writer.write("paymentStatus=" + paymentStatus + "\n");
--                writer.write("deliveryStatus=" + deliveryStatus + "\n");
--                writer.write("orderStatus=" + orderStatus + "\n");
--                writer.write("deliveredDate=\n"); // Add placeholder for deliveredDate
--                writer.write("[products]\n");
--                for (GroceryItem item : cart) {
--                    writer.write("productID=" + item.getProductID() + ", quantity=" + item.getQuantity() + "\n");
--                }
--                writer.write("[total]\n");
--                writer.write("totalPrice=" + String.format("%.2f", totalPrice) + "\n");
--                writer.write("--- Order End ---\n");
--                writer.write("\n");
--                System.out.println("Appended order to " + ORDERS_FILE);
--            } catch (IOException e) {
--                System.err.println("Failed to append order to " + ORDERS_FILE + ": " + e.getMessage());
--                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Failed to save order: " + e.getMessage());
--                return;
--            }
--
--            cart.clear();
--            FileUtil.writeItems(CART_FILE, cart);
--            System.out.println("Cleared cart in " + CART_FILE);
--        }
--
--        // Set request attributes for processCheckOut.jsp
--        request.setAttribute("orderNumber", orderNumber);
--        request.setAttribute("userNumber", userNumber);
--        request.setAttribute("fullName", request.getParameter("fullName"));
--        request.setAttribute("phoneNumber", request.getParameter("phoneNumber"));
--        request.setAttribute("address", request.getParameter("address"));
--        request.setAttribute("deliveryMethod", request.getParameter("deliveryMethod"));
--        request.setAttribute("paymentMethod", request.getParameter("paymentMethod"));
--        request.setAttribute("totalPrice", String.format("%.2f", totalPrice));
--        request.setAttribute("confirmationDate", LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));
--        request.setAttribute("paymentStatus", "online card".equals(request.getParameter("paymentMethod")) ? "Paid" : "Pending");
--        request.setAttribute("deliveryStatus", "Pending");
--        request.setAttribute("orderStatus", "Pending");
--
--        // Debug log to confirm userNumber before forwarding
--        System.out.println("Setting userNumber in request attribute: " + userNumber);
--
--        request.getRequestDispatcher("/cartAndOrders/processCheckOut.jsp").forward(request, response);
--    }
--
--    private String generateOrderNumber() {
--        Random random = new Random();
--        long number = Math.abs(random.nextLong() % 1000000000000L);
--        return "OD" + String.format("%012d", number);
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/cartAndOrders/processCheckOut.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/cartAndOrders/processCheckOut.jsp b/src/main/webapp/cartAndOrders/processCheckOut.jsp
-deleted file mode 100644
---- a/src/main/webapp/cartAndOrders/processCheckOut.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,39 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<html>
--<head>
--    <title>Order Confirmation - Grocery</title>
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/processCheckOut.css">
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<div class="container">
--    <h1>Order Confirmation</h1>
--    <p>Thank you for your order!</p>
--    <div class="order-details">
--        <p><strong>Order Number:</strong> <%= request.getAttribute("orderNumber") %></p>
--        <%-- Debug: Log the userNumber value --%>
--        <% System.out.println("User ID in JSP: " + request.getAttribute("userNumber")); %>
--        <p><strong>User ID:</strong> <%= request.getAttribute("userNumber") != null ? request.getAttribute("userNumber") : "" %></p>
--        <p><strong>Full Name:</strong> <%= request.getAttribute("fullName") %></p>
--        <p><strong>Phone Number:</strong> <%= request.getAttribute("phoneNumber") %></p>
--        <p><strong>Address:</strong> <%= request.getAttribute("address") %></p>
--        <p><strong>Delivery Method:</strong> <%= request.getAttribute("deliveryMethod") %></p>
--        <% String deliveryDate = (String) request.getAttribute("deliveryDate"); %>
--        <% if (deliveryDate != null && !deliveryDate.isEmpty()) { %>
--        <p><strong>Delivery Date:</strong> <%= deliveryDate %></p>
--        <% } %>
--        <p><strong>Payment Method:</strong> <%= request.getAttribute("paymentMethod") %></p>
--        <p><strong>Payment Status:</strong> <%= request.getAttribute("paymentStatus") %></p>
--        <p><strong>Delivery Status:</strong> <%= request.getAttribute("deliveryStatus") %></p>
--        <p><strong>Order Status:</strong> <%= request.getAttribute("orderStatus") %></p>
--        <p><strong>Total Price:</strong> RS. <%= request.getAttribute("totalPrice") %></p>
--    </div>
--    <div class="links">
--        <a href="${pageContext.request.contextPath}/index.jsp" class="btn">Back to Home</a>
--        <a href="${pageContext.request.contextPath}/CartServlet?category=Produce" class="btn">Back to Shopping</a>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/js/orderDashboard.js
-===================================================================
-diff --git a/src/main/webapp/js/orderDashboard.js b/src/main/webapp/js/orderDashboard.js
-deleted file mode 100644
---- a/src/main/webapp/js/orderDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,62 +0,0 @@
--// orderDashboard.js
--
--function showSection(section) {
--    // Hide all sections
--    document.getElementById('active-section').style.display = 'none';
--    document.getElementById('cancelled-section').style.display = 'none';
--    document.getElementById('delivered-section').style.display = 'none';
--
--    // Remove active class from all nav links
--    document.querySelectorAll('.nav-link').forEach(link => {
--        link.classList.remove('active');
--    });
--
--    // Show the selected section and set the active class
--    if (section === 'active') {
--        document.getElementById('active-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'active\')"]').classList.add('active');
--    } else if (section === 'cancelled') {
--        document.getElementById('cancelled-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'cancelled\')"]').classList.add('active');
--    } else if (section === 'delivered') {
--        document.getElementById('delivered-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'delivered\')"]').classList.add('active');
--    }
--}
--
--function searchOrders(section) {
--    const searchInput = document.getElementById(section + '-search').value.toLowerCase();
--    const orderList = document.getElementById(section + '-orders').getElementsByClassName('order-row');
--
--    for (let i = 0; i < orderList.length; i++) {
--        const orderId = orderList[i].getElementsByClassName('order-id')[0].textContent.toLowerCase();
--        if (orderId.includes(searchInput)) {
--            orderList[i].style.display = '';
--        } else {
--            orderList[i].style.display = 'none';
--        }
--    }
--}
--
--function showOrderDetails(orderId, section) {
--    const detailsDiv = document.getElementById('details-' + orderId + '-' + section);
--    if (detailsDiv.style.display === 'none' || detailsDiv.style.display === '') {
--        detailsDiv.style.display = 'block';
--    } else {
--        detailsDiv.style.display = 'none';
--    }
--}
--
--function navigateToTab(tab) {
--    // Update the URL with the new tab parameter and reload the page
--    window.location.href = `${window.location.pathname}?tab=${tab}`;
--}
--
--// Initialize the correct tab on page load based on the URL parameter
--document.addEventListener('DOMContentLoaded', function() {
--    // Get the tab parameter from the URL
--    const urlParams = new URLSearchParams(window.location.search);
--    const tab = urlParams.get('tab') || 'active'; // Default to 'active' if no tab is specified
--    console.log("Initial tab from URL: " + tab);
--    showSection(tab);
--});
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/productDashboard.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/productDashboard.js b/target/OnlineGroceryOrderSystem/js/productDashboard.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/productDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,42 +0,0 @@
--// Search products by product ID
--function searchProducts() {
--    let input = document.getElementById("product-search").value.toLowerCase();
--    let productRows = document.getElementsByClassName("product-row");
--
--    for (let i = 0; i < productRows.length; i++) {
--        let productId = productRows[i].getAttribute("data-product-id").toLowerCase();
--        if (productId.includes(input)) {
--            productRows[i].style.display = "flex";
--        } else {
--            productRows[i].style.display = "none";
--        }
--    }
--}
--
--// Preview image when the image link is updated
--function previewImage() {
--    let imageLink = document.getElementById("productImageLink").value;
--    let imageElement = document.getElementById("product-image");
--    let noImageText = document.getElementById("no-image-text");
--
--    if (imageLink && imageLink.trim() !== "") {
--        imageElement.src = imageLink;
--        imageElement.style.display = "block";
--        if (noImageText) {
--            noImageText.style.display = "none";
--        }
--    } else {
--        imageElement.src = "";
--        imageElement.style.display = "none";
--        if (noImageText) {
--            noImageText.style.display = "block";
--        }
--    }
--}
--
--// Confirm deletion of a product
--function confirmDelete(productID) {
--    if (confirm("Are you sure you want to delete this product?")) {
--        window.location.href = "/OnlineGroceryOrderSystem/ProductAdminServlet?action=delete&productID=" + productID;
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/adminPages/stockDashboard.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/stockDashboard.jsp b/src/main/webapp/adminPages/stockDashboard.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/stockDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,92 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.GroceryItem" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Stock Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/stockDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/stockDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin or Stock Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "stock".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Get the low stock items from the request attribute
--    List<GroceryItem> lowStockItems = (List<GroceryItem>) request.getAttribute("lowStockItems");
--    if (lowStockItems == null) {
--        response.sendRedirect(request.getContextPath() + "/StockAdminServlet?error=missingData");
--        return;
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-chart-column"></i> Stock Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="stock-search" placeholder="Search Product ID" onkeyup="searchItems()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<!-- Refill Stock Section -->
--<div id="stock-section" class="stock-section">
--    <div class="section-header">
--        <h2>Refill Stock - 250 Minimum</h2>
--    </div>
--    <div class="stock-list" id="stock-items">
--        <%
--            if (lowStockItems != null && !lowStockItems.isEmpty()) {
--                for (GroceryItem item : lowStockItems) {
--        %>
--        <div class="stock-row" data-product-id="<%= item.getProductID() %>">
--            <span class="product-id">Product #<%= item.getProductID() %></span>
--            <span class="product-image">
--                <% if (item.getProductImageLink() != null && !item.getProductImageLink().isEmpty()) { %>
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="item-image">
--                <% } else { %>
--                    No Image
--                <% } %>
--            </span>
--            <span class="product-name"><%= item.getProductName() %></span>
--            <span class="product-category"><%= item.getProductCategory() %></span>
--            <span class="stock-count">Stock: <%= item.getQuantity() %></span>
--            <form action="${pageContext.request.contextPath}/StockAdminServlet" method="post" class="stock-update-form">
--                <input type="hidden" name="action" value="updateStock">
--                <input type="hidden" name="productID" value="<%= item.getProductID() %>">
--                <textarea name="stockCount" placeholder="Enter new stock count" class="stock-input" required></textarea>
--                <button type="submit" class="save-btn">Save</button>
--            </form>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No items with low stock found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/css/productDashboard.css
-===================================================================
-diff --git a/src/main/webapp/css/productDashboard.css b/src/main/webapp/css/productDashboard.css
-deleted file mode 100644
---- a/src/main/webapp/css/productDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,325 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as stockDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 16px 8px 40px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--}
--
--.search-bar input:focus {
--    border-color: #8bc34a;
--}
--
--.search-bar i {
--    position: absolute;
--    left: 12px;
--    color: #666;
--    font-size: 16px;
--}
--
--/* Product Section */
--.product-section {
--    max-width: 1200px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--    margin: 0;
--}
--
--.add-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    text-decoration: none;
--    border-radius: 15px;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.add-btn:hover {
--    background-color: #6b9e38;
--}
--
--.product-list {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--}
--
--.product-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 10px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.product-row:hover {
--    /*background-color: #f8f9fa;*/
--    background-color: #dddddd ;
--}
--
--.product-row:last-child {
--    margin-bottom: 0;
--}
--
--.product-id {
--    width: 10%;
--    font-weight: bold;
--    color: #333;
--}
--
--.product-image {
--    width: 10%;
--}
--
--.item-image {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    vertical-align: middle;
--}
--
--.product-name {
--    width: 15%;
--    color: #333;
--}
--
--.product-category {
--    width: 15%;
--    color: #666;
--}
--
--.product-price {
--    width: 10%;
--    color: #333;
--}
--
--.product-quantity {
--    width: 10%;
--    color: #333;
--}
--
--.product-description {
--    width: 20%;
--    color: #666;
--}
--
--.info-btn {
--    width: 10%;
--    padding: 8px 16px;
--    background-color: #007bff;
--    color: white;
--    text-decoration: none;
--    border-radius: 15px;
--    text-align: center;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.info-btn:hover {
--    background-color: #0056b3;
--}
--
--/* Message styling for no products */
--.product-list p {
--    text-align: center;
--    color: #666;
--    font-size: 16px;
--    margin: 20px 0;
--}
--
--/* Product Info Section (for productDashboardInfo.jsp) */
--.product-info-section {
--    max-width: 600px;
--    margin: 40px auto;
--    padding: 20px;
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.product-image-preview {
--    text-align: center;
--    margin-bottom: 20px;
--}
--
--.product-image-preview img {
--    max-width: 200px;
--    max-height: 200px;
--    object-fit: cover;
--    border-radius: 10px;
--}
--
--.product-image-preview p {
--    color: #666;
--    font-size: 16px;
--}
--
--.product-form {
--    display: flex;
--    flex-direction: column;
--    gap: 15px;
--}
--
--.form-group {
--    display: flex;
--    align-items: center;
--    gap: 10px;
--}
--
--.form-group label {
--    width: 30%;
--    font-weight: 500;
--    color: #333;
--}
--
--.form-group input,
--.form-group textarea,
--.form-group span {
--    width: 70%;
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #ccc;
--    border-radius: 5px;
--    outline: none;
--}
--
--.form-group textarea {
--    resize: vertical;
--    height: 60px;
--}
--
--.form-group input:focus,
--.form-group textarea:focus {
--    border-color: #8bc34a;
--}
--
--.form-group span {
--    background-color: #f0f0f0;
--    border: none;
--}
--
--.form-actions {
--    display: flex;
--    justify-content: space-between;
--}
--
--.save-btn {
--    padding: 10px 20px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--.delete-btn {
--    padding: 10px 20px;
--    background-color: #dc3545;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.delete-btn:hover {
--    background-color: #b02a37;
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/orderDashboard.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/orderDashboard.js b/target/OnlineGroceryOrderSystem/js/orderDashboard.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/orderDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,62 +0,0 @@
--// orderDashboard.js
--
--function showSection(section) {
--    // Hide all sections
--    document.getElementById('active-section').style.display = 'none';
--    document.getElementById('cancelled-section').style.display = 'none';
--    document.getElementById('delivered-section').style.display = 'none';
--
--    // Remove active class from all nav links
--    document.querySelectorAll('.nav-link').forEach(link => {
--        link.classList.remove('active');
--    });
--
--    // Show the selected section and set the active class
--    if (section === 'active') {
--        document.getElementById('active-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'active\')"]').classList.add('active');
--    } else if (section === 'cancelled') {
--        document.getElementById('cancelled-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'cancelled\')"]').classList.add('active');
--    } else if (section === 'delivered') {
--        document.getElementById('delivered-section').style.display = 'block';
--        document.querySelector('a[onclick="navigateToTab(\'delivered\')"]').classList.add('active');
--    }
--}
--
--function searchOrders(section) {
--    const searchInput = document.getElementById(section + '-search').value.toLowerCase();
--    const orderList = document.getElementById(section + '-orders').getElementsByClassName('order-row');
--
--    for (let i = 0; i < orderList.length; i++) {
--        const orderId = orderList[i].getElementsByClassName('order-id')[0].textContent.toLowerCase();
--        if (orderId.includes(searchInput)) {
--            orderList[i].style.display = '';
--        } else {
--            orderList[i].style.display = 'none';
--        }
--    }
--}
--
--function showOrderDetails(orderId, section) {
--    const detailsDiv = document.getElementById('details-' + orderId + '-' + section);
--    if (detailsDiv.style.display === 'none' || detailsDiv.style.display === '') {
--        detailsDiv.style.display = 'block';
--    } else {
--        detailsDiv.style.display = 'none';
--    }
--}
--
--function navigateToTab(tab) {
--    // Update the URL with the new tab parameter and reload the page
--    window.location.href = `${window.location.pathname}?tab=${tab}`;
--}
--
--// Initialize the correct tab on page load based on the URL parameter
--document.addEventListener('DOMContentLoaded', function() {
--    // Get the tab parameter from the URL
--    const urlParams = new URLSearchParams(window.location.search);
--    const tab = urlParams.get('tab') || 'active'; // Default to 'active' if no tab is specified
--    console.log("Initial tab from URL: " + tab);
--    showSection(tab);
--});
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/checkOut.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/checkOut.js b/target/OnlineGroceryOrderSystem/js/checkOut.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/checkOut.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,120 +0,0 @@
--document.addEventListener('DOMContentLoaded', () => {
--    const cartItemsContainer = document.getElementById('cart-items');
--    const totalQuantityElement = document.getElementById('total-quantity');
--    const totalPriceElement = document.getElementById('total-price');
--    const deliveryMethodSelect = document.getElementById('deliveryMethod');
--    const deliveryDateInput = document.getElementById('deliveryDate');
--
--    if (!cartItemsContainer || !totalQuantityElement || !totalPriceElement || !deliveryMethodSelect || !deliveryDateInput) {
--        console.error('Required elements not found in DOM');
--        return;
--    }
--
--    const contextPath = document.head.querySelector('base') ? document.head.querySelector('base').href : '/OnlineGroceryOrderSystem';
--    console.log('Using context path:', contextPath);
--
--    // Fetch cart items
--    fetch(`${contextPath}/CartServlet?action=getCart`, {
--        method: 'GET',
--        headers: { 'Content-Type': 'application/json' }
--    })
--        .then(response => {
--            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
--            return response.json();
--        })
--        .then(data => {
--            console.log('Fetched cart data:', data);
--            if (!data.success) {
--                cartItemsContainer.innerHTML = '<p>' + (data.message || 'Error loading cart items.') + '</p>';
--                totalQuantityElement.textContent = '0';
--                totalPriceElement.textContent = '0.00';
--                return;
--            }
--
--            const cartItems = data.cart;
--            if (cartItems.length === 0) {
--                cartItemsContainer.innerHTML = '<p>No items in cart.</p>';
--                totalQuantityElement.textContent = '0';
--                totalPriceElement.textContent = '0.00';
--                return;
--            }
--
--            let totalQuantity = 0;
--            let totalPrice = 0;
--
--            cartItemsContainer.innerHTML = '';
--            cartItems.forEach(item => {
--                const cartItem = document.createElement('div');
--                cartItem.classList.add('cart-item');
--                const itemTotal = (item.productPrice || 0) * (item.quantity || 1);
--                const imageSrc = item.productImageLink || 'https://via.placeholder.com/50';
--                cartItem.innerHTML = `
--                    <img src="${imageSrc}" alt="${item.productName || 'Unknown Item'}" class="cart-item-img">
--                    <div class="cart-item-details">
--                        <span class="cart-product-title">${item.productName || 'Unknown Item'}</span>
--                        <span class="cart-price">RS. ${item.productPrice ? item.productPrice.toFixed(2) : '0.00'} / Product X ${item.quantity || 1}</span>
--                        <span class="cart-total">RS. ${itemTotal.toFixed(2)}</span>
--                    </div>
--                `;
--                cartItemsContainer.appendChild(cartItem);
--
--                totalQuantity += item.quantity || 1;
--                totalPrice += itemTotal;
--            });
--
--            totalQuantityElement.textContent = totalQuantity;
--            totalPriceElement.textContent = totalPrice.toFixed(2);
--        })
--        .catch(error => {
--            console.error('Error fetching cart:', error);
--            cartItemsContainer.innerHTML = '<p>Error loading cart items.</p>';
--            totalQuantityElement.textContent = '0';
--            totalPriceElement.textContent = '0.00';
--        });
--
--    // Toggle delivery date input based on delivery method
--    deliveryMethodSelect.addEventListener('change', () => {
--        if (deliveryMethodSelect.value === 'scheduled' || deliveryMethodSelect.value === 'store pickup') {
--            deliveryDateInput.style.display = 'block';
--            deliveryDateInput.setAttribute('required', 'required');
--        } else {
--            deliveryDateInput.style.display = 'none';
--            deliveryDateInput.removeAttribute('required');
--            deliveryDateInput.value = '';
--        }
--    });
--
--    // Form validation
--    const checkoutForm = document.getElementById('checkout-form');
--    if (checkoutForm) {
--        let isSubmitting = false;
--
--        checkoutForm.addEventListener('submit', (e) => {
--            if (isSubmitting) {
--                e.preventDefault();
--                return;
--            }
--
--            const fullName = document.querySelector('input[name="fullName"]').value;
--            const phoneNumber = document.querySelector('input[name="phoneNumber"]').value;
--            const address = document.querySelector('input[name="address"]').value;
--            const deliveryMethod = deliveryMethodSelect.value;
--            const paymentMethod = document.querySelector('select[name="paymentMethod"]').value;
--            const deliveryDate = deliveryDateInput.value;
--
--            if (!fullName || !phoneNumber || !address || !deliveryMethod || !paymentMethod) {
--                alert('Please fill in all fields.');
--                e.preventDefault();
--                return;
--            }
--
--            if ((deliveryMethod === 'scheduled' || deliveryMethod === 'store pickup') && !deliveryDate) {
--                alert('Please select a delivery or pickup date.');
--                e.preventDefault();
--                return;
--            }
--
--            isSubmitting = true;
--        });
--    }
--});
-\ No newline at end of file
-Index: src/main/webapp/css/processCheckOut.css
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/css/processCheckOut.css b/src/main/webapp/css/processCheckOut.css
-deleted file mode 100644
---- a/src/main/webapp/css/processCheckOut.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,79 +0,0 @@
--/* processCheckout.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #f4f4f4;
--    margin: 0;
--    padding: 0;
--    display: flex;
--    justify-content: center;
--    align-items: center;
--    min-height: 100vh;
--}
--
--.container {
--    background-color: #6a5acd; /* Purple background */
--    padding: 40px;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    width: 100%;
--    max-width: 500px;
--    text-align: center;
--}
--
--h1 {
--    font-size: 30px;
--    margin-bottom: 20px;
--    color: #fff;
--}
--
--p {
--    font-size: 16px;
--    margin: 10px 0;
--    line-height: 1.5;
--}
--
--.order-details {
--    text-align: left;
--    background: rgba(255, 255, 255, 0.2);
--    padding: 15px;
--    border-radius: 5px;
--    margin: 15px 0;
--}
--
--.links {
--    margin-top: 20px;
--}
--
--.btn {
--    background-color: #20b2aa;
--    color: #fff;
--    padding: 10px 15px;
--    text-decoration: none;
--    font-weight: bold;
--    border-radius: 5px;
--    transition: background 0.3s;
--    display: inline-block;
--    margin: 5px;
--}
--
--.btn:hover {
--    background-color: #19a99d;
--}
--
--@media screen and (max-width: 768px) {
--    .container {
--        padding: 20px;
--        margin: 20px;
--    }
--
--    h1 {
--        font-size: 24px;
--    }
--
--    p {
--        font-size: 14px;
--    }
--}
-Index: src/main/webapp/adminPages/adminPage.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/adminPage.jsp b/src/main/webapp/adminPages/adminPage.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/adminPage.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,298 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Admin Page</title>
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/admin.css">
--  <!-- Include Chart.js -->
--  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
--  <script src="${pageContext.request.contextPath}/js/admin.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if statistics are set; if not, redirect to AdminServlet
--  if (request.getAttribute("totalOrders") == null || request.getAttribute("deliveredOrders") == null || request.getAttribute("cancelledOrders") == null) {
--    System.out.println("adminPage.jsp - Statistics not set, redirecting to AdminServlet");
--    response.sendRedirect(request.getContextPath() + "/AdminServlet");
--    return;
--  }
--%>
--<header>
--  <div class="nav-links"></div>
--  <span class="logo"><i class="fa-solid fa-toolbox"></i> Admin Dashboard</span>
--  <div class="header-icons">
--    <a href="${pageContext.request.contextPath}/LogoutServlet" class="logout-icon"><i class="fa fa-sign-out"></i></a>
--  </div>
--</header>
--
--<div class="profile-container">
--  <div class="user-info">
--    <h2>Admin Info</h2>
--    <div class="user-details">
--      <i class="fas fa-user-circle user-icon"></i>
--      <div class="user-details-text">
--        <%
--          // Debug: Log the session attributes
--          System.out.println("adminPage.jsp - adminNumber: " + session.getAttribute("adminNumber"));
--          System.out.println("adminPage.jsp - adminEmail: " + session.getAttribute("adminEmail"));
--          System.out.println("adminPage.jsp - adminRole: " + session.getAttribute("adminRole"));
--        %>
--        <p><strong>Admin Number:</strong> <%= session.getAttribute("adminNumber") != null ? session.getAttribute("adminNumber") : "Not available" %></p>
--        <p><strong>Email:</strong> <%= session.getAttribute("adminEmail") != null ? session.getAttribute("adminEmail") : "Unknown" %></p>
--        <p><strong>Role:</strong> <%= session.getAttribute("adminRole") != null ? session.getAttribute("adminRole") : "Unknown" %></p>
--      </div>
--    </div>
--  </div>
--</div>
--
--<h1 class="heading">Current <span>Statistics</span></h1>
--
--<div class="stats-container">
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Orders</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object totalOrders = request.getAttribute("totalOrders");
--        if (totalOrders == null) {
--          System.out.println("adminPage.jsp - totalOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= totalOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Delivered</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object deliveredOrders = request.getAttribute("deliveredOrders");
--        if (deliveredOrders == null) {
--          System.out.println("adminPage.jsp - deliveredOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= deliveredOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Cancelled</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object cancelledOrders = request.getAttribute("cancelledOrders");
--        if (cancelledOrders == null) {
--          System.out.println("adminPage.jsp - cancelledOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= cancelledOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--</div>
--
--<!-- Chart Section -->
--<h1 class="heading">Order <span>Trends</span></h1>
--<div class="chart-container">
--  <canvas id="ordersChart"></canvas>
--</div>
--
--<!-- Admin Dashboards Section with Role-Based Access -->
--<h1 class="heading">Admin <span>Dashboards</span></h1>
--
--<div class="dashboard-container">
--  <%
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null) {
--      adminRole = "unknown"; // Fallback if role is not set
--      System.out.println("adminPage.jsp - adminRole is null, setting to 'unknown'");
--    }
--
--    // Super Admin can access all dashboards
--    if ("super".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/OrderAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Order</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/StockAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Stock</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Product</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/UserAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>User</h2>
--    </div>
--  </a>
--  <%
--    // Order Admin can only access Order dashboard
--  } else if ("order".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/OrderAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Order</h2>
--    </div>
--  </a>
--  <%
--    // Stock Admin can only access Stock dashboard
--  } else if ("stock".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/StockAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Stock</h2>
--    </div>
--  </a>
--  <%
--    // Product Admin can only access Product dashboard
--  } else if ("product".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Product</h2>
--    </div>
--  </a>
--  <%
--  } else {
--    // If role is unknown or invalid, show a message
--  %>
--  <p>You do not have access to any dashboards.</p>
--  <%
--    }
--  %>
--</div>
--
--<!-- JavaScript to Render the Chart -->
--<script>
--  // Dynamic data from JSP
--  const labels = [
--    <%
--        List<String> chartLabels = (List<String>) request.getAttribute("chartLabels");
--        if (chartLabels != null) {
--            for (int i = 0; i < chartLabels.size(); i++) {
--                out.print("'" + chartLabels.get(i) + "'");
--                if (i < chartLabels.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--  const deliveredData = [
--    <%
--        List<Integer> deliveredData = (List<Integer>) request.getAttribute("deliveredData");
--        if (deliveredData != null) {
--            for (int i = 0; i < deliveredData.size(); i++) {
--                out.print(deliveredData.get(i));
--                if (i < deliveredData.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--  const cancelledData = [
--    <%
--        List<Integer> cancelledData = (List<Integer>) request.getAttribute("cancelledData");
--        if (cancelledData != null) {
--            for (int i = 0; i < cancelledData.size(); i++) {
--                out.print(cancelledData.get(i));
--                if (i < cancelledData.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--
--  const ctx = document.getElementById('ordersChart').getContext('2d');
--  new Chart(ctx, {
--    type: 'bar', // Line chart
--    data: {
--      labels: labels,
--      datasets: [
--        {
--          label: 'Delivered Orders',
--          data: deliveredData,
--          borderColor: '#2ECC71', // Darker green for the line
--          backgroundColor: 'rgba(46, 204, 113, 0.2)', // Semi-transparent fill under the line
--          fill: true, // Fill the area under the line
--          borderWidth: 2, // Thickness of the line
--          pointRadius: 4, // Size of the data points
--          pointBackgroundColor: '#2ECC71' // Color of the data points
--        },
--        {
--          label: 'Cancelled Orders',
--          data: cancelledData,
--          borderColor: '#E74C3C', // Darker red for the line
--          backgroundColor: 'rgba(231, 76, 60, 0.2)', // Semi-transparent fill under the line
--          fill: true, // Fill the area under the line
--          borderWidth: 2, // Thickness of the line
--          pointRadius: 4, // Size of the data points
--          pointBackgroundColor: '#E74C3C' // Color of the data points
--        }
--      ]
--    },
--    options: {
--      responsive: true,
--      plugins: {
--        legend: {
--          position: 'top',
--        },
--        title: {
--          display: true,
--          text: 'Delivered vs Cancelled Orders Over Time'
--        }
--      },
--      scales: {
--        x: {
--          title: {
--            display: true,
--            text: 'Month'
--          }
--        },
--        y: {
--          title: {
--            display: true,
--            text: 'Number of Orders'
--          },
--          beginAtZero: true
--        }
--      }
--    }
--  });
--</script>
--
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/userLogin/orderCheck.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/orderCheck.jsp b/target/OnlineGroceryOrderSystem/userLogin/orderCheck.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/userLogin/orderCheck.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,134 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html>
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Grocery</title>
--    <base href="${pageContext.request.contextPath}/">
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderCancel.css">
--    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <style>
--        .total-info {
--            margin-top: 20px;
--            padding: 10px;
--            background-color: #f9f9f9;
--            border-radius: 5px;
--            color: #2c3e50;
--            display: flex;
--            justify-content: space-between;
--            font-size: 16px;
--            font-weight: bold;
--        }
--    </style>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Delivered" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--    <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--</header>
--
--<section class="cancel-container">
--    <div class="order-section">
--        <%
--            // File paths
--            String deliveredOrdersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--            String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--            // Get the orderNumber from the request
--            String orderNumber = request.getParameter("orderNumber");
--            if (orderNumber == null || orderNumber.trim().isEmpty()) {
--        %>
--        <p>Error: Invalid order number.</p>
--        <%
--        } else {
--            // Read the order from deliveredOrders.txt
--            List<Order> orders = FileUtil.readAllDeliveredOrders(deliveredOrdersFile);
--            Order order = null;
--            for (Order o : orders) {
--                if (o.getOrderNumber().equals(orderNumber)) {
--                    order = o;
--                    break;
--                }
--            }
--
--            if (order == null) {
--        %>
--        <p>Error: Order not found.</p>
--        <%
--        } else {
--            // Determine the title based on deliveryStatus
--            String sectionTitle = "Delivered Products";
--            if ("Cancelled".equalsIgnoreCase(order.getDeliveryStatus())) {
--                sectionTitle = "Canceled Products";
--            }
--        %>
--        <h2 class="section-title"><%= sectionTitle %></h2>
--        <div class="order-items" id="order-items">
--            <%
--                // Read items from items.txt to get product details
--                List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                if (items == null) {
--                    items = new ArrayList<>();
--                }
--
--                // Calculate total quantity and total price
--                int totalQuantity = 0;
--                double totalPrice = order.getTotalPrice();
--                List<String[]> products = order.getProducts();
--
--                // Display each product in the order
--                for (String[] product : products) {
--                    String productID = product[0];
--                    int quantity = Integer.parseInt(product[1]);
--                    totalQuantity += quantity;
--
--                    // Find the product in items.txt to get its details
--                    GroceryItem item = null;
--                    for (GroceryItem groceryItem : items) {
--                        if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                            item = groceryItem;
--                            break;
--                        }
--                    }
--
--                    if (item != null) {
--                        double itemTotalPrice = item.getProductPrice() * quantity;
--            %>
--            <div class="order-item">
--                <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--                <div class="order-item-details">
--                    <span class="order-product-title"><%= item.getProductName() %></span>
--                    <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--                    <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--                </div>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--        <div class="total-info" id="total-info">
--            <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--            <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--        </div>
--        <%
--                }
--            }
--        %>
--    </div>
--</section>
--
--<script src="${pageContext.request.contextPath}/js/orderCancel.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/css/userDashboard.css
-===================================================================
-diff --git a/src/main/webapp/css/userDashboard.css b/src/main/webapp/css/userDashboard.css
-deleted file mode 100644
---- a/src/main/webapp/css/userDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,388 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    /*background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg');*/
--    /*background-size: cover;*/
--    /*background-position: center;*/
--    /*background-repeat: no-repeat;*/
--    /*background-attachment: fixed;*/
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.back-link, .nav-links .back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--
--.back-link:hover, .nav-links .back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    text-decoration: none;
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--    transition: color 0.3s ease;
--}
--
--.logo:hover i {
--    color: #689f38;
--}
--
--.search-bar {
--    display: flex;
--    align-items: center;
--    background-color: #f1f1f1; /* Light gray background */
--    border: 1px solid #DDD; /* Subtle border */
--    border-radius: 20px; /* Fully rounded corners */
--}
--
--.search-bar input {
--    padding: 8px;
--    font-size: 14px;
--    border: none; /* Remove border since the parent has it */
--    border-radius: 20px 0 0 20px; /* Rounded on the left side */
--    outline: none;
--    background-color: transparent; /* Transparent to blend with parent background */
--    color: #333; /* Dark text for contrast */
--    flex: 1; /* Take up remaining space */
--}
--
--.search-bar input::placeholder {
--    color: #666; /* Placeholder text color */
--}
--
--.search-bar i {
--    padding: 8px 10px; /* Reduced padding to make the button narrower */
--    background-color: #8bc34a; /* Full green background */
--    color: #FFF; /* White icon */
--    border: none;
--    border-radius: 0 20px 20px 0; /* Rounded on the right side */
--    cursor: pointer;
--    transition: background-color 0.3s ease;
--}
--
--.search-bar i:hover {
--    background-color: #689f38; /* Darker green on hover */
--}
--
--.content {
--    width: 100%;
--    padding: 5px 1cm 20px 1cm;
--    background-color: transparent;
--}
--
--.profile-container {
--    max-width: 1200px;
--    margin: 10px auto 20px auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.section-header {
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.user-details {
--    display: flex;
--    justify-content: flex-start;
--    margin-bottom: 30px;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: flex-start;
--    gap: 20px;
--}
--
--.user-icon {
--    font-size: 60px;
--    color: #333;
--}
--
--.user-details-text p {
--    font-size: 16px;
--    color: #555;
--    margin: 5px 0;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--.user-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--}
--
--.user-row {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    background-color: #f9f9f9;
--    padding: 10px 20px;
--    border-radius: 5px;
--    transition: background-color 0.3s ease, box-shadow 0.3s ease;
--}
--
--.user-row:hover {
--    background-color: #e6e6e6; /* Slightly darker gray for hover */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Add a subtle shadow on hover */
--}
--
--.user-number, .user-email, .user-fullname {
--    flex: 1;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-section {
--    margin-top: 20px;
--}
--
--.activity-tabs {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    border-bottom: 1px solid #DDD;
--    margin-bottom: 20px;
--}
--
--.activity-tabs .tab {
--    padding: 10px 20px;
--    font-size: 16px;
--    color: #555;
--    cursor: pointer;
--    transition: color 0.3s ease;
--    text-decoration: none;
--}
--
--.activity-tabs .tab.active {
--    color: #333;
--    font-weight: bold;
--    border-bottom: 2px solid #333;
--}
--
--.activity-tabs .tab:hover {
--    color: #333;
--}
--
--.activity-tabs .search-bar {
--    display: flex;
--    align-items: center;
--    margin-left: auto; /* Pushes the search bar to the far right */
--    background-color: #f1f1f1; /* Light background */
--    border: 1px solid #DDD; /* Subtle border */
--    border-radius: 20px; /* Fully rounded corners */
--}
--
--.activity-tabs .search-bar form {
--    display: flex;
--    align-items: center;
--    width: 100%;
--}
--
--.activity-tabs .search-bar input[type="text"] {
--    padding: 8px;
--    font-size: 14px;
--    border: none; /* Remove border since the parent has it */
--    border-radius: 20px 0 0 20px; /* Rounded on the left side */
--    outline: none;
--    background-color: transparent; /* Transparent to blend with parent background */
--    color: #333; /* Dark text for contrast */
--    flex: 1; /* Take up remaining space */
--}
--
--.activity-tabs .search-bar input[type="text"]::placeholder {
--    color: #666; /* Placeholder text color */
--}
--
--.activity-tabs .search-bar button {
--    padding: 2px 7px; /* Reduced padding to make the button narrower */
--    background-color: #8bc34a; /* Full green background */
--    color: #FFF; /* White icon */
--    border: none;
--    border-radius: 0 20px 20px 0; /* Rounded on the right side */
--    cursor: pointer;
--    outline: none; /* Remove default outline */
--    transition: background-color 0.3s ease;
--}
--
--
--.activity-tabs .search-bar i:hover {
--    background-color: #689f38; /* Darker green on hover */
--}
--
--.activity-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--    max-height: 300px;
--    overflow-y: auto;
--    padding-right: 10px;
--}
--
--.activity-list::-webkit-scrollbar {
--    width: 8px;
--}
--
--.activity-list::-webkit-scrollbar-track {
--    background: #f1f1f1;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb {
--    background: #8bc34a;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb:hover {
--    background: #689f38;
--}
--
--.activity-item {
--    display: flex;
--    align-items: center;
--    background-color: #F9F9F9;
--    padding: 10px;
--    border-radius: 5px;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-item i {
--    font-size: 16px;
--    color: #333;
--    margin-right: 10px;
--}
--
--.activity-item p {
--    margin: 0;
--    flex: 1;
--}
--
--.activity-item .timestamp {
--    font-size: 12px;
--    color: #999;
--}
--
--.activity-item .status {
--    padding: 2px 8px;
--    border-radius: 10px;
--    font-size: 12px;
--    color: #FFF;
--}
--
--.activity-item .status.pending {
--    background-color: #FFA500;
--}
--
--.activity-item .status.completed {
--    background-color: #28A745;
--}
--
--.activity-item .status.disabled {
--    background-color: #DC3545;
--}
--
--.cancel-link {
--    display: inline-block;
--    padding: 2px 8px;
--    background-color: #00CED1;
--    color: #FFF;
--    border-radius: 10px;
--    font-size: 12px;
--    text-decoration: none;
--    transition: background-color 0.3s ease;
--}
--
--.cancel-link:hover {
--    background-color: #00B7B9;
--}
--
--.total-info {
--    margin-top: 20px;
--    padding: 10px;
--    background-color: #f9f9f9;
--    border-radius: 5px;
--    color: #2c3e50;
--    display: flex;
--    justify-content: space-between;
--    font-size: 16px;
--    font-weight: bold;
--}
--
--.error-message {
--    color: red;
--    text-align: center;
--    margin-bottom: 20px;
--}
--
--.activity-item-img {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    margin-right: 10px;
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/adminSuccessful.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/adminSuccessful.jsp b/target/OnlineGroceryOrderSystem/adminPages/adminSuccessful.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/adminSuccessful.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,165 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Admin Login Successful</title>
--  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
--  <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>
--  <style>
--    body {
--      margin: 0;
--      padding: 0;
--      height: 100vh;
--      background-image: url('https://static.vecteezy.com/system/resources/previews/006/607/817/non_2x/customer-shopping-and-cashier-at-supermarket-checkout-counter-concept-illustration-vector.jpg');
--      background-size: cover;
--      background-repeat: no-repeat;
--      display: flex;
--      justify-content: center;
--      align-items: center;
--    }
--
--    #card {
--      width: 1000px;
--      background: rgba(255, 255, 255, 0.9);
--      border-radius: 10px;
--      overflow: hidden;
--      margin: 0 auto;
--      text-align: center;
--      font-family: 'Source Sans Pro', sans-serif;
--      animation: fadeIn 1s ease-in-out;
--    }
--
--    #upper-side {
--      padding: 4em;
--      background-color: #8BC34A;
--      background: rgba(0, 255, 0, 0.3);
--      display: block;
--      color: #fff;
--      border-top-right-radius: 8px;
--      border-top-left-radius: 8px;
--    }
--
--    #checkmark {
--      font-weight: lighter;
--      fill: #3E7B27;
--      margin: -3.5em auto auto 65px;
--    }
--
--    #status {
--      font-weight: lighter;
--      text-transform: uppercase;
--      letter-spacing: 2px;
--      font-size: 1.2em;
--      margin-top: -0.2em;
--      margin-bottom: 10px;
--      color: #3E7B27;
--    }
--
--    #lower-side {
--      padding: 2em 2em 5em 2em;
--      background: #fff;
--      display: block;
--      border-bottom-right-radius: 8px;
--      border-bottom-left-radius: 8px;
--    }
--
--    #message {
--      margin-top: -0.5em;
--      color: #757575;
--      letter-spacing: 1px;
--      font-size: 1.1em;
--      line-height: 1.5;
--    }
--
--    #contBtn {
--      position: relative;
--      top: 1.5em;
--      text-decoration: none;
--      background: #8BC34A;
--      color: #fff;
--      margin: auto;
--      padding: 0.8em 3em;
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);
--      border-radius: 25px;
--      transition: all 0.4s ease;
--      font-size: 1.1em;
--      text-transform: uppercase;
--    }
--
--    #contBtn:hover {
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);
--      transition: all 0.4s ease;
--    }
--  </style>
--</head>
--<body>
--<%
--  // Check if session attributes are set; if not, redirect to login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--%>
--<div id='card'>
--  <div id='upper-side'>
--    <svg version="1.1" id="checkmark" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" xml:space="preserve">
--      <path d="M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65
--      c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382
--      c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209
--      c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091
--      c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027
--      c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865
--      C131.967,94.755,132.296,93.271,131.583,92.152z" />
--      <circle fill="none" stroke="#3E7B27" stroke-width="5" stroke-miterlimit="10" cx="109.486" cy="104.353" r="32.53" />
--    </svg>
--    <h3 id='status'>Success</h3>
--  </div>
--  <div id='lower-side'>
--    <p id='message'>
--      <%
--        String type = request.getParameter("type");
--        // Debug: Log session attributes
--        System.out.println("adminSuccessful.jsp - adminNumber: " + session.getAttribute("adminNumber"));
--        System.out.println("adminSuccessful.jsp - adminEmail: " + session.getAttribute("adminEmail"));
--        System.out.println("adminSuccessful.jsp - adminRole: " + session.getAttribute("adminRole"));
--        if ("login".equals(type)) {
--          String adminRole = (String) session.getAttribute("adminRole");
--          String welcomeMessage;
--          if (adminRole != null) {
--            switch (adminRole.toLowerCase()) {
--              case "order":
--                welcomeMessage = "Welcome, Order Admin";
--                break;
--              case "stock":
--                welcomeMessage = "Welcome, Stock Admin";
--                break;
--              case "super":
--                welcomeMessage = "Welcome, Super Admin";
--                break;
--              case "product":
--                welcomeMessage = "Welcome, Product Admin";
--                break;
--              default:
--                welcomeMessage = "Welcome, Admin (Unknown Role: " + adminRole + ")";
--                break;
--            }
--          } else {
--            welcomeMessage = "Welcome, Admin (Role Not Set)";
--          }
--      %>
--      Login successful! <%= welcomeMessage %>.
--      <% } else { %>
--      An action was completed successfully.
--      <% }
--      %>
--    </p>
--    <%
--      String adminServletUrl = request.getContextPath() + "/AdminServlet";
--      System.out.println("adminSuccessful.jsp - Navigating to AdminServlet: " + adminServletUrl);
--    %>
--    <a href="<%= adminServletUrl %>" id="contBtn">Go to Admin Dashboard</a>
--  </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/userProfile.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/userProfile.js b/target/OnlineGroceryOrderSystem/js/userProfile.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/userProfile.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,58 +0,0 @@
--// Toggle the edit form visibility
--const editBtn = document.getElementById('edit-btn');
--const profileFormContainer = document.getElementById('profile-form-container');
--const userInfo = document.querySelector('.user-info');
--
--if (editBtn) {
--    editBtn.addEventListener('click', () => {
--        if (profileFormContainer.style.display === 'none' || profileFormContainer.style.display === '') {
--            profileFormContainer.style.display = 'block';
--            userInfo.style.display = 'none'; // Hide the user info display
--            editBtn.textContent = 'Cancel'; // Change button text to "Cancel"
--            editBtn.innerHTML = '<i class="fas fa-times"></i> Cancel'; // Update icon
--        } else {
--            profileFormContainer.style.display = 'none';
--            userInfo.style.display = 'block'; // Show the user info display
--            editBtn.textContent = 'Edit Profile'; // Change button text back
--            editBtn.innerHTML = '<i class="fas fa-edit"></i> Edit Profile'; // Update icon
--        }
--    });
--}
--
--// Delete Confirmation Modal Logic
--const deleteBtn = document.getElementById('delete-btn');
--const deleteModal = document.getElementById('deleteModal');
--const confirmDelete = document.getElementById('confirmDelete');
--const cancelDelete = document.getElementById('cancelDelete');
--
--if (deleteBtn) {
--    deleteBtn.addEventListener('click', () => {
--        deleteModal.style.display = 'flex'; // Show the modal
--    });
--}
--
--if (cancelDelete) {
--    cancelDelete.addEventListener('click', () => {
--        deleteModal.style.display = 'none'; // Hide the modal
--    });
--}
--
--if (confirmDelete) {
--    confirmDelete.addEventListener('click', () => {
--        // Programmatically submit the form with action=delete
--        const form = document.getElementById('profile-form');
--        const actionInput = document.createElement('input');
--        actionInput.type = 'hidden';
--        actionInput.name = 'action';
--        actionInput.value = 'delete';
--        form.appendChild(actionInput);
--        form.submit();
--    });
--}
--
--// Close modal if user clicks outside of it
--window.addEventListener('click', (event) => {
--    if (event.target === deleteModal) {
--        deleteModal.style.display = 'none';
--    }
--});
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/adminPage.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/adminPage.jsp b/target/OnlineGroceryOrderSystem/adminPages/adminPage.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/adminPage.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,298 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Admin Page</title>
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/admin.css">
--  <!-- Include Chart.js -->
--  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
--  <script src="${pageContext.request.contextPath}/js/admin.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if statistics are set; if not, redirect to AdminServlet
--  if (request.getAttribute("totalOrders") == null || request.getAttribute("deliveredOrders") == null || request.getAttribute("cancelledOrders") == null) {
--    System.out.println("adminPage.jsp - Statistics not set, redirecting to AdminServlet");
--    response.sendRedirect(request.getContextPath() + "/AdminServlet");
--    return;
--  }
--%>
--<header>
--  <div class="nav-links"></div>
--  <span class="logo"><i class="fa-solid fa-toolbox"></i> Admin Dashboard</span>
--  <div class="header-icons">
--    <a href="${pageContext.request.contextPath}/LogoutServlet" class="logout-icon"><i class="fa fa-sign-out"></i></a>
--  </div>
--</header>
--
--<div class="profile-container">
--  <div class="user-info">
--    <h2>Admin Info</h2>
--    <div class="user-details">
--      <i class="fas fa-user-circle user-icon"></i>
--      <div class="user-details-text">
--        <%
--          // Debug: Log the session attributes
--          System.out.println("adminPage.jsp - adminNumber: " + session.getAttribute("adminNumber"));
--          System.out.println("adminPage.jsp - adminEmail: " + session.getAttribute("adminEmail"));
--          System.out.println("adminPage.jsp - adminRole: " + session.getAttribute("adminRole"));
--        %>
--        <p><strong>Admin Number:</strong> <%= session.getAttribute("adminNumber") != null ? session.getAttribute("adminNumber") : "Not available" %></p>
--        <p><strong>Email:</strong> <%= session.getAttribute("adminEmail") != null ? session.getAttribute("adminEmail") : "Unknown" %></p>
--        <p><strong>Role:</strong> <%= session.getAttribute("adminRole") != null ? session.getAttribute("adminRole") : "Unknown" %></p>
--      </div>
--    </div>
--  </div>
--</div>
--
--<h1 class="heading">Current <span>Statistics</span></h1>
--
--<div class="stats-container">
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Orders</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object totalOrders = request.getAttribute("totalOrders");
--        if (totalOrders == null) {
--          System.out.println("adminPage.jsp - totalOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= totalOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Delivered</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object deliveredOrders = request.getAttribute("deliveredOrders");
--        if (deliveredOrders == null) {
--          System.out.println("adminPage.jsp - deliveredOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= deliveredOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--  <div class="stat-box">
--    <div class="stat-header">
--      <h2>Cancelled</h2>
--    </div>
--    <div class="stat-number">
--      <%
--        Object cancelledOrders = request.getAttribute("cancelledOrders");
--        if (cancelledOrders == null) {
--          System.out.println("adminPage.jsp - cancelledOrders attribute is null");
--      %>
--      0
--      <%
--      } else {
--      %>
--      <%= cancelledOrders %>
--      <%
--        }
--      %>
--    </div>
--  </div>
--</div>
--
--<!-- Chart Section -->
--<h1 class="heading">Order <span>Trends</span></h1>
--<div class="chart-container">
--  <canvas id="ordersChart"></canvas>
--</div>
--
--<!-- Admin Dashboards Section with Role-Based Access -->
--<h1 class="heading">Admin <span>Dashboards</span></h1>
--
--<div class="dashboard-container">
--  <%
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null) {
--      adminRole = "unknown"; // Fallback if role is not set
--      System.out.println("adminPage.jsp - adminRole is null, setting to 'unknown'");
--    }
--
--    // Super Admin can access all dashboards
--    if ("super".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/OrderAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Order</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/StockAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Stock</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Product</h2>
--    </div>
--  </a>
--  <a href="${pageContext.request.contextPath}/UserAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>User</h2>
--    </div>
--  </a>
--  <%
--    // Order Admin can only access Order dashboard
--  } else if ("order".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/OrderAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Order</h2>
--    </div>
--  </a>
--  <%
--    // Stock Admin can only access Stock dashboard
--  } else if ("stock".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/StockAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Stock</h2>
--    </div>
--  </a>
--  <%
--    // Product Admin can only access Product dashboard
--  } else if ("product".equalsIgnoreCase(adminRole)) {
--  %>
--  <a href="${pageContext.request.contextPath}/ProductAdminServlet" class="dashboard-box">
--    <div class="dashboard-header">
--      <h2>Product</h2>
--    </div>
--  </a>
--  <%
--  } else {
--    // If role is unknown or invalid, show a message
--  %>
--  <p>You do not have access to any dashboards.</p>
--  <%
--    }
--  %>
--</div>
--
--<!-- JavaScript to Render the Chart -->
--<script>
--  // Dynamic data from JSP
--  const labels = [
--    <%
--        List<String> chartLabels = (List<String>) request.getAttribute("chartLabels");
--        if (chartLabels != null) {
--            for (int i = 0; i < chartLabels.size(); i++) {
--                out.print("'" + chartLabels.get(i) + "'");
--                if (i < chartLabels.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--  const deliveredData = [
--    <%
--        List<Integer> deliveredData = (List<Integer>) request.getAttribute("deliveredData");
--        if (deliveredData != null) {
--            for (int i = 0; i < deliveredData.size(); i++) {
--                out.print(deliveredData.get(i));
--                if (i < deliveredData.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--  const cancelledData = [
--    <%
--        List<Integer> cancelledData = (List<Integer>) request.getAttribute("cancelledData");
--        if (cancelledData != null) {
--            for (int i = 0; i < cancelledData.size(); i++) {
--                out.print(cancelledData.get(i));
--                if (i < cancelledData.size() - 1) out.print(",");
--            }
--        }
--    %>
--  ];
--
--  const ctx = document.getElementById('ordersChart').getContext('2d');
--  new Chart(ctx, {
--    type: 'bar', // Line chart
--    data: {
--      labels: labels,
--      datasets: [
--        {
--          label: 'Delivered Orders',
--          data: deliveredData,
--          borderColor: '#2ECC71', // Darker green for the line
--          backgroundColor: 'rgba(46, 204, 113, 0.2)', // Semi-transparent fill under the line
--          fill: true, // Fill the area under the line
--          borderWidth: 2, // Thickness of the line
--          pointRadius: 4, // Size of the data points
--          pointBackgroundColor: '#2ECC71' // Color of the data points
--        },
--        {
--          label: 'Cancelled Orders',
--          data: cancelledData,
--          borderColor: '#E74C3C', // Darker red for the line
--          backgroundColor: 'rgba(231, 76, 60, 0.2)', // Semi-transparent fill under the line
--          fill: true, // Fill the area under the line
--          borderWidth: 2, // Thickness of the line
--          pointRadius: 4, // Size of the data points
--          pointBackgroundColor: '#E74C3C' // Color of the data points
--        }
--      ]
--    },
--    options: {
--      responsive: true,
--      plugins: {
--        legend: {
--          position: 'top',
--        },
--        title: {
--          display: true,
--          text: 'Delivered vs Cancelled Orders Over Time'
--        }
--      },
--      scales: {
--        x: {
--          title: {
--            display: true,
--            text: 'Month'
--          }
--        },
--        y: {
--          title: {
--            display: true,
--            text: 'Number of Orders'
--          },
--          beginAtZero: true
--        }
--      }
--    }
--  });
--</script>
--
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/userInfo.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/userInfo.jsp b/target/OnlineGroceryOrderSystem/adminPages/userInfo.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/userInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,127 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.User, model.FileUtil.Order" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>User Information</title>
--  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--  <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if the user has the correct role (Super Admin)
--  String adminRole = (String) session.getAttribute("adminRole");
--  if (adminRole == null || !"super".equalsIgnoreCase(adminRole)) {
--    response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--    return;
--  }
--
--  User selectedUser = (User) request.getAttribute("selectedUser");
--  List<Order> activeOrders = (List<Order>) request.getAttribute("activeOrders");
--  List<Order> deliveredOrders = (List<Order>) request.getAttribute("deliveredOrders");
--  String errorMessage = (String) request.getAttribute("errorMessage");
--  String activeTab = request.getParameter("tab") != null ? request.getParameter("tab") : "Active";
--
--  if (selectedUser == null) {
--    response.sendRedirect(request.getContextPath() + "/UserAdminServlet?error=userNotFound");
--    return;
--  }
--%>
--<header>
--  <a href="${pageContext.request.contextPath}/UserAdminServlet" class="back-link"><i class="fas fa-arrow-left"></i></a>
--  <a class="logo"><i class="fa-solid fa-user"></i> User Information</a>
--</header>
--
--<div class="content">
--  <div class="profile-container">
--    <div class="user-info">
--      <div class="user-info-header">
--        <h2>User Info</h2>
--      </div>
--      <div class="user-details">
--        <div class="user-details-left">
--          <div class="user-icon">
--            <i class="fas fa-user-circle"></i>
--          </div>
--          <div class="user-details-text">
--            <p><strong>User Number:</strong> <span id="userNumberDisplay"><%= selectedUser.getUserNumber() != null ? selectedUser.getUserNumber() : "Not available" %></span></p>
--            <p><strong>Email:</strong> <span id="emailDisplay"><%= selectedUser.getEmail() %></span></p>
--            <p><strong>Full Name:</strong> <span id="fullNameDisplay"><%= selectedUser.getFullName() %></span></p>
--            <p><strong>Address:</strong> <span id="addressDisplay"><%= selectedUser.getAddress() != null ? selectedUser.getAddress() : "Not provided" %></span></p>
--            <p><strong>Phone Number:</strong> <span id="phoneNumberDisplay"><%= selectedUser.getPhoneNumber() %></span></p>
--          </div>
--        </div>
--      </div>
--    </div>
--  </div>
--
--  <div class="profile-container">
--    <div class="activity-section">
--      <div class="activity-tabs">
--        <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= selectedUser.getUserNumber() %>&tab=Active" class="tab <%= "Active".equals(activeTab) ? "active" : "" %>">Active</a>
--        <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= selectedUser.getUserNumber() %>&tab=Delivered" class="tab <%= "Delivered".equals(activeTab) ? "active" : "" %>">Delivered</a>
--        <div class="search-bar">
--          <form action="${pageContext.request.contextPath}/UserAdminServlet" method="get">
--            <input type="hidden" name="action" value="info">
--            <input type="hidden" name="userNumber" value="<%= selectedUser.getUserNumber() %>">
--            <input type="hidden" name="tab" value="<%= activeTab %>">
--            <input type="text" name="searchQuery" placeholder="Search OrderID" value="${param.searchQuery}">
--            <button type="submit"><i class="fas fa-search"></i></button>
--          </form>
--        </div>
--      </div>
--      <div class="activity-list">
--        <%
--          List<Order> orders = "Active".equals(activeTab) ? activeOrders : deliveredOrders;
--          if (orders == null || orders.isEmpty()) {
--        %>
--        <div class="activity-item">
--          <p>No orders found.</p>
--        </div>
--        <%
--        } else {
--          for (Order order : orders) {
--            String statusClass = "pending";
--            if ("Delivered".equalsIgnoreCase(order.getDeliveryStatus())) {
--              statusClass = "completed";
--            } else if ("Cancelled".equalsIgnoreCase(order.getOrderStatus())) {
--              statusClass = "disabled";
--            }
--        %>
--        <div class="activity-item">
--          <i class="fas fa-shopping-cart"></i>
--          <p>
--            Order <%= order.getOrderNumber() %> placed on <%= order.getConfirmationDate() %>
--            (Status: <span class="status <%= statusClass %>"><%= order.getDeliveryStatus() %></span>)
--            <a href="${pageContext.request.contextPath}/adminPages/orderCheck.jsp?orderNumber=<%= order.getOrderNumber() %>&userNumber=<%= selectedUser.getUserNumber() %>&source=<%= "Active".equals(activeTab) ? "active" : "delivered" %>" class="cancel-link">Info</a>
--          </p>
--          <span class="timestamp">
--                            <% if ("Delivered".equals(activeTab)) { %>
--                                <%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %>
--                            <% } else { %>
--                                <%= order.getConfirmationDate() %>
--                            <% } %>
--                        </span>
--        </div>
--        <%
--            }
--          }
--        %>
--      </div>
--    </div>
--  </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/stockDashboard.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/stockDashboard.css b/target/OnlineGroceryOrderSystem/css/stockDashboard.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/stockDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,217 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as orderDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 16px 8px 40px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--}
--
--.search-bar input:focus {
--    border-color: #8bc34a;
--}
--
--.search-bar i {
--    position: absolute;
--    left: 12px;
--    color: #666;
--    font-size: 16px;
--}
--
--/* Stock Section */
--.stock-section {
--    max-width: 1200px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--    margin: 0;
--}
--
--.stock-list {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--}
--
--.stock-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 10px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.stock-row:hover {
--    /*background-color: #f8f9fa;*/
--    background-color: #dddddd;
--}
--
--.stock-row:last-child {
--    margin-bottom: 0;
--}
--
--.product-id {
--    width: 10%;
--    font-weight: bold;
--    color: #333;
--}
--
--.product-image {
--    width: 10%;
--}
--
--.item-image {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    vertical-align: middle;
--}
--
--.product-name {
--    width: 20%;
--    color: #333;
--}
--
--.product-category {
--    width: 15%;
--    color: #666;
--}
--
--.stock-count {
--    width: 15%;
--    color: #dc3545; /* Red color for low stock */
--    font-weight: 500;
--}
--
--.stock-update-form {
--    width: 30%;
--    display: flex;
--    align-items: center;
--    gap: 10px;
--}
--
--.stock-input {
--    width: 60%;
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #ccc;
--    border-radius: 5px;
--    outline: none;
--    resize: none;
--    height: 40px;
--}
--
--.stock-input:focus {
--    border-color: #8bc34a;
--}
--
--.save-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--/* Message styling for no items */
--.stock-list p {
--    text-align: center;
--    color: #666;
--    font-size: 16px;
--    margin: 20px 0;
--}
-\ No newline at end of file
-Index: src/main/java/servlet/UserProfileSearchServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/UserProfileSearchServlet.java b/src/main/java/servlet/UserProfileSearchServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/UserProfileSearchServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,93 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.User;
--
--import java.io.IOException;
--import java.time.LocalDateTime;
--import java.time.format.DateTimeFormatter;
--import java.util.List;
--import java.util.stream.Collectors;
--
--public class UserProfileSearchServlet extends HttpServlet {
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String DELIVERED_ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--    private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        HttpSession session = request.getSession();
--        User loggedInUser = (User) session.getAttribute("user");
--
--        if (loggedInUser == null) {
--            response.sendRedirect(request.getContextPath() + "/userLogin/login.jsp");
--            return;
--        }
--
--        String userNumber = loggedInUser.getUserNumber();
--        String tab = request.getParameter("tab") != null ? request.getParameter("tab") : "Active";
--        String searchQuery = request.getParameter("searchQuery");
--
--        List<FileUtil.Order> orders;
--        if ("Delivered".equalsIgnoreCase(tab)) {
--            orders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--        } else {
--            orders = FileUtil.readAllOrders(ORDERS_FILE);
--        }
--
--        // Filter orders by userNumber
--        orders = orders.stream()
--                .filter(order -> userNumber.equals(order.getUserNumber()))
--                .collect(Collectors.toList());
--
--        // Apply search filter if searchQuery is provided
--        if (searchQuery != null && !searchQuery.trim().isEmpty()) {
--            String query = searchQuery.trim().toLowerCase();
--            orders = orders.stream()
--                    .filter(order -> order.getOrderNumber().toLowerCase().contains(query))
--                    .collect(Collectors.toList());
--        }
--
--        // Sort orders based on the tab
--        if ("Delivered".equalsIgnoreCase(tab)) {
--            // Sort by deliveredDate (newest first)
--            orders.sort((o1, o2) -> {
--                try {
--                    // Handle null or empty deliveredDate
--                    if (o1.getDeliveredDate() == null || o1.getDeliveredDate().isEmpty()) return 1;
--                    if (o2.getDeliveredDate() == null || o2.getDeliveredDate().isEmpty()) return -1;
--
--                    LocalDateTime date1 = LocalDateTime.parse(o1.getDeliveredDate(), DATE_TIME_FORMATTER);
--                    LocalDateTime date2 = LocalDateTime.parse(o2.getDeliveredDate(), DATE_TIME_FORMATTER);
--                    return date2.compareTo(date1); // Newest first (descending)
--                } catch (Exception e) {
--                    System.err.println("Error parsing deliveredDate: " + e.getMessage());
--                    return 0; // If parsing fails, treat as equal
--                }
--            });
--        } else {
--            // Sort by confirmationDate (oldest first) for Active tab
--            orders.sort((o1, o2) -> {
--                try {
--                    LocalDateTime date1 = LocalDateTime.parse(o1.getConfirmationDate(), DATE_TIME_FORMATTER);
--                    LocalDateTime date2 = LocalDateTime.parse(o2.getConfirmationDate(), DATE_TIME_FORMATTER);
--                    return date1.compareTo(date2); // Oldest first (ascending)
--                } catch (Exception e) {
--                    System.err.println("Error parsing confirmationDate: " + e.getMessage());
--                    return 0; // If parsing fails, treat as equal
--                }
--            });
--        }
--
--
--        // Set attributes and forward to JSP
--        request.setAttribute("orders", orders);
--        request.setAttribute("activeTab", tab);
--        request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/orderCancel.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/orderCancel.jsp b/target/OnlineGroceryOrderSystem/adminPages/orderCancel.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/orderCancel.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,141 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <%
--        String userNumber = request.getParameter("userNumber");
--        String source = request.getParameter("source");
--        String backLink = userNumber != null ?
--                "/UserAdminServlet?action=info&userNumber=" + userNumber + "&tab=" + ("active".equalsIgnoreCase(source) ? "Active" : "Delivered") :
--                "/UserAdminServlet";
--    %>
--    <a href="${pageContext.request.contextPath}<%= backLink %>" class="back-link"><i class="fas fa-arrow-left"></i></a>
--    <a class="logo"><i class="fa-solid fa-basket-shopping"></i> Order Details - Admin</a>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="activity-section">
--            <div class="section-header">
--                <%
--                    // File paths
--                    String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--                    String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--                    // Get the orderNumber from the request
--                    String orderNumber = request.getParameter("orderNumber");
--                    if (orderNumber == null || orderNumber.trim().isEmpty()) {
--                %>
--                <p class="error-message">Error: Invalid order number.</p>
--                <%
--                } else {
--                    // Read the order from orders.txt
--                    List<Order> orders = FileUtil.readAllOrders(ordersFile);
--                    Order order = null;
--                    for (Order o : orders) {
--                        if (o.getOrderNumber().equals(orderNumber)) {
--                            order = o;
--                            break;
--                        }
--                    }
--
--                    if (order == null) {
--                %>
--                <p class="error-message">Error: Order not found.</p>
--                <%
--                } else {
--                %>
--                <h2>Active Order Products</h2>
--                <%
--                        }
--                    }
--                %>
--            </div>
--            <div class="activity-list">
--                <%
--                    if (orderNumber != null && !orderNumber.trim().isEmpty()) {
--                        List<Order> orders = FileUtil.readAllOrders(ordersFile);
--                        Order order = null;
--                        for (Order o : orders) {
--                            if (o.getOrderNumber().equals(orderNumber)) {
--                                order = o;
--                                break;
--                            }
--                        }
--
--                        if (order != null) {
--                            // Read items from items.txt to get product details
--                            List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                            if (items == null) {
--                                items = new ArrayList<>();
--                            }
--
--                            // Calculate total quantity and total price
--                            int totalQuantity = 0;
--                            double totalPrice = order.getTotalPrice();
--                            List<String[]> products = order.getProducts();
--
--                            // Display each product in the order
--                            for (String[] product : products) {
--                                String productID = product[0];
--                                int quantity = Integer.parseInt(product[1]);
--                                totalQuantity += quantity;
--
--                                // Find the product in items.txt to get its details
--                                GroceryItem item = null;
--                                for (GroceryItem groceryItem : items) {
--                                    if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                                        item = groceryItem;
--                                        break;
--                                    }
--                                }
--
--                                if (item != null) {
--                                    double itemTotalPrice = item.getProductPrice() * quantity;
--                %>
--                <div class="activity-item">
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="activity-item-img">
--                    <p>
--                        <%= item.getProductName() %> - RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %>
--                        (Total: RS. <%= String.format("%.2f", itemTotalPrice) %>)
--                    </p>
--                    <span class="timestamp">
--                            <%= order.getConfirmationDate() %>
--                        </span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--                <div class="total-info">
--                    <span>Total Quantity: <%= totalQuantity %></span>
--                    <span>Total Price: RS. <%= String.format("%.2f", totalPrice) %></span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--            </div>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/orderDashboard.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/orderDashboard.css b/target/OnlineGroceryOrderSystem/css/orderDashboard.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/orderDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,208 +0,0 @@
--/* Import Poppins font to match adminPage.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5; /* Match adminPage.css background */
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling to match adminPage.css */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95); /* White background */
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.nav-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    padding: 8px 16px;
--    transition: color 0.3s ease, background-color 0.3s ease;
--    border-radius: 20px; /* Rounded edges for Active, Delivered, Cancelled buttons */
--}
--
--.nav-link:hover {
--    color: #8bc34a;
--    background-color: #e9ecef; /* Light gray background on hover */
--}
--
--.nav-link.active {
--    background-color: #8bc34a; /* Green background for active tab */
--    color: white;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px; /* Fixed width to ensure circular shape */
--    height: 40px; /* Fixed height to ensure circular shape */
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%; /* Apply border-radius at all times */
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a; /* Green toolbox icon */
--    margin-right: 5px;
--}
--
--/* Order Section Styling */
--.order-section {
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333; /* Match adminPage.css text color */
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 40px 8px 10px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
--}
--
--.search-bar i {
--    position: absolute;
--    right: 10px;
--    color: #666;
--}
--
--.order-list {
--    background-color: rgba(255, 255, 255, 0.95); /* Match adminPage.css container background */
--    border-radius: 10px; /* Slightly larger radius for a softer look */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 15px;
--}
--
--.order-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px; /* Add gap between rows */
--    border-radius: 8px; /* Round the corners of each order row */
--    background-color: #fff; /* White background for each row to make rounded corners visible */
--    transition: background-color 0.3s ease; /* Smooth hover effect */
--}
--
--.order-row:hover {
--    /*background-color: #f8f9fa; !* Light gray background on hover *!*/
--    background-color:#dddddd ;
--}
--
--.order-row:last-child {
--    margin-bottom: 0; /* Remove margin-bottom for the last row to avoid extra space */
--}
--
--.order-row i {
--    margin-right: 10px;
--    color: #666;
--    font-size: 18px; /* Slightly larger icon for better visibility */
--}
--
--.order-id {
--    font-weight: bold;
--    margin-right: 5px;
--    color: #333; /* Match adminPage.css text color */
--}
--
--.status {
--    padding: 5px 10px;
--    border-radius: 15px;
--    font-size: 14px;
--    margin-left: 5px;
--}
--
--.status.pending {
--    background-color: #ffcc00;
--    color: white;
--}
--
--.status.cancelled {
--    background-color: #dc3545;
--    color: white;
--}
--
--.status.delivered {
--    background-color: #28a745;
--    color: white;
--}
--
--.info-btn {
--    margin-left: auto;
--    padding: 6px 12px;
--    background-color: #17a2b8;
--    text-decoration: none;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.info-btn:hover {
--    background-color: #138496;
--}
--
--.order-details {
--    margin-top: 10px;
--    padding: 15px;
--    background-color: #f8f9fa;
--    border-radius: 5px;
--}
-\ No newline at end of file
-Index: src/main/webapp/adminPages/orderCancel.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/orderCancel.jsp b/src/main/webapp/adminPages/orderCancel.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/orderCancel.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,141 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <meta name="viewport" content="width=device-width, initial-scale=1.0">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--    <%
--        String userNumber = request.getParameter("userNumber");
--        String source = request.getParameter("source");
--        String backLink = userNumber != null ?
--                "/UserAdminServlet?action=info&userNumber=" + userNumber + "&tab=" + ("active".equalsIgnoreCase(source) ? "Active" : "Delivered") :
--                "/UserAdminServlet";
--    %>
--    <a href="${pageContext.request.contextPath}<%= backLink %>" class="back-link"><i class="fas fa-arrow-left"></i></a>
--    <a class="logo"><i class="fa-solid fa-basket-shopping"></i> Order Details - Admin</a>
--</header>
--
--<div class="content">
--    <div class="profile-container">
--        <div class="activity-section">
--            <div class="section-header">
--                <%
--                    // File paths
--                    String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--                    String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--                    // Get the orderNumber from the request
--                    String orderNumber = request.getParameter("orderNumber");
--                    if (orderNumber == null || orderNumber.trim().isEmpty()) {
--                %>
--                <p class="error-message">Error: Invalid order number.</p>
--                <%
--                } else {
--                    // Read the order from orders.txt
--                    List<Order> orders = FileUtil.readAllOrders(ordersFile);
--                    Order order = null;
--                    for (Order o : orders) {
--                        if (o.getOrderNumber().equals(orderNumber)) {
--                            order = o;
--                            break;
--                        }
--                    }
--
--                    if (order == null) {
--                %>
--                <p class="error-message">Error: Order not found.</p>
--                <%
--                } else {
--                %>
--                <h2>Active Order Products</h2>
--                <%
--                        }
--                    }
--                %>
--            </div>
--            <div class="activity-list">
--                <%
--                    if (orderNumber != null && !orderNumber.trim().isEmpty()) {
--                        List<Order> orders = FileUtil.readAllOrders(ordersFile);
--                        Order order = null;
--                        for (Order o : orders) {
--                            if (o.getOrderNumber().equals(orderNumber)) {
--                                order = o;
--                                break;
--                            }
--                        }
--
--                        if (order != null) {
--                            // Read items from items.txt to get product details
--                            List<GroceryItem> items = FileUtil.readItems(itemsFile);
--                            if (items == null) {
--                                items = new ArrayList<>();
--                            }
--
--                            // Calculate total quantity and total price
--                            int totalQuantity = 0;
--                            double totalPrice = order.getTotalPrice();
--                            List<String[]> products = order.getProducts();
--
--                            // Display each product in the order
--                            for (String[] product : products) {
--                                String productID = product[0];
--                                int quantity = Integer.parseInt(product[1]);
--                                totalQuantity += quantity;
--
--                                // Find the product in items.txt to get its details
--                                GroceryItem item = null;
--                                for (GroceryItem groceryItem : items) {
--                                    if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                                        item = groceryItem;
--                                        break;
--                                    }
--                                }
--
--                                if (item != null) {
--                                    double itemTotalPrice = item.getProductPrice() * quantity;
--                %>
--                <div class="activity-item">
--                    <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="activity-item-img">
--                    <p>
--                        <%= item.getProductName() %> - RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %>
--                        (Total: RS. <%= String.format("%.2f", itemTotalPrice) %>)
--                    </p>
--                    <span class="timestamp">
--                            <%= order.getConfirmationDate() %>
--                        </span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--                <div class="total-info">
--                    <span>Total Quantity: <%= totalQuantity %></span>
--                    <span>Total Price: RS. <%= String.format("%.2f", totalPrice) %></span>
--                </div>
--                <%
--                        }
--                    }
--                %>
--            </div>
--        </div>
--    </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/java/servlet/UserProfileServlet.java
-===================================================================
-diff --git a/src/main/java/servlet/UserProfileServlet.java b/src/main/java/servlet/UserProfileServlet.java
-deleted file mode 100644
---- a/src/main/java/servlet/UserProfileServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,244 +0,0 @@
--package servlet;
--
--import jakarta.servlet.ServletException;
--import jakarta.servlet.http.HttpServlet;
--import jakarta.servlet.http.HttpServletRequest;
--import jakarta.servlet.http.HttpServletResponse;
--import jakarta.servlet.http.HttpSession;
--import model.FileUtil;
--import model.User;
--
--import java.io.*;
--import java.time.LocalDateTime;
--import java.time.format.DateTimeFormatter;
--import java.util.List;
--import java.util.stream.Collectors;
--
--public class UserProfileServlet extends HttpServlet {
--    private static final String USERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/users.txt";
--    private static final String LOGGED_IN_USER_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/loggedInUser.txt";
--    private static final String ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--    private static final String DELIVERED_ORDERS_FILE = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/deliveredOrders.txt";
--    private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
--
--    @Override
--    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        HttpSession session = request.getSession();
--        User loggedInUser = (User) session.getAttribute("user");
--
--        if (loggedInUser == null) {
--            response.sendRedirect(request.getContextPath() + "/userLogin/login.jsp");
--            return;
--        }
--
--        String action = request.getParameter("action");
--
--        if ("save".equals(action)) {
--            // Update user profile
--            String fullName = request.getParameter("fullName");
--            String address = request.getParameter("address");
--            String phoneNumber = request.getParameter("phoneNumber");
--
--            if (fullName == null || address == null || phoneNumber == null ||
--                    fullName.trim().isEmpty() || address.trim().isEmpty() || phoneNumber.trim().isEmpty()) {
--                request.setAttribute("error", "All fields are required.");
--                request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--                return;
--            }
--
--            synchronized (this) {
--                List<User> users = FileUtil.readUsers(USERS_FILE);
--                if (users == null) {
--                    request.setAttribute("error", "Error reading user data. Please try again later.");
--                    request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--                    return;
--                }
--
--                // Update the user's details
--                for (User user : users) {
--                    if (user.getUserNumber().equals(loggedInUser.getUserNumber())) {
--                        user.setFullName(fullName);
--                        user.setAddress(address);
--                        user.setPhoneNumber(phoneNumber);
--                        break;
--                    }
--                }
--
--                // Write updated users back to file
--                FileUtil.writeUsers(USERS_FILE, users);
--
--                // Update logged-in user
--                loggedInUser.setFullName(fullName);
--                loggedInUser.setAddress(address);
--                loggedInUser.setPhoneNumber(phoneNumber);
--                FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, loggedInUser);
--                session.setAttribute("user", loggedInUser);
--            }
--
--            response.sendRedirect(request.getContextPath() + "/UserProfileServlet");
--        } else if ("delete".equals(action)) {
--            // Delete user account
--            synchronized (this) {
--                List<User> users = FileUtil.readUsers(USERS_FILE);
--                if (users != null) {
--                    users.removeIf(user -> user.getUserNumber().equals(loggedInUser.getUserNumber()));
--                    FileUtil.writeUsers(USERS_FILE, users);
--                }
--
--                FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);
--                session.invalidate();
--            }
--
--            response.sendRedirect(request.getContextPath() + "/index.jsp");
--        }
--    }
--
--    @Override
--    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        HttpSession session = request.getSession();
--        User loggedInUser = (User) session.getAttribute("user");
--
--        if (loggedInUser == null) {
--            response.sendRedirect(request.getContextPath() + "/userLogin/login.jsp");
--            return;
--        }
--
--        String action = request.getParameter("action");
--        if ("cancelOrder".equals(action)) {
--            String orderNumber = request.getParameter("orderNumber");
--            if (orderNumber == null || orderNumber.trim().isEmpty()) {
--                request.setAttribute("error", "Invalid order number.");
--                request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--                return;
--            }
--
--            synchronized (this) {
--                // Read all orders
--                List<FileUtil.Order> orders = FileUtil.readAllOrders(ORDERS_FILE);
--                FileUtil.Order orderToCancel = null;
--
--                // Find the order to cancel
--                for (FileUtil.Order order : orders) {
--                    if (order.getOrderNumber().equals(orderNumber)) {
--                        orderToCancel = order;
--                        break;
--                    }
--                }
--
--                if (orderToCancel == null) {
--                    request.setAttribute("error", "Order not found.");
--                    request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--                    return;
--                }
--
--                // Update order status to Cancelled and set deliveredDate
--                orderToCancel.setOrderStatus("Cancelled");
--                orderToCancel.setDeliveryStatus("Cancelled");
--                orderToCancel.setDeliveredDate(LocalDateTime.now().format(DATE_TIME_FORMATTER));
--
--                // Remove the order from orders.txt
--                orders.removeIf(order -> order.getOrderNumber().equals(orderNumber));
--
--                // Rewrite orders.txt without the cancelled order
--                try (BufferedWriter writer = new BufferedWriter(new FileWriter(ORDERS_FILE, false))) {
--                    for (FileUtil.Order order : orders) {
--                        writer.write("--- Order Start: " + order.getOrderNumber() + " ---\n");
--                        writer.write("orderNumber=" + order.getOrderNumber() + "\n");
--                        writer.write("userNumber=" + order.getUserNumber() + "\n");
--                        writer.write("name=" + (order.getFullName() != null ? order.getFullName() : "") + "\n");
--                        writer.write("phoneNum=" + (order.getPhoneNum() != null ? order.getPhoneNum() : "") + "\n");
--                        writer.write("address=" + (order.getAddress() != null ? order.getAddress() : "") + "\n");
--                        writer.write("deliveryMethod=" + (order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "") + "\n");
--                        writer.write("paymentMethod=" + (order.getPaymentMethod() != null ? order.getPaymentMethod() : "") + "\n");
--                        writer.write("deliveryDate=" + (order.getDeliveryDate() != null ? order.getDeliveryDate() : "") + "\n");
--                        writer.write("confirmationDate=" + (order.getConfirmationDate() != null ? order.getConfirmationDate() : "") + "\n");
--                        writer.write("paymentStatus=" + (order.getPaymentStatus() != null ? order.getPaymentStatus() : "") + "\n");
--                        writer.write("deliveryStatus=" + (order.getDeliveryStatus() != null ? order.getDeliveryStatus() : "") + "\n");
--                        writer.write("orderStatus=" + (order.getOrderStatus() != null ? order.getOrderStatus() : "") + "\n");
--                        writer.write("deliveredDate=" + (order.getDeliveredDate() != null ? order.getDeliveredDate() : "") + "\n");
--                        writer.write("[products]\n");
--                        for (String[] product : order.getProducts()) {
--                            writer.write("productID=" + product[0] + ", quantity=" + product[1] + "\n");
--                        }
--                        writer.write("[total]\n");
--                        writer.write("totalPrice=" + String.format("%.2f", order.getTotalPrice()) + "\n");
--                        writer.write("--- Order End ---\n");
--                        writer.write("\n");
--                    }
--                } catch (IOException e) {
--                    System.err.println("Error rewriting orders file: " + e.getMessage());
--                    request.setAttribute("error", "Error cancelling order.");
--                    request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--                    return;
--                }
--
--                // Append the cancelled order to deliveredOrders.txt
--                FileUtil.writeDeliveredOrder(DELIVERED_ORDERS_FILE, orderToCancel);
--            }
--
--            // Redirect back to the user profile page with the Active tab
--            response.sendRedirect(request.getContextPath() + "/UserProfileSearchServlet?tab=Active");
--        } else {
--            // Load orders for the initial page load (default to Active tab)
--            String userNumber = loggedInUser.getUserNumber();
--            String tab = request.getParameter("tab") != null ? request.getParameter("tab") : "Active"; // Default to Active tab
--
--            List<FileUtil.Order> orders;
--            if ("Delivered".equalsIgnoreCase(tab)) {
--                // Read delivered orders
--                orders = FileUtil.readAllDeliveredOrders(DELIVERED_ORDERS_FILE);
--            } else {
--                // Read active orders (default to "Active" tab)
--                orders = FileUtil.readAllOrders(ORDERS_FILE);
--            }
--
--            // Filter orders by userNumber
--            orders = orders.stream()
--                    .filter(order -> userNumber.equals(order.getUserNumber()))
--                    .collect(Collectors.toList());
--
--            // Sort orders based on the tab
--            if ("Delivered".equalsIgnoreCase(tab)) {
--                // Sort by deliveredDate (newest first)
--                orders.sort((o1, o2) -> {
--                    try {
--                        // Handle null or empty deliveredDate
--                        if (o1.getDeliveredDate() == null || o1.getDeliveredDate().isEmpty()) return 1;
--                        if (o2.getDeliveredDate() == null || o2.getDeliveredDate().isEmpty()) return -1;
--
--                        LocalDateTime date1 = LocalDateTime.parse(o1.getDeliveredDate(), DATE_TIME_FORMATTER);
--                        LocalDateTime date2 = LocalDateTime.parse(o2.getDeliveredDate(), DATE_TIME_FORMATTER);
--                        return date2.compareTo(date1); // Newest first (descending)
--                    } catch (Exception e) {
--                        System.err.println("Error parsing deliveredDate: " + e.getMessage());
--                        return 0; // If parsing fails, treat as equal
--                    }
--                });
--            } else {
--                // Sort by confirmationDate (oldest first) for Active tab
--                orders.sort((o1, o2) -> {
--                    try {
--                        LocalDateTime date1 = LocalDateTime.parse(o1.getConfirmationDate(), DATE_TIME_FORMATTER);
--                        LocalDateTime date2 = LocalDateTime.parse(o2.getConfirmationDate(), DATE_TIME_FORMATTER);
--                        return date1.compareTo(date2); // Oldest first (ascending)
--                    } catch (Exception e) {
--                        System.err.println("Error parsing confirmationDate: " + e.getMessage());
--                        return 0; // If parsing fails, treat as equal
--                    }
--                });
--            }
--
--            // Removed the 5-order limit
--            // if (orders.size() > 5) {
--            //     orders = orders.subList(0, 5);
--            // }
--
--            // Set the orders and active tab as request attributes
--            request.setAttribute("orders", orders);
--            request.setAttribute("activeTab", tab);
--
--            // Forward to userProfile.jsp
--            request.getRequestDispatcher("/userLogin/userProfile.jsp").forward(request, response);
--        }
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/userLogin/orderCancel.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/orderCancel.jsp b/target/OnlineGroceryOrderSystem/userLogin/orderCancel.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/userLogin/orderCancel.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,123 +0,0 @@
--<%@ page contentType="text/html;charset=UTF-8" language="java" %>
--<%@ page import="model.FileUtil" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="model.GroceryItem" %>
--<%@ page import="java.util.List" %>
--<%@ page import="java.util.ArrayList" %>
--<!DOCTYPE html>
--<html>
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>Cancel Order - Grocery</title>
--  <base href="${pageContext.request.contextPath}/">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/cart.css">
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderCancel.css">
--  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/UserProfileServlet" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="logo"><i class="fa-solid fa-basket-shopping"></i> Grocery</a>
--</header>
--
--<section class="cancel-container">
--  <div class="order-section">
--    <h2 class="section-title">Ordered Products</h2>
--    <div class="order-items" id="order-items">
--      <%
--        // File paths
--        String ordersFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/orders.txt";
--        String itemsFile = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--
--        // Get the orderNumber from the request
--        String orderNumber = request.getParameter("orderNumber");
--        if (orderNumber == null || orderNumber.trim().isEmpty()) {
--      %>
--      <p>Error: Invalid order number.</p>
--      <%
--      } else {
--        // Read the order from orders.txt
--        List<Order> orders = FileUtil.readAllOrders(ordersFile);
--        Order order = null;
--        for (Order o : orders) {
--          if (o.getOrderNumber().equals(orderNumber)) {
--            order = o;
--            break;
--          }
--        }
--
--        if (order == null) {
--      %>
--      <p>Error: Order not found.</p>
--      <%
--      } else {
--        // Read items from items.txt to get product details
--        List<GroceryItem> items = FileUtil.readItems(itemsFile);
--        if (items == null) {
--          items = new ArrayList<>();
--        }
--
--        // Calculate total quantity and total price
--        int totalQuantity = 0;
--        double totalPrice = order.getTotalPrice();
--        List<String[]> products = order.getProducts();
--
--        // Display each product in the order
--        for (String[] product : products) {
--          String productID = product[0];
--          int quantity = Integer.parseInt(product[1]);
--          totalQuantity += quantity;
--
--          // Find the product in items.txt to get its details
--          GroceryItem item = null;
--          for (GroceryItem groceryItem : items) {
--            if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--              item = groceryItem;
--              break;
--            }
--          }
--
--          if (item != null) {
--            double itemTotalPrice = item.getProductPrice() * quantity;
--      %>
--      <div class="order-item">
--        <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--        <div class="order-item-details">
--          <span class="order-product-title"><%= item.getProductName() %></span>
--          <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--          <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--        </div>
--      </div>
--      <%
--          }
--        }
--      %>
--    </div>
--  </div>
--
--  <div class="cancel-form">
--    <h2 class="section-title">CANCEL ORDER</h2>
--    <form action="${pageContext.request.contextPath}/UserProfileServlet" method="get" id="cancel-form">
--      <input type="hidden" name="action" value="cancelOrder">
--      <input type="hidden" name="orderNumber" value="<%= orderNumber %>">
--      <div class="total-info" id="total-info">
--        <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--        <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--      </div>
--      <button type="submit" class="cancel-btn">CANCEL</button>
--    </form>
--  </div>
--  <%
--      }
--    }
--  %>
--</section>
--
--<script src="${pageContext.request.contextPath}/js/orderCancel.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/productDashboard.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/productDashboard.css b/target/OnlineGroceryOrderSystem/css/productDashboard.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/productDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,325 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as stockDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 16px 8px 40px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--}
--
--.search-bar input:focus {
--    border-color: #8bc34a;
--}
--
--.search-bar i {
--    position: absolute;
--    left: 12px;
--    color: #666;
--    font-size: 16px;
--}
--
--/* Product Section */
--.product-section {
--    max-width: 1200px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--    margin: 0;
--}
--
--.add-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    text-decoration: none;
--    border-radius: 15px;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.add-btn:hover {
--    background-color: #6b9e38;
--}
--
--.product-list {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--}
--
--.product-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 10px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.product-row:hover {
--    /*background-color: #f8f9fa;*/
--    background-color: #dddddd ;
--}
--
--.product-row:last-child {
--    margin-bottom: 0;
--}
--
--.product-id {
--    width: 10%;
--    font-weight: bold;
--    color: #333;
--}
--
--.product-image {
--    width: 10%;
--}
--
--.item-image {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    vertical-align: middle;
--}
--
--.product-name {
--    width: 15%;
--    color: #333;
--}
--
--.product-category {
--    width: 15%;
--    color: #666;
--}
--
--.product-price {
--    width: 10%;
--    color: #333;
--}
--
--.product-quantity {
--    width: 10%;
--    color: #333;
--}
--
--.product-description {
--    width: 20%;
--    color: #666;
--}
--
--.info-btn {
--    width: 10%;
--    padding: 8px 16px;
--    background-color: #007bff;
--    color: white;
--    text-decoration: none;
--    border-radius: 15px;
--    text-align: center;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.info-btn:hover {
--    background-color: #0056b3;
--}
--
--/* Message styling for no products */
--.product-list p {
--    text-align: center;
--    color: #666;
--    font-size: 16px;
--    margin: 20px 0;
--}
--
--/* Product Info Section (for productDashboardInfo.jsp) */
--.product-info-section {
--    max-width: 600px;
--    margin: 40px auto;
--    padding: 20px;
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.product-image-preview {
--    text-align: center;
--    margin-bottom: 20px;
--}
--
--.product-image-preview img {
--    max-width: 200px;
--    max-height: 200px;
--    object-fit: cover;
--    border-radius: 10px;
--}
--
--.product-image-preview p {
--    color: #666;
--    font-size: 16px;
--}
--
--.product-form {
--    display: flex;
--    flex-direction: column;
--    gap: 15px;
--}
--
--.form-group {
--    display: flex;
--    align-items: center;
--    gap: 10px;
--}
--
--.form-group label {
--    width: 30%;
--    font-weight: 500;
--    color: #333;
--}
--
--.form-group input,
--.form-group textarea,
--.form-group span {
--    width: 70%;
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #ccc;
--    border-radius: 5px;
--    outline: none;
--}
--
--.form-group textarea {
--    resize: vertical;
--    height: 60px;
--}
--
--.form-group input:focus,
--.form-group textarea:focus {
--    border-color: #8bc34a;
--}
--
--.form-group span {
--    background-color: #f0f0f0;
--    border: none;
--}
--
--.form-actions {
--    display: flex;
--    justify-content: space-between;
--}
--
--.save-btn {
--    padding: 10px 20px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--.delete-btn {
--    padding: 10px 20px;
--    background-color: #dc3545;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.delete-btn:hover {
--    background-color: #b02a37;
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/orderDashboardInfo.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/orderDashboardInfo.jsp b/target/OnlineGroceryOrderSystem/adminPages/orderDashboardInfo.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/orderDashboardInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,200 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.FileUtil, model.FileUtil.Order, model.User, model.GroceryItem, java.util.List, java.util.ArrayList" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Order Details - Admin</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderDashboardInfo.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/orderDashboardInfo.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check session attributes
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "order".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Get request attributes
--    Order order = (Order) request.getAttribute("order");
--    User user = (User) request.getAttribute("user");
--    String tab = (String) request.getAttribute("tab");
--
--    if (order == null || user == null || tab == null) {
--        response.sendRedirect(request.getContextPath() + "/OrderAdminServlet?error=missingData");
--        return;
--    }
--
--    // Debug: Print the tab value to confirm it's correct
--    System.out.println("orderDashboardInfo.jsp - Tab value: " + tab);
--
--    String sectionTitle = "Ordered Products";
--    if ("delivered".equalsIgnoreCase(tab)) {
--        sectionTitle = "Delivered Products";
--    } else if ("cancelled".equalsIgnoreCase(tab)) {
--        sectionTitle = "Cancelled Products";
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/OrderAdminServlet?tab=<%= java.net.URLEncoder.encode(tab, "UTF-8") %>" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--        <a href="#" class="nav-link <%= "active".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('active')">Active</a>
--        <a href="#" class="nav-link <%= "delivered".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('delivered')">Delivered</a>
--        <a href="#" class="nav-link <%= "cancelled".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('cancelled')">Cancelled</a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-box"></i> Order Admin Dashboard
--    </div>
--</header>
--
--<section class="info-container">
--    <!-- User Info Section -->
--    <div class="user-info">
--        <h2>User Info</h2>
--        <div class="user-details">
--            <i class="fas fa-user-circle user-icon"></i>
--            <div class="details">
--                <p><strong>User Number:</strong> <%= user.getUserNumber() %></p>
--                <p><strong>Email:</strong> <%= user.getEmail() %></p>
--                <p><strong>Full Name:</strong> <%= user.getFullName() %></p>
--                <p><strong>Address:</strong> <%= user.getAddress() %></p>
--                <p><strong>Phone Number:</strong> <%= user.getPhoneNumber() %></p>
--            </div>
--        </div>
--    </div>
--
--    <!-- Order Info Section -->
--    <div class="order-info">
--        <h2 class="section-title"><%= sectionTitle %></h2>
--        <div class="order-items">
--            <%
--                // Use relative path for items.txt
--                String itemsFile = application.getRealPath("/data/items.txt");
--                List<GroceryItem> items = null;
--                try {
--                    items = FileUtil.readItems(itemsFile);
--                } catch (Exception e) {
--                    out.println("Error reading items: " + e.getMessage());
--                }
--                if (items == null) {
--                    items = new ArrayList<>();
--                }
--
--                int totalQuantity = 0;
--                double totalPrice = order.getTotalPrice();
--                List<String[]> products = order.getProducts();
--
--                for (String[] product : products) {
--                    String productID = product[0];
--                    int quantity = Integer.parseInt(product[1]);
--                    totalQuantity += quantity;
--
--                    GroceryItem item = null;
--                    for (GroceryItem groceryItem : items) {
--                        if (String.valueOf(groceryItem.getProductID()).equals(productID)) {
--                            item = groceryItem;
--                            break;
--                        }
--                    }
--
--                    if (item != null) {
--                        double itemTotalPrice = item.getProductPrice() * quantity;
--            %>
--            <div class="order-item">
--                <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="order-item-img">
--                <div class="order-item-details">
--                    <span class="order-product-title"><%= item.getProductName() %></span>
--                    <span class="order-price">RS. <%= String.format("%.2f", item.getProductPrice()) %> / Product X <%= quantity %></span>
--                    <span class="order-total">RS. <%= String.format("%.2f", itemTotalPrice) %></span>
--                </div>
--            </div>
--            <%
--                    }
--                }
--            %>
--        </div>
--        <div class="total-info">
--            <span>Total Quantity: <span id="total-quantity"><%= totalQuantity %></span></span>
--            <span>Total Price: RS. <span id="total-price"><%= String.format("%.2f", totalPrice) %></span></span>
--        </div>
--    </div>
--
--    <!-- Status Update Section -->
--    <div class="status-update">
--        <h3>Update Order Status</h3>
--        <form action="${pageContext.request.contextPath}/OrderAdminServlet" method="post">
--            <input type="hidden" name="action" value="updateStatus">
--            <input type="hidden" name="orderNumber" value="<%= order.getOrderNumber() %>">
--            <input type="hidden" name="tab" value="<%= tab %>">
--            <div class="status-field">
--                <label for="status">Order Status:</label>
--                <select name="status" id
--                        ="status" onchange="handleStatusChange()">
--                    <option value="Pending" <%= "Pending".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Pending</option>
--                    <option value="Delivered" <%= "Delivered".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Delivered</option>
--                    <option value="Cancelled" <%= "Cancelled".equalsIgnoreCase(order.getDeliveryStatus()) ? "selected" : "" %>>Cancelled</option>
--                </select>
--            </div>
--            <% if ("cash on delivery".equalsIgnoreCase(order.getPaymentMethod())) { %>
--            <div class="status-field">
--                <label for="paymentStatus">Payment Status:</label>
--                <select name="paymentStatus" id="paymentStatus">
--                    <option value="Pending" <%= "Pending".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Pending</option>
--                    <option value="Completed" <%= "Completed".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Completed</option>
--                    <option value="Cancelled" <%= "Cancelled".equalsIgnoreCase(order.getPaymentStatus()) ? "selected" : "" %>>Cancelled</option>
--                </select>
--            </div>
--            <% } %>
--            <button type="submit" class="save-btn">Save</button>
--        </form>
--    </div>
--
--    <!-- Order Stats Section -->
--    <div class="order-stats">
--        <h3>Order Stats</h3>
--        <div class="stats-container">
--            <div class="stat-box">
--                <span class="stat-label">Order Date</span>
--                <span class="stat-value"><%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Delivered Date</span>
--                <span class="stat-value"><%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Delivery Method</span>
--                <span class="stat-value"><%= order.getDeliveryMethod() != null ? order.getDeliveryMethod() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Payment Method</span>
--                <span class="stat-value"><%= order.getPaymentMethod() != null ? order.getPaymentMethod() : "N/A" %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Payment Status</span>
--                <span class="stat-value <%= order.getPaymentStatus().toLowerCase() %>"><%= order.getPaymentStatus() %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Status</span>
--                <span class="stat-value <%= order.getDeliveryStatus().toLowerCase() %>"><%= order.getDeliveryStatus() %></span>
--            </div>
--            <div class="stat-box">
--                <span class="stat-label">Order Number</span>
--                <span class="stat-value <%= order.getOrderNumber().toLowerCase() %>"><%= order.getOrderNumber() %></span>
--            </div>
--        </div>
--    </div>
--</section>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/data/deliveredOrders.txt
-===================================================================
-diff --git a/src/main/webapp/data/deliveredOrders.txt b/src/main/webapp/data/deliveredOrders.txt
-deleted file mode 100644
---- a/src/main/webapp/data/deliveredOrders.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,782 +0,0 @@
----- Order Start: OD631189062774 ---
--orderNumber=OD631189062774
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-21 13:23:38
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:54:19
--[products]
--productID=7, quantity=1
--[total]
--totalPrice=67.00
----- Order End ---
--
----- Order Start: OD682072780215 ---
--orderNumber=OD682072780215
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 13:23:29
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:23:29
--[products]
--productID=16, quantity=1
--[total]
--totalPrice=60.00
----- Order End ---
--
----- Order Start: OD029969353013 ---
--orderNumber=OD029969353013
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 13:27:28
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:27:28
--[products]
--productID=22, quantity=1
--[total]
--totalPrice=864.00
----- Order End ---
--
----- Order Start: OD263333171327 ---
--orderNumber=OD263333171327
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-21 13:27:16
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 16:27:16
--[products]
--productID=16, quantity=1
--[total]
--totalPrice=60.00
----- Order End ---
--
----- Order Start: OD018792948393 ---
--orderNumber=OD018792948393
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 18:45:46
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-21 21:45:46
--[products]
--productID=10, quantity=1
--productID=14, quantity=1
--productID=11, quantity=1
--productID=3, quantity=1
--productID=25, quantity=1
--productID=12, quantity=1
--productID=4, quantity=1
--productID=9, quantity=1
--productID=2, quantity=1
--productID=6, quantity=1
--productID=1, quantity=1
--productID=28, quantity=1
--productID=8, quantity=1
--productID=13, quantity=1
--productID=23, quantity=1
--productID=30, quantity=1
--productID=24, quantity=1
--productID=5, quantity=1
--productID=20, quantity=1
--productID=22, quantity=1
--productID=21, quantity=1
--productID=27, quantity=1
--productID=32, quantity=1
--productID=17, quantity=1
--productID=15, quantity=1
--productID=29, quantity=1
--productID=26, quantity=1
--[total]
--totalPrice=15424.00
----- Order End ---
--
----- Order Start: OD414731133584 ---
--orderNumber=OD414731133584
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:04
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:04
--[products]
--productID=13, quantity=1
--productID=8, quantity=1
--[total]
--totalPrice=547.00
----- Order End ---
--
----- Order Start: OD475907670530 ---
--orderNumber=OD475907670530
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:15
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:15
--[products]
--productID=20, quantity=1
--productID=22, quantity=1
--[total]
--totalPrice=1514.00
----- Order End ---
--
----- Order Start: OD501473252419 ---
--orderNumber=OD501473252419
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:41
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:42:43
--[products]
--productID=31, quantity=1
--[total]
--totalPrice=289.00
----- Order End ---
--
----- Order Start: OD540591659521 ---
--orderNumber=OD540591659521
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 19:31:28
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:31:28
--[products]
--productID=40, quantity=1
--[total]
--totalPrice=4999.00
----- Order End ---
--
----- Order Start: OD055993378831 ---
--orderNumber=OD055993378831
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:32:53
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:32:53
--[products]
--productID=47, quantity=1
--[total]
--totalPrice=40.00
----- Order End ---
--
----- Order Start: OD005277691952 ---
--orderNumber=OD005277691952
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:07
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 19:33:07
--[products]
--productID=37, quantity=1
--[total]
--totalPrice=4375.00
----- Order End ---
--
----- Order Start: OD112009552234 ---
--orderNumber=OD112009552234
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 21:45:01
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:45:01
--[products]
--productID=18, quantity=1
--productID=11, quantity=1
--[total]
--totalPrice=142.00
----- Order End ---
--
----- Order Start: OD730565057552 ---
--orderNumber=OD730565057552
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-22 21:45:25
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:45:25
--[products]
--productID=44, quantity=1
--[total]
--totalPrice=2242.00
----- Order End ---
--
----- Order Start: OD732940639288 ---
--orderNumber=OD732940639288
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 21:59:12
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-22 21:59:12
--[products]
--productID=36, quantity=1
--[total]
--totalPrice=3500.00
----- Order End ---
--
----- Order Start: OD196538863027 ---
--orderNumber=OD196538863027
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=scheduled
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-22 19:33:26
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 12:23:05
--[products]
--productID=34, quantity=1
--productID=36, quantity=3
--[total]
--totalPrice=14875.00
----- Order End ---
--
----- Order Start: OD158055702554 ---
--orderNumber=OD158055702554
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-26 17:26:42
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 17:26:42
--[products]
--productID=17, quantity=1
--[total]
--totalPrice=1200.00
----- Order End ---
--
----- Order Start: OD731201910824 ---
--orderNumber=OD731201910824
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-26 17:46:40
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:42:52
--[products]
--productID=17, quantity=1
--[total]
--totalPrice=1200.00
----- Order End ---
--
----- Order Start: OD506939152583 ---
--orderNumber=OD506939152583
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 16:06:12
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-25 16:06:12
--[products]
--productID=27, quantity=8
--productID=17, quantity=1
--[total]
--totalPrice=11896.00
----- Order End ---
--
----- Order Start: OD850214594981 ---
--orderNumber=OD850214594981
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-26 18:53:56
--paymentStatus=Paid
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 18:53:56
--[products]
--productID=11, quantity=1
--[total]
--totalPrice=118.00
----- Order End ---
--
----- Order Start: OD214566292753 ---
--orderNumber=OD214566292753
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-26 18:58:49
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-26 18:58:49
--[products]
--productID=6, quantity=1
--[total]
--totalPrice=260.00
----- Order End ---
--
----- Order Start: OD162989834688 ---
--orderNumber=OD162989834688
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-24 21:32:24
--paymentStatus=Pending
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-24 21:32:24
--[products]
--productID=12, quantity=1
--[total]
--totalPrice=139.00
----- Order End ---
--
----- Order Start: OD922831337574 ---
--orderNumber=OD922831337574
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-27 13:38:56
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 11:17:35
--[products]
--productID=11, quantity=6
--[total]
--totalPrice=708.00
----- Order End ---
--
----- Order Start: OD999111222333 ---
--orderNumber=OD999111222333
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=scheduled
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-24 10:00:00
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-27 14:00:00
--[products]
--productID=5, quantity=2
--[total]
--totalPrice=300.00
----- Order End ---
--
----- Order Start: OD444555666777 ---
--orderNumber=OD444555666777
--userNumber=US181627987900
--name=user
--phoneNum=0000000000
--address=xxxxxxxyyyyyyyzzzzzzzz
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 09:30:00
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-25 12:30:00
--[products]
--productID=8, quantity=1
--[total]
--totalPrice=275.00
----- Order End ---
--
----- Order Start: OD744649925723 ---
--orderNumber=OD744649925723
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 08:19:14
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-30 19:27:56
--[products]
--productID=18, quantity=1
--productID=47, quantity=9
--[total]
--totalPrice=384.00
----- Order End ---
--
----- Order Start: OD918259612180 ---
--orderNumber=OD918259612180
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-25 09:37:54
--paymentStatus=Paid
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-30 19:28:09
--[products]
--productID=7, quantity=1
--[total]
--totalPrice=67.00
----- Order End ---
--
----- Order Start: OD181572151420 ---
--orderNumber=OD181572151420
--userNumber=US030548082274
--name=jayashan guruge
--phoneNum=0764350677
--address="Sampatha"
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-25 10:09:03
--paymentStatus=Cancelled
--deliveryStatus=Cancelled
--orderStatus=cancelled
--deliveredDate=2025-03-25 10:09:03
--[products]
--productID=27, quantity=1
--[total]
--totalPrice=1337.00
----- Order End ---
--
----- Order Start: OD488567459491 ---
--orderNumber=OD488567459491
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-31 09:45:17
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:39:52
--[products]
--productID=21, quantity=1
--[total]
--totalPrice=1164.00
----- Order End ---
--
----- Order Start: OD898037967534 ---
--orderNumber=OD898037967534
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-31 09:54:35
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:52:29
--[products]
--productID=35, quantity=1
--[total]
--totalPrice=2250.00
----- Order End ---
--
----- Order Start: OD709699593942 ---
--orderNumber=OD709699593942
--userNumber=US021583101081
--name=aloka warnakula nethara
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-27 12:31:31
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 10:56:00
--[products]
--productID=38, quantity=1
--[total]
--totalPrice=1500.00
----- Order End ---
--
----- Order Start: OD496770012037 ---
--orderNumber=OD496770012037
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-21 18:43:30
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:12:14
--[products]
--productID=16, quantity=1
--productID=18, quantity=1
--productID=7, quantity=1
--productID=10, quantity=1
--[total]
--totalPrice=241.00
----- Order End ---
--
----- Order Start: OD700301789054 ---
--orderNumber=OD700301789054
--userNumber=US021583101081
--name=aloka warnakula nethara
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-27 12:49:09
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-03-31 12:32:08
--[products]
--productID=17, quantity=5
--[total]
--totalPrice=6000.00
----- Order End ---
--
----- Order Start: OD999617993294 ---
--orderNumber=OD999617993294
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-04-01 11:32:49
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 11:51:01
--[products]
--productID=7, quantity=3
--productID=15, quantity=4
--productID=9, quantity=1
--productID=2, quantity=3
--[total]
--totalPrice=6938.00
----- Order End ---
--
----- Order Start: OD405726526801 ---
--orderNumber=OD405726526801
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-03-30 19:47:00
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-01 12:16:52
--[products]
--productID=26, quantity=1
--productID=21, quantity=1
--productID=16, quantity=3
--[total]
--totalPrice=2874.00
----- Order End ---
--
----- Order Start: OD578414958670 ---
--orderNumber=OD578414958670
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-04-02 16:02:55
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-02 16:03:51
--[products]
--productID=32, quantity=9
--productID=3, quantity=20
--[total]
--totalPrice=14810.00
----- Order End ---
--
----- Order Start: OD929166235954 ---
--orderNumber=OD929166235954
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=same-day
--paymentMethod=online card
--deliveryDate=
--confirmationDate=2025-03-31 09:41:28
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-08 08:36:05
--[products]
--productID=15, quantity=1
--productID=9, quantity=1
--[total]
--totalPrice=1673.00
----- Order End ---
--
----- Order Start: OD997468229137 ---
--orderNumber=OD997468229137
--userNumber=US021583101081
--name=aloka warnakula
--phoneNum=0711641638
--address=21/6/6A, somanada mawatha, pitumpe, padukka
--deliveryMethod=store pickup
--paymentMethod=cash on delivery
--deliveryDate=
--confirmationDate=2025-04-13 18:41:19
--paymentStatus=Completed
--deliveryStatus=Delivered
--orderStatus=delivered
--deliveredDate=2025-04-13 18:42:11
--[products]
--productID=27, quantity=7
--[total]
--totalPrice=9359.00
----- Order End ---
--
-Index: src/main/webapp/adminPages/userInfo.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/userInfo.jsp b/src/main/webapp/adminPages/userInfo.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/userInfo.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,127 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.User, model.FileUtil.Order" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>User Information</title>
--  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userDashboard.css?v=<%= System.currentTimeMillis() %>">
--  <script src="${pageContext.request.contextPath}/js/userDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--  // Check if session attributes are set; if not, redirect to admin login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--
--  // Check if the user has the correct role (Super Admin)
--  String adminRole = (String) session.getAttribute("adminRole");
--  if (adminRole == null || !"super".equalsIgnoreCase(adminRole)) {
--    response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--    return;
--  }
--
--  User selectedUser = (User) request.getAttribute("selectedUser");
--  List<Order> activeOrders = (List<Order>) request.getAttribute("activeOrders");
--  List<Order> deliveredOrders = (List<Order>) request.getAttribute("deliveredOrders");
--  String errorMessage = (String) request.getAttribute("errorMessage");
--  String activeTab = request.getParameter("tab") != null ? request.getParameter("tab") : "Active";
--
--  if (selectedUser == null) {
--    response.sendRedirect(request.getContextPath() + "/UserAdminServlet?error=userNotFound");
--    return;
--  }
--%>
--<header>
--  <a href="${pageContext.request.contextPath}/UserAdminServlet" class="back-link"><i class="fas fa-arrow-left"></i></a>
--  <a class="logo"><i class="fa-solid fa-user"></i> User Information</a>
--</header>
--
--<div class="content">
--  <div class="profile-container">
--    <div class="user-info">
--      <div class="user-info-header">
--        <h2>User Info</h2>
--      </div>
--      <div class="user-details">
--        <div class="user-details-left">
--          <div class="user-icon">
--            <i class="fas fa-user-circle"></i>
--          </div>
--          <div class="user-details-text">
--            <p><strong>User Number:</strong> <span id="userNumberDisplay"><%= selectedUser.getUserNumber() != null ? selectedUser.getUserNumber() : "Not available" %></span></p>
--            <p><strong>Email:</strong> <span id="emailDisplay"><%= selectedUser.getEmail() %></span></p>
--            <p><strong>Full Name:</strong> <span id="fullNameDisplay"><%= selectedUser.getFullName() %></span></p>
--            <p><strong>Address:</strong> <span id="addressDisplay"><%= selectedUser.getAddress() != null ? selectedUser.getAddress() : "Not provided" %></span></p>
--            <p><strong>Phone Number:</strong> <span id="phoneNumberDisplay"><%= selectedUser.getPhoneNumber() %></span></p>
--          </div>
--        </div>
--      </div>
--    </div>
--  </div>
--
--  <div class="profile-container">
--    <div class="activity-section">
--      <div class="activity-tabs">
--        <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= selectedUser.getUserNumber() %>&tab=Active" class="tab <%= "Active".equals(activeTab) ? "active" : "" %>">Active</a>
--        <a href="${pageContext.request.contextPath}/UserAdminServlet?action=info&userNumber=<%= selectedUser.getUserNumber() %>&tab=Delivered" class="tab <%= "Delivered".equals(activeTab) ? "active" : "" %>">Delivered</a>
--        <div class="search-bar">
--          <form action="${pageContext.request.contextPath}/UserAdminServlet" method="get">
--            <input type="hidden" name="action" value="info">
--            <input type="hidden" name="userNumber" value="<%= selectedUser.getUserNumber() %>">
--            <input type="hidden" name="tab" value="<%= activeTab %>">
--            <input type="text" name="searchQuery" placeholder="Search OrderID" value="${param.searchQuery}">
--            <button type="submit"><i class="fas fa-search"></i></button>
--          </form>
--        </div>
--      </div>
--      <div class="activity-list">
--        <%
--          List<Order> orders = "Active".equals(activeTab) ? activeOrders : deliveredOrders;
--          if (orders == null || orders.isEmpty()) {
--        %>
--        <div class="activity-item">
--          <p>No orders found.</p>
--        </div>
--        <%
--        } else {
--          for (Order order : orders) {
--            String statusClass = "pending";
--            if ("Delivered".equalsIgnoreCase(order.getDeliveryStatus())) {
--              statusClass = "completed";
--            } else if ("Cancelled".equalsIgnoreCase(order.getOrderStatus())) {
--              statusClass = "disabled";
--            }
--        %>
--        <div class="activity-item">
--          <i class="fas fa-shopping-cart"></i>
--          <p>
--            Order <%= order.getOrderNumber() %> placed on <%= order.getConfirmationDate() %>
--            (Status: <span class="status <%= statusClass %>"><%= order.getDeliveryStatus() %></span>)
--            <a href="${pageContext.request.contextPath}/adminPages/orderCheck.jsp?orderNumber=<%= order.getOrderNumber() %>&userNumber=<%= selectedUser.getUserNumber() %>&source=<%= "Active".equals(activeTab) ? "active" : "delivered" %>" class="cancel-link">Info</a>
--          </p>
--          <span class="timestamp">
--                            <% if ("Delivered".equals(activeTab)) { %>
--                                <%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %>
--                            <% } else { %>
--                                <%= order.getConfirmationDate() %>
--                            <% } %>
--                        </span>
--        </div>
--        <%
--            }
--          }
--        %>
--      </div>
--    </div>
--  </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/orderCancel.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/orderCancel.css b/target/OnlineGroceryOrderSystem/css/orderCancel.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/orderCancel.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,189 +0,0 @@
--/* orderCancel.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--* {
--    font-family: 'Poppins', sans-serif;
--    margin: 0;
--    padding: 0;
--    box-sizing: border-box;
--}
--
--body {
--    background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg'); /* Adjust the path to your background image */
--    background-size: cover;
--    background-position: center;
--    background-repeat: no-repeat;
--    background-attachment: fixed;
--    min-height: 100vh;
--}
--
--header {
--    position: fixed;
--    top: 0;
--    left: 0;
--    width: 100%;
--    padding: 20px 9%;
--    background: #ffffff;
--    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
--    display: flex;
--    justify-content: space-between; /* Space between back-link and logo */
--    align-items: center;
--    z-index: 99;
--}
--
--.back-link {
--    font-size: 16px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 500;
--    display: flex;
--    align-items: center;
--}
--
--.back-link i {
--    margin-right: 5px;
--}
--
--.back-link:hover {
--    color: #27ae60;
--}
--
--.logo {
--    font-size: 18px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 600;
--    display: flex;
--    align-items: center;
--    position: absolute; /* Center the logo */
--    left: 50%;
--    transform: translateX(-50%); /* Center horizontally */
--}
--
--.logo i {
--    color: #27ae60;
--    margin-right: 5px;
--    font-size: 24px;
--}
--
--.cancel-container {
--    display: flex;
--    justify-content: space-between;
--    padding: 120px 9% 30px;
--    max-width: 1500px;
--    margin: 0 auto;
--}
--
--.order-section, .cancel-form {
--    flex: 1;
--    padding: 20px;
--}
--
--.order-section {
--    background: #fff;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    margin-right: 20px;
--}
--
--.cancel-form {
--    background: #6a5acd;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    padding: 30px;
--}
--
--.cancel-form .section-title {
--    color: #fff;
--    margin-bottom: 20px;
--    font-size: 30px;
--    text-align: center;
--}
--
--.order-items {
--    margin-bottom: 20px;
--    max-height: 400px; /* Limit the height to enable scrolling */
--    overflow-y: auto; /* Enable vertical scrolling */
--}
--
--.order-item {
--    display: flex;
--    align-items: center;
--    background: #fff;
--    padding: 10px;
--    border-radius: 10px;
--    margin-bottom: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #333;
--}
--
--.order-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 10px;
--    border-radius: 5px;
--    object-fit: cover;
--}
--
--.order-item-details {
--    flex-grow: 1;
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    width: 100%;
--}
--
--.order-product-title {
--    font-size: 16px;
--    font-weight: 500;
--    flex-shrink: 0;
--    margin-right: 10px;
--}
--
--.order-price {
--    font-size: 16px;
--    margin-right: 10px;
--}
--
--.order-total {
--    font-size: 16px;
--    font-weight: 500;
--    white-space: nowrap;
--}
--
--.total-info {
--    margin: 20px 0;
--    font-size: 16px;
--    color: #fff;
--}
--
--.total-info span {
--    display: block;
--    margin-bottom: 10px;
--}
--
--.cancel-btn {
--    width: 100%;
--    padding: 12px;
--    background: #e74c3c; /* Red color for cancel button */
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    color: #fff;
--    cursor: pointer;
--    transition: background 0.3s;
--}
--
--.cancel-btn:hover {
--    background: #c0392b; /* Darker red on hover */
--}
--
--@media screen and (max-width: 768px) {
--    .cancel-container {
--        flex-direction: column;
--    }
--    .order-section {
--        margin-right: 0;
--        margin-bottom: 20px;
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/js/userDashboard.js
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/js/userDashboard.js b/target/OnlineGroceryOrderSystem/js/userDashboard.js
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/js/userDashboard.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,17 +0,0 @@
--// Search users in userDashboard.jsp
--function searchUsers() {
--    const input = document.getElementById("user-search");
--    if (input) {
--        const searchValue = input.value.toLowerCase();
--        const userRows = document.getElementsByClassName("user-row");
--
--        for (let i = 0; i < userRows.length; i++) {
--            const userNumber = userRows[i].getAttribute("data-user-number").toLowerCase();
--            if (userNumber.includes(searchValue)) {
--                userRows[i].style.display = "";
--            } else {
--                userRows[i].style.display = "none";
--            }
--        }
--    }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/userLogin/userProfile.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/userProfile.jsp b/target/OnlineGroceryOrderSystem/userLogin/userProfile.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/userLogin/userProfile.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,162 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="model.User" %>
--<%@ page import="model.FileUtil.Order" %>
--<%@ page import="java.util.List" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <meta name="viewport" content="width=device-width, initial-scale=1.0">
--  <title>User Profile</title>
--  <link rel="stylesheet" href="${pageContext.request.contextPath}/css/userProfile.css">
--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<header>
--  <a href="${pageContext.request.contextPath}/index.jsp" class="back-link"><i class="fas fa-arrow-left"></i> Back</a>
--  <a  class="logo"><i class="fa-solid fa-user"></i> User Profile</a>
--<%--  <a href="${pageContext.request.contextPath}/index.jsp"></a>--%>
--</header>
--
--<div class="content">
--  <%
--    User loggedInUser = (User) session.getAttribute("user");
--    if (loggedInUser == null) {
--  %>
--  <p>You must be logged in to view this page.</p>
--  <p><a href="${pageContext.request.contextPath}/userLogin/login.jsp">Log In</a></p>
--  <% } else { %>
--  <div class="profile-container">
--    <div class="user-info">
--      <div class="user-info-header">
--        <h2>User Info</h2>
--        <button id="edit-btn" class="edit-btn"><i class="fas fa-edit"></i> Edit Profile</button>
--      </div>
--      <div class="user-details">
--        <div class="user-details-left">
--          <div class="user-icon">
--            <i class="fas fa-user-circle"></i>
--          </div>
--          <div class="user-details-text">
--            <p><strong>User Number:</strong> <span id="userNumberDisplay"><%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %></span></p>
--            <p><strong>Email:</strong> <span id="emailDisplay"><%= loggedInUser.getEmail() %></span></p>
--            <p><strong>Full Name:</strong> <span id="fullNameDisplay"><%= loggedInUser.getFullName() %></span></p>
--            <p><strong>Address:</strong> <span id="addressDisplay"><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "Not provided" %></span></p>
--            <p><strong>Phone Number:</strong> <span id="phoneNumberDisplay"><%= loggedInUser.getPhoneNumber() %></span></p>
--          </div>
--        </div>
--      </div>
--    </div>
--
--    <div id="profile-form-container" style="display: none;">
--      <form id="profile-form" action="${pageContext.request.contextPath}/UserProfileServlet" method="post">
--        <div class="form-group">
--          <label for="userNumber">User Number:</label>
--          <input type="text" id="userNumber" name="userNumber" value="<%= loggedInUser.getUserNumber() != null ? loggedInUser.getUserNumber() : "Not available" %>" readonly>
--        </div>
--        <div class="form-group">
--          <label for="email">Email:</label>
--          <input type="email" id="email" name="email" value="<%= loggedInUser.getEmail() %>" readonly>
--        </div>
--        <div class="form-group">
--          <label for="fullName">Full Name:</label>
--          <input type="text" id="fullName" name="fullName" value="<%= loggedInUser.getFullName() %>" required>
--        </div>
--        <div class="form-group">
--          <label for="address">Address:</label>
--          <textarea id="address" name="address" required><%= loggedInUser.getAddress() != null ? loggedInUser.getAddress() : "" %></textarea>
--        </div>
--        <div class="form-group">
--          <label for="phoneNumber">Phone Number:</label>
--          <input type="text" id="phoneNumber" name="phoneNumber" value="<%= loggedInUser.getPhoneNumber() %>" required>
--        </div>
--        <div class="form-buttons">
--          <button type="submit" name="action" value="save" class="save-btn">Save</button>
--          <button type="button" id="delete-btn" class="delete-btn">Delete Account</button>
--        </div>
--      </form>
--    </div>
--  </div>
--
--  <div class="profile-container">
--    <div class="activity-section">
--      <div class="activity-tabs">
--        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Active" class="tab <%= "Active".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Active</a>
--        <a href="${pageContext.request.contextPath}/UserProfileSearchServlet?tab=Delivered" class="tab <%= "Delivered".equals(request.getAttribute("activeTab")) ? "active" : "" %>">Delivered</a>
--        <div class="search-bar">
--          <form action="${pageContext.request.contextPath}/UserProfileSearchServlet" method="get">
--            <input type="hidden" name="tab" value="${activeTab != null ? activeTab : 'Active'}">
--            <input type="text" name="searchQuery" placeholder="Search OrderID" value="${param.searchQuery}">
--            <button type="submit"><i class="fas fa-search"></i></button>
--          </form>
--        </div>
--      </div>
--      <div class="activity-list">
--        <%
--          List<Order> orders = (List<Order>) request.getAttribute("orders");
--          if (orders == null || orders.isEmpty()) {
--        %>
--        <div class="activity-item">
--          <p>No orders found.</p>
--        </div>
--        <%
--        } else {
--          for (Order order : orders) {
--            String statusClass = "pending";
--            if ("Delivered".equalsIgnoreCase(order.getDeliveryStatus())) {
--              statusClass = "completed";
--            } else if ("Cancelled".equalsIgnoreCase(order.getOrderStatus())) {
--              statusClass = "disabled";
--            }
--        %>
--        <div class="activity-item">
--          <i class="fas fa-shopping-cart"></i>
--          <p>
--            Order <%= order.getOrderNumber() %> placed on <%= order.getConfirmationDate() %>
--            (Status: <span class="status <%= statusClass %>"><%= order.getDeliveryStatus() %></span>)
--            <% if ("Active".equals(request.getAttribute("activeTab")) && !"Cancelled".equalsIgnoreCase(order.getOrderStatus())) { %>
--            <a href="${pageContext.request.contextPath}/userLogin/orderCancel.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
--            <% } else if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
--            <a href="${pageContext.request.contextPath}/userLogin/orderCheck.jsp?orderNumber=<%= order.getOrderNumber() %>" class="cancel-link">Info</a>
--            <% } %>
--          </p>
--          <span class="timestamp">
--            <% if ("Delivered".equals(request.getAttribute("activeTab"))) { %>
--              <%= order.getDeliveredDate() != null && !order.getDeliveredDate().isEmpty() ? order.getDeliveredDate() : "N/A" %>
--            <% } else { %>
--              <%= order.getConfirmationDate() %>
--            <% } %>
--          </span>
--        </div>
--        <%
--            }
--          }
--        %>
--      </div>
--    </div>
--  </div>
--
--  <!-- Delete Confirmation Modal -->
--  <div id="deleteModal" class="modal">
--    <div class="modal-content">
--      <div class="modal-header">
--        <h3>Warning</h3>
--      </div>
--      <div class="modal-body">
--        <p>Are you sure you want to delete your account? This action cannot be undone.</p>
--        <div class="modal-buttons">
--          <button id="confirmDelete" class="modal-btn confirm-btn">Confirm</button>
--          <button id="cancelDelete" class="modal-btn cancel-btn">Cancel</button>
--        </div>
--      </div>
--    </div>
--  </div>
--  <% } %>
--</div>
--
--<script src="${pageContext.request.contextPath}/js/userProfile.js"></script>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/adminPages/adminSuccessful.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/adminSuccessful.jsp b/src/main/webapp/adminPages/adminSuccessful.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/adminSuccessful.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,165 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--  <meta charset="UTF-8">
--  <title>Admin Login Successful</title>
--  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
--  <link rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css'>
--  <style>
--    body {
--      margin: 0;
--      padding: 0;
--      height: 100vh;
--      background-image: url('https://static.vecteezy.com/system/resources/previews/006/607/817/non_2x/customer-shopping-and-cashier-at-supermarket-checkout-counter-concept-illustration-vector.jpg');
--      background-size: cover;
--      background-repeat: no-repeat;
--      display: flex;
--      justify-content: center;
--      align-items: center;
--    }
--
--    #card {
--      width: 1000px;
--      background: rgba(255, 255, 255, 0.9);
--      border-radius: 10px;
--      overflow: hidden;
--      margin: 0 auto;
--      text-align: center;
--      font-family: 'Source Sans Pro', sans-serif;
--      animation: fadeIn 1s ease-in-out;
--    }
--
--    #upper-side {
--      padding: 4em;
--      background-color: #8BC34A;
--      background: rgba(0, 255, 0, 0.3);
--      display: block;
--      color: #fff;
--      border-top-right-radius: 8px;
--      border-top-left-radius: 8px;
--    }
--
--    #checkmark {
--      font-weight: lighter;
--      fill: #3E7B27;
--      margin: -3.5em auto auto 65px;
--    }
--
--    #status {
--      font-weight: lighter;
--      text-transform: uppercase;
--      letter-spacing: 2px;
--      font-size: 1.2em;
--      margin-top: -0.2em;
--      margin-bottom: 10px;
--      color: #3E7B27;
--    }
--
--    #lower-side {
--      padding: 2em 2em 5em 2em;
--      background: #fff;
--      display: block;
--      border-bottom-right-radius: 8px;
--      border-bottom-left-radius: 8px;
--    }
--
--    #message {
--      margin-top: -0.5em;
--      color: #757575;
--      letter-spacing: 1px;
--      font-size: 1.1em;
--      line-height: 1.5;
--    }
--
--    #contBtn {
--      position: relative;
--      top: 1.5em;
--      text-decoration: none;
--      background: #8BC34A;
--      color: #fff;
--      margin: auto;
--      padding: 0.8em 3em;
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.21);
--      border-radius: 25px;
--      transition: all 0.4s ease;
--      font-size: 1.1em;
--      text-transform: uppercase;
--    }
--
--    #contBtn:hover {
--      box-shadow: 0px 15px 30px rgba(50, 50, 50, 0.41);
--      transition: all 0.4s ease;
--    }
--  </style>
--</head>
--<body>
--<%
--  // Check if session attributes are set; if not, redirect to login
--  if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--    response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--    return;
--  }
--%>
--<div id='card'>
--  <div id='upper-side'>
--    <svg version="1.1" id="checkmark" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" xml:space="preserve">
--      <path d="M131.583,92.152l-0.026-0.041c-0.713-1.118-2.197-1.447-3.316-0.734l-31.782,20.257l-4.74-12.65
--      c-0.483-1.29-1.882-1.958-3.124-1.493l-0.045,0.017c-1.242,0.465-1.857,1.888-1.374,3.178l5.763,15.382
--      c0.131,0.351,0.334,0.65,0.579,0.898c0.028,0.029,0.06,0.052,0.089,0.08c0.08,0.073,0.159,0.147,0.246,0.209
--      c0.071,0.051,0.147,0.091,0.222,0.133c0.058,0.033,0.115,0.069,0.175,0.097c0.081,0.037,0.165,0.063,0.249,0.091
--      c0.065,0.022,0.128,0.047,0.195,0.063c0.079,0.019,0.159,0.026,0.239,0.037c0.074,0.01,0.147,0.024,0.221,0.027
--      c0.097,0.004,0.194-0.006,0.292-0.014c0.055-0.005,0.109-0.003,0.163-0.012c0.323-0.048,0.641-0.16,0.933-0.346l34.305-21.865
--      C131.967,94.755,132.296,93.271,131.583,92.152z" />
--      <circle fill="none" stroke="#3E7B27" stroke-width="5" stroke-miterlimit="10" cx="109.486" cy="104.353" r="32.53" />
--    </svg>
--    <h3 id='status'>Success</h3>
--  </div>
--  <div id='lower-side'>
--    <p id='message'>
--      <%
--        String type = request.getParameter("type");
--        // Debug: Log session attributes
--        System.out.println("adminSuccessful.jsp - adminNumber: " + session.getAttribute("adminNumber"));
--        System.out.println("adminSuccessful.jsp - adminEmail: " + session.getAttribute("adminEmail"));
--        System.out.println("adminSuccessful.jsp - adminRole: " + session.getAttribute("adminRole"));
--        if ("login".equals(type)) {
--          String adminRole = (String) session.getAttribute("adminRole");
--          String welcomeMessage;
--          if (adminRole != null) {
--            switch (adminRole.toLowerCase()) {
--              case "order":
--                welcomeMessage = "Welcome, Order Admin";
--                break;
--              case "stock":
--                welcomeMessage = "Welcome, Stock Admin";
--                break;
--              case "super":
--                welcomeMessage = "Welcome, Super Admin";
--                break;
--              case "product":
--                welcomeMessage = "Welcome, Product Admin";
--                break;
--              default:
--                welcomeMessage = "Welcome, Admin (Unknown Role: " + adminRole + ")";
--                break;
--            }
--          } else {
--            welcomeMessage = "Welcome, Admin (Role Not Set)";
--          }
--      %>
--      Login successful! <%= welcomeMessage %>.
--      <% } else { %>
--      An action was completed successfully.
--      <% }
--      %>
--    </p>
--    <%
--      String adminServletUrl = request.getContextPath() + "/AdminServlet";
--      System.out.println("adminSuccessful.jsp - Navigating to AdminServlet: " + adminServletUrl);
--    %>
--    <a href="<%= adminServletUrl %>" id="contBtn">Go to Admin Dashboard</a>
--  </div>
--</div>
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/css/orderDashboardInfo.css
-===================================================================
-diff --git a/src/main/webapp/css/orderDashboardInfo.css b/src/main/webapp/css/orderDashboardInfo.css
-deleted file mode 100644
---- a/src/main/webapp/css/orderDashboardInfo.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,375 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as orderDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.nav-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    padding: 8px 16px;
--    transition: color 0.3s ease, background-color 0.3s ease;
--    border-radius: 20px;
--}
--
--.nav-link:hover {
--    color: #8bc34a;
--    background-color: #e9ecef;
--}
--
--.nav-link.active {
--    background-color: #8bc34a;
--    color: white;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--/* Info Container */
--.info-container {
--    max-width: 800px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--/* User Info Section */
--.user-info {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--    text-align: center;
--}
--
--.user-info h2 {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin: 0 60px 20px;
--}
--
--.user-details {
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    gap: 20px;
--}
--
--.user-details i {
--    font-size: 80px;
--    color: #333;
--    margin-right: 20px;
--}
--
--.user-details .details {
--    text-align: left;
--}
--
--.user-details p {
--    margin: 5px 0;
--    font-size: 16px;
--    color: #333;
--}
--
--.user-details p strong {
--    font-weight: 500;
--}
--
--/* Order Info Section */
--.order-info {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--}
--
--.section-title {
--    text-align: center;
--    font-size: 24px;
--    color: #333;
--    margin-bottom: 20px;
--}
--
--.order-items {
--    margin-bottom: 20px;
--    max-height: 300px; /* Set a maximum height for the order items container */
--    overflow-y: auto; /* Enable vertical scrolling */
--    padding-right: 10px; /* Add padding to prevent content from touching the scrollbar */
--}
--
--/* Custom Scrollbar Styling */
--.order-items::-webkit-scrollbar {
--    width: 8px; /* Width of the scrollbar */
--}
--
--.order-items::-webkit-scrollbar-track {
--    background: #f1f1f1; /* Background of the scrollbar track */
--    border-radius: 10px;
--}
--
--.order-items::-webkit-scrollbar-thumb {
--    background: #8bc34a; /* Color of the scrollbar thumb */
--    border-radius: 10px;
--}
--
--.order-items::-webkit-scrollbar-thumb:hover {
--    background: #6b9e38; /* Darker color on hover */
--}
--
--/* For Firefox and other browsers that support standard scrollbar properties */
--.order-items {
--    scrollbar-width: thin; /* Make the scrollbar thinner */
--    scrollbar-color: #8bc34a #f1f1f1; /* Thumb color and track color */
--}
--
--.order-item {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 30px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.order-item:hover {
--    background-color: #f8f9fa;
--}
--
--.order-item:last-child {
--    margin-bottom: 0;
--}
--
--.order-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 15px;
--    border-radius: 5px;
--}
--
--.order-item-details {
--    flex: 1;
--    display: flex;
--    flex-direction: column;
--}
--
--.order-product-title {
--    font-weight: bold;
--    font-size: 16px;
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.order-price {
--    font-size: 14px;
--    color: #666;
--    margin-bottom: 5px;
--}
--
--.order-total {
--    font-weight: bold;
--    font-size: 14px;
--    color: #333;
--    align-self: flex-end;
--}
--
--.total-info {
--    padding: 10px;
--    background-color: #f9f9f9;
--    border-radius: 30px;
--    color: #333;
--    display: flex;
--    justify-content: space-between;
--    font-size: 16px;
--    font-weight: bold;
--}
--
--/* Status Update Section */
--.status-update {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--    text-align: center;
--}
--
--.status-update h3 {
--    margin: 0 0 15px;
--    font-size: 20px;
--    color: #333;
--}
--
--.status-update form {
--    display: flex;
--    justify-content: center;
--    gap: 15px;
--    align-items: center;
--    flex-wrap: wrap; /* Allow wrapping if needed */
--}
--
--.status-field {
--    display: flex;
--    flex-direction: column;
--    align-items: center;
--    gap: 5px;
--}
--
--.status-field label {
--    font-size: 14px;
--    color: #333;
--    font-weight: 500;
--}
--
--.status-update select {
--    padding: 8px 16px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--    min-width: 150px; /* Ensure dropdowns have a minimum width */
--}
--
--.status-update select:focus {
--    border-color: #8bc34a;
--}
--
--.save-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 16px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--/* Order Stats Section */
--.order-stats {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    text-align: center;
--}
--
--.order-stats h3 {
--    margin: 0 0 20px;
--    font-size: 20px;
--    color: #333;
--}
--
--.stats-container {
--    display: flex;
--    flex-wrap: wrap; /* Allow wrapping to next line */
--    justify-content: space-around;
--    gap: 20px;
--}
--
--.stat-box {
--    flex: 1 1 150px; /* Allow boxes to grow/shrink, minimum width 150px */
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
--    padding: 15px;
--    min-width: 150px; /* Ensure boxes don't get too small */
--}
--
--.stat-label {
--    display: block;
--    font-size: 14px; /* Slightly smaller font for label */
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.stat-value {
--    display: block;
--    font-size: 16px; /* Smaller font for value to fit more boxes */
--    font-weight: 500;
--    color: #8bc34a;
--    word-wrap: break-word; /* Ensure long text wraps */
--}
--
--.stat-value.pending {
--    color: #ffcc00;
--}
--
--.stat-value.completed {
--    color: #28a745;
--}
--
--.stat-value.cancelled {
--    color: #dc3545;
--}
--
--.stat-value.delivered {
--    color: #28a745;
--}
-\ No newline at end of file
-Index: src/main/webapp/css/checkOut.css
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/css/checkOut.css b/src/main/webapp/css/checkOut.css
-deleted file mode 100644
---- a/src/main/webapp/css/checkOut.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,244 +0,0 @@
--/* checkOut.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--*{
--    font-family: 'Poppins', sans-serif;
--}
--
--header {
--    position: fixed;
--    top: 0;
--    left: 0;
--    width: 100%;
--    padding: 20px 9%;
--    background: #ffffff;
--    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    z-index: 99;
--}
--
--.logo {
--    font-size: 18px;
--    color: #333;
--    text-decoration: none;
--    font-weight: 600;
--    display: flex;
--    align-items: center;
--}
--
--.logo i {
--    color: #27ae60;
--    margin-right: 5px;
--    font-size: 24px;
--}
--
--.navbar {
--    display: flex;
--    justify-content: space-around;
--    align-items: center;
--    width: 60%;
--    max-width: 800px;
--    background: #ffffff;
--    padding: 10px 15px;
--    border-radius: 25px;
--    box-shadow: none;
--}
--
--.navbar a {
--    font-size: 16px;
--    color: #34495e;
--    text-decoration: none;
--    font-weight: 500;
--    padding: 10px 20px;
--    transition: color 0.3s ease;
--}
--
--.navbar a:hover {
--    color: #27ae60;
--}
--
--.cart-icon {
--    position: relative;
--    display: flex;
--    align-items: center;
--    font-size: 24px;
--    cursor: pointer;
--}
--
--.cart-icon i {
--    color: #333;
--}
--
--.cart-item-count {
--    position: absolute;
--    top: -8px;
--    right: -10px;
--    background: #ff4444;
--    color: #fff;
--    border-radius: 50%;
--    width: 16px;
--    height: 16px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    font-size: 10px;
--    font-weight: 500;
--    visibility: hidden;
--}
--
--.checkout-container {
--    display: flex;
--    justify-content: space-between;
--    padding: 120px 9% 30px;
--    max-width: 1500px;
--    margin: 0 auto;
--}
--
--.cart-section, .checkout-form {
--    flex: 1;
--    padding: 20px;
--}
--
--.cart-section {
--    background: #fff;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    margin-right: 20px;
--}
--
--.checkout-form {
--    background: #6a5acd;
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #fff;
--    padding: 30px;
--}
--
--.checkout-form .section-title {
--    color: #fff;
--    margin-bottom: 20px;
--    font-size: 30px;
--    text-align: center;
--}
--
--.cart-items {
--    margin-bottom: 20px;
--}
--
--.cart-item {
--    display: flex;
--    align-items: center;
--    background: #fff;
--    padding: 10px;
--    border-radius: 10px;
--    margin-bottom: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    color: #333;
--}
--
--.cart-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 10px;
--    border-radius: 5px;
--    object-fit: cover;
--}
--
--.cart-item-details {
--    flex-grow: 1;
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    width: 100%;
--}
--
--.cart-product-title {
--    font-size: 16px;
--    font-weight: 500;
--    flex-shrink: 0;
--    margin-right: 10px;
--}
--
--.cart-price {
--    font-size: 16px;
--    margin-right: 10px;
--}
--
--.cart-total {
--    font-size: 16px;
--    font-weight: 500;
--    white-space: nowrap;
--}
--
--.keep-shopping {
--    display: block;
--    text-align: center;
--    color: #6a5acd;
--    text-decoration: none;
--    font-size: 16px;
--    margin-top: 10px;
--}
--
--.keep-shopping:hover {
--    text-decoration: underline;
--}
--
--.checkout-form input,
--.checkout-form select {
--    width: 100%;
--    padding: 12px;
--    margin-bottom: 15px;
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    background: rgba(255, 255, 255, 0.2);
--    color: #fff;
--    outline: none;
--}
--
--.checkout-form input[type="date"] {
--    padding: 10px;
--}
--
--.checkout-form input::placeholder,
--.checkout-form select option {
--    color: #fff;
--}
--
--.total-info {
--    margin: 20px 0;
--    font-size: 16px;
--    color: #fff;
--}
--
--.total-info span {
--    display: block;
--    margin-bottom: 10px;
--}
--
--.checkout-btn {
--    width: 100%;
--    padding: 12px;
--    background: #20b2aa;
--    border: none;
--    border-radius: 25px;
--    font-size: 16px;
--    color: #fff;
--    cursor: pointer;
--    transition: background 0.3s;
--}
--
--.checkout-btn:hover {
--    background: #19a99d;
--}
--
--@media screen and (max-width: 768px) {
--    .checkout-container {
--        flex-direction: column;
--    }
--    .cart-section {
--        margin-right: 0;
--        margin-bottom: 20px;
--    }
--}
-\ No newline at end of file
-Index: src/main/webapp/js/admin.js
-===================================================================
-diff --git a/src/main/webapp/js/admin.js b/src/main/webapp/js/admin.js
-deleted file mode 100644
---- a/src/main/webapp/js/admin.js	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,4 +0,0 @@
--// Placeholder for future JavaScript functionality
--document.addEventListener('DOMContentLoaded', function() {
--    console.log('Admin dashboard loaded');
--});
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/orderDashboardInfo.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/orderDashboardInfo.css b/target/OnlineGroceryOrderSystem/css/orderDashboardInfo.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/orderDashboardInfo.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,375 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as orderDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.nav-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    padding: 8px 16px;
--    transition: color 0.3s ease, background-color 0.3s ease;
--    border-radius: 20px;
--}
--
--.nav-link:hover {
--    color: #8bc34a;
--    background-color: #e9ecef;
--}
--
--.nav-link.active {
--    background-color: #8bc34a;
--    color: white;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--/* Info Container */
--.info-container {
--    max-width: 800px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--/* User Info Section */
--.user-info {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--    text-align: center;
--}
--
--.user-info h2 {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin: 0 60px 20px;
--}
--
--.user-details {
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    gap: 20px;
--}
--
--.user-details i {
--    font-size: 80px;
--    color: #333;
--    margin-right: 20px;
--}
--
--.user-details .details {
--    text-align: left;
--}
--
--.user-details p {
--    margin: 5px 0;
--    font-size: 16px;
--    color: #333;
--}
--
--.user-details p strong {
--    font-weight: 500;
--}
--
--/* Order Info Section */
--.order-info {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--}
--
--.section-title {
--    text-align: center;
--    font-size: 24px;
--    color: #333;
--    margin-bottom: 20px;
--}
--
--.order-items {
--    margin-bottom: 20px;
--    max-height: 300px; /* Set a maximum height for the order items container */
--    overflow-y: auto; /* Enable vertical scrolling */
--    padding-right: 10px; /* Add padding to prevent content from touching the scrollbar */
--}
--
--/* Custom Scrollbar Styling */
--.order-items::-webkit-scrollbar {
--    width: 8px; /* Width of the scrollbar */
--}
--
--.order-items::-webkit-scrollbar-track {
--    background: #f1f1f1; /* Background of the scrollbar track */
--    border-radius: 10px;
--}
--
--.order-items::-webkit-scrollbar-thumb {
--    background: #8bc34a; /* Color of the scrollbar thumb */
--    border-radius: 10px;
--}
--
--.order-items::-webkit-scrollbar-thumb:hover {
--    background: #6b9e38; /* Darker color on hover */
--}
--
--/* For Firefox and other browsers that support standard scrollbar properties */
--.order-items {
--    scrollbar-width: thin; /* Make the scrollbar thinner */
--    scrollbar-color: #8bc34a #f1f1f1; /* Thumb color and track color */
--}
--
--.order-item {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 30px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.order-item:hover {
--    background-color: #f8f9fa;
--}
--
--.order-item:last-child {
--    margin-bottom: 0;
--}
--
--.order-item-img {
--    width: 50px;
--    height: 50px;
--    margin-right: 15px;
--    border-radius: 5px;
--}
--
--.order-item-details {
--    flex: 1;
--    display: flex;
--    flex-direction: column;
--}
--
--.order-product-title {
--    font-weight: bold;
--    font-size: 16px;
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.order-price {
--    font-size: 14px;
--    color: #666;
--    margin-bottom: 5px;
--}
--
--.order-total {
--    font-weight: bold;
--    font-size: 14px;
--    color: #333;
--    align-self: flex-end;
--}
--
--.total-info {
--    padding: 10px;
--    background-color: #f9f9f9;
--    border-radius: 30px;
--    color: #333;
--    display: flex;
--    justify-content: space-between;
--    font-size: 16px;
--    font-weight: bold;
--}
--
--/* Status Update Section */
--.status-update {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    margin-bottom: 30px;
--    text-align: center;
--}
--
--.status-update h3 {
--    margin: 0 0 15px;
--    font-size: 20px;
--    color: #333;
--}
--
--.status-update form {
--    display: flex;
--    justify-content: center;
--    gap: 15px;
--    align-items: center;
--    flex-wrap: wrap; /* Allow wrapping if needed */
--}
--
--.status-field {
--    display: flex;
--    flex-direction: column;
--    align-items: center;
--    gap: 5px;
--}
--
--.status-field label {
--    font-size: 14px;
--    color: #333;
--    font-weight: 500;
--}
--
--.status-update select {
--    padding: 8px 16px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--    min-width: 150px; /* Ensure dropdowns have a minimum width */
--}
--
--.status-update select:focus {
--    border-color: #8bc34a;
--}
--
--.save-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 16px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--/* Order Stats Section */
--.order-stats {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--    text-align: center;
--}
--
--.order-stats h3 {
--    margin: 0 0 20px;
--    font-size: 20px;
--    color: #333;
--}
--
--.stats-container {
--    display: flex;
--    flex-wrap: wrap; /* Allow wrapping to next line */
--    justify-content: space-around;
--    gap: 20px;
--}
--
--.stat-box {
--    flex: 1 1 150px; /* Allow boxes to grow/shrink, minimum width 150px */
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
--    padding: 15px;
--    min-width: 150px; /* Ensure boxes don't get too small */
--}
--
--.stat-label {
--    display: block;
--    font-size: 14px; /* Slightly smaller font for label */
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.stat-value {
--    display: block;
--    font-size: 16px; /* Smaller font for value to fit more boxes */
--    font-weight: 500;
--    color: #8bc34a;
--    word-wrap: break-word; /* Ensure long text wraps */
--}
--
--.stat-value.pending {
--    color: #ffcc00;
--}
--
--.stat-value.completed {
--    color: #28a745;
--}
--
--.stat-value.cancelled {
--    color: #dc3545;
--}
--
--.stat-value.delivered {
--    color: #28a745;
--}
-\ No newline at end of file
-Index: src/main/webapp/css/stockDashboard.css
-===================================================================
-diff --git a/src/main/webapp/css/stockDashboard.css b/src/main/webapp/css/stockDashboard.css
-deleted file mode 100644
---- a/src/main/webapp/css/stockDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,217 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5;
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling (same as orderDashboard.css) */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px;
--    height: 40px;
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%;
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 16px 8px 40px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    color: #333;
--    transition: border-color 0.3s ease;
--}
--
--.search-bar input:focus {
--    border-color: #8bc34a;
--}
--
--.search-bar i {
--    position: absolute;
--    left: 12px;
--    color: #666;
--    font-size: 16px;
--}
--
--/* Stock Section */
--.stock-section {
--    max-width: 1200px;
--    margin: 40px auto;
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    font-size: 24px;
--    color: #333;
--    margin: 0;
--}
--
--.stock-list {
--    background-color: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 20px;
--}
--
--.stock-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px;
--    border-radius: 10px;
--    background-color: #fff;
--    transition: background-color 0.3s ease;
--}
--
--.stock-row:hover {
--    /*background-color: #f8f9fa;*/
--    background-color: #dddddd;
--}
--
--.stock-row:last-child {
--    margin-bottom: 0;
--}
--
--.product-id {
--    width: 10%;
--    font-weight: bold;
--    color: #333;
--}
--
--.product-image {
--    width: 10%;
--}
--
--.item-image {
--    width: 40px;
--    height: 40px;
--    object-fit: cover;
--    border-radius: 5px;
--    vertical-align: middle;
--}
--
--.product-name {
--    width: 20%;
--    color: #333;
--}
--
--.product-category {
--    width: 15%;
--    color: #666;
--}
--
--.stock-count {
--    width: 15%;
--    color: #dc3545; /* Red color for low stock */
--    font-weight: 500;
--}
--
--.stock-update-form {
--    width: 30%;
--    display: flex;
--    align-items: center;
--    gap: 10px;
--}
--
--.stock-input {
--    width: 60%;
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #ccc;
--    border-radius: 5px;
--    outline: none;
--    resize: none;
--    height: 40px;
--}
--
--.stock-input:focus {
--    border-color: #8bc34a;
--}
--
--.save-btn {
--    padding: 8px 16px;
--    background-color: #8bc34a;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.save-btn:hover {
--    background-color: #6b9e38;
--}
--
--/* Message styling for no items */
--.stock-list p {
--    text-align: center;
--    color: #666;
--    font-size: 16px;
--    margin: 20px 0;
--}
-\ No newline at end of file
-Index: src/main/webapp/css/orderDashboard.css
-===================================================================
-diff --git a/src/main/webapp/css/orderDashboard.css b/src/main/webapp/css/orderDashboard.css
-deleted file mode 100644
---- a/src/main/webapp/css/orderDashboard.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,208 +0,0 @@
--/* Import Poppins font to match adminPage.css */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    background-color: #F5F5F5; /* Match adminPage.css background */
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--/* Header styling to match adminPage.css */
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95); /* White background */
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.nav-links {
--    display: flex;
--    align-items: center;
--    gap: 20px;
--}
--
--.nav-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    padding: 8px 16px;
--    transition: color 0.3s ease, background-color 0.3s ease;
--    border-radius: 20px; /* Rounded edges for Active, Delivered, Cancelled buttons */
--}
--
--.nav-link:hover {
--    color: #8bc34a;
--    background-color: #e9ecef; /* Light gray background on hover */
--}
--
--.nav-link.active {
--    background-color: #8bc34a; /* Green background for active tab */
--    color: white;
--}
--
--.back-icon {
--    color: #333;
--    text-decoration: none;
--    font-size: 20px;
--    width: 40px; /* Fixed width to ensure circular shape */
--    height: 40px; /* Fixed height to ensure circular shape */
--    display: flex;
--    align-items: center;
--    justify-content: center;
--    border-radius: 50%; /* Apply border-radius at all times */
--    transition: background-color 0.3s ease;
--}
--
--.back-icon:hover {
--    background-color: #e9ecef;
--}
--
--.logo {
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a; /* Green toolbox icon */
--    margin-right: 5px;
--}
--
--/* Order Section Styling */
--.order-section {
--    padding: 20px;
--}
--
--.section-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.section-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333; /* Match adminPage.css text color */
--}
--
--.search-bar {
--    position: relative;
--    display: flex;
--    align-items: center;
--}
--
--.search-bar input {
--    padding: 8px 40px 8px 10px;
--    font-size: 16px;
--    border: 1px solid #ccc;
--    border-radius: 20px;
--    outline: none;
--    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
--}
--
--.search-bar i {
--    position: absolute;
--    right: 10px;
--    color: #666;
--}
--
--.order-list {
--    background-color: rgba(255, 255, 255, 0.95); /* Match adminPage.css container background */
--    border-radius: 10px; /* Slightly larger radius for a softer look */
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    padding: 15px;
--}
--
--.order-row {
--    display: flex;
--    align-items: center;
--    padding: 12px;
--    margin-bottom: 10px; /* Add gap between rows */
--    border-radius: 8px; /* Round the corners of each order row */
--    background-color: #fff; /* White background for each row to make rounded corners visible */
--    transition: background-color 0.3s ease; /* Smooth hover effect */
--}
--
--.order-row:hover {
--    /*background-color: #f8f9fa; !* Light gray background on hover *!*/
--    background-color:#dddddd ;
--}
--
--.order-row:last-child {
--    margin-bottom: 0; /* Remove margin-bottom for the last row to avoid extra space */
--}
--
--.order-row i {
--    margin-right: 10px;
--    color: #666;
--    font-size: 18px; /* Slightly larger icon for better visibility */
--}
--
--.order-id {
--    font-weight: bold;
--    margin-right: 5px;
--    color: #333; /* Match adminPage.css text color */
--}
--
--.status {
--    padding: 5px 10px;
--    border-radius: 15px;
--    font-size: 14px;
--    margin-left: 5px;
--}
--
--.status.pending {
--    background-color: #ffcc00;
--    color: white;
--}
--
--.status.cancelled {
--    background-color: #dc3545;
--    color: white;
--}
--
--.status.delivered {
--    background-color: #28a745;
--    color: white;
--}
--
--.info-btn {
--    margin-left: auto;
--    padding: 6px 12px;
--    background-color: #17a2b8;
--    text-decoration: none;
--    color: white;
--    border: none;
--    border-radius: 15px;
--    cursor: pointer;
--    font-size: 14px;
--    transition: background-color 0.3s ease;
--}
--
--.info-btn:hover {
--    background-color: #138496;
--}
--
--.order-details {
--    margin-top: 10px;
--    padding: 15px;
--    background-color: #f8f9fa;
--    border-radius: 5px;
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/css/userProfile.css
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/css/userProfile.css b/target/OnlineGroceryOrderSystem/css/userProfile.css
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/css/userProfile.css	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,471 +0,0 @@
--/* Import Poppins font */
--@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
--
--/* Apply box-sizing globally to prevent padding issues */
--* {
--    box-sizing: border-box;
--}
--
--body {
--    font-family: 'Poppins', sans-serif;
--    /*background-image: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg');*/
--    /*background-size: cover;*/
--    /*background-position: center;*/
--    /*background-repeat: no-repeat;*/
--    /*background-attachment: fixed;*/
--    margin: 0;
--    padding: 0;
--    overflow-x: hidden;
--}
--
--header {
--    display: flex;
--    align-items: center;
--    justify-content: space-between;
--    background-color: rgba(255, 255, 255, 0.95);
--    padding: 30px 20px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--    position: relative;
--    width: 100%;
--    margin: 0;
--}
--
--.back-link {
--    text-decoration: none;
--    color: #333;
--    font-size: 16px;
--    font-weight: 500;
--    transition: color 0.3s ease;
--}
--
--.back-link i {
--    margin-right: 5px;
--}
--
--.back-link:hover {
--    color: #8bc34a;
--}
--
--.logo {
--    text-decoration: none;
--    color: #333;
--    font-size: 24px;
--    font-weight: bold;
--    position: absolute;
--    left: 50%;
--    transform: translateX(-50%);
--}
--
--.logo i {
--    color: #8bc34a;
--    margin-right: 5px;
--    transition: color 0.3s ease;
--}
--
--.logo:hover i {
--    color: #689f38;
--}
--
--.content {
--    width: 100%;
--    padding: 5px 1cm 20px 1cm;
--    background-color: transparent;
--}
--
--.profile-container:nth-child(1) {
--    max-width: 1000px;
--    margin: 10px auto 20px auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.profile-container:nth-child(2) {
--    max-width: 1200px;
--    margin: 0 auto;
--    background: rgba(255, 255, 255, 0.95);
--    padding: 20px;
--    border: 1px solid #DDD;
--    border-radius: 30px;
--    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
--}
--
--.user-info-header {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    margin-bottom: 20px;
--}
--
--.user-info-header h2 {
--    margin: 0;
--    font-size: 24px;
--    color: #333;
--}
--
--.edit-btn {
--    background-color: #00CED1;
--    color: #FFF;
--    border: none;
--    padding: 8px 15px;
--    border-radius: 20px;
--    cursor: pointer;
--    font-size: 14px;
--    display: flex;
--    align-items: center;
--    gap: 5px;
--    transition: background-color 0.3s ease;
--}
--
--.edit-btn i {
--    font-size: 14px;
--}
--
--.edit-btn:hover {
--    background-color: #00B7B9;
--}
--
--.user-details {
--    display: flex;
--    justify-content: flex-start;
--    margin-bottom: 30px;
--}
--
--.user-details-left {
--    display: flex;
--    align-items: flex-start;
--    gap: 20px;
--}
--
--.user-icon {
--    font-size: 60px;
--    color: #333;
--}
--
--.user-details-text p {
--    font-size: 16px;
--    color: #555;
--    margin: 5px 0;
--}
--
--.user-details-text p strong {
--    color: #333;
--}
--
--.activity-section {
--    margin-top: 20px;
--}
--
--.activity-tabs {
--    display: flex;
--    justify-content: space-between;
--    align-items: center;
--    border-bottom: 1px solid #DDD;
--    margin-bottom: 20px;
--}
--
--.activity-tabs .tab {
--    padding: 10px 20px;
--    font-size: 16px;
--    color: #555;
--    cursor: pointer;
--    transition: color 0.3s ease;
--    text-decoration: none;
--}
--
--.activity-tabs .tab.active {
--    color: #333;
--    font-weight: bold;
--    border-bottom: 2px solid #333;
--}
--
--.activity-tabs .tab:hover {
--    color: #333;
--}
--
--.activity-tabs .search-bar {
--    display: flex;
--    align-items: center;
--    margin-left: auto; /* Pushes the search bar to the far right */
--}
--
--.activity-tabs .search-bar form {
--    display: flex;
--    align-items: center;
--}
--
--.activity-tabs .search-bar input[type="text"] {
--    padding: 8px;
--    font-size: 14px;
--    border: 1px solid #DDD;
--    border-radius: 20px 0 0 20px;
--    outline: none;
--}
--
--.activity-tabs .search-bar button {
--    padding: 8px 15px;
--    background-color: #8bc34a;
--    color: #FFF;
--    border: none;
--    border-radius: 0 20px 20px 0;
--    cursor: pointer;
--    transition: background-color 0.3s ease;
--}
--
--.activity-tabs .search-bar button:hover {
--    background-color: #689f38;
--}
--
--.activity-list {
--    display: flex;
--    flex-direction: column;
--    gap: 10px;
--    max-height: 300px; /* Set a fixed height for the scrollable area */
--    overflow-y: auto; /* Enable vertical scrolling */
--    padding-right: 10px; /* Add padding to avoid content being hidden under scrollbar */
--}
--
--/* Webkit Scrollbar Styling */
--.activity-list::-webkit-scrollbar {
--    width: 8px;
--}
--
--.activity-list::-webkit-scrollbar-track {
--    background: #f1f1f1;
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb {
--    background: #8bc34a; /* Match the theme color */
--    border-radius: 10px;
--}
--
--.activity-list::-webkit-scrollbar-thumb:hover {
--    background: #689f38; /* Darker shade on hover */
--}
--
--.activity-item {
--    display: flex;
--    align-items: center;
--    background-color: #F9F9F9;
--    padding: 10px;
--    border-radius: 5px;
--    font-size: 14px;
--    color: #555;
--}
--
--.activity-item i {
--    font-size: 16px;
--    color: #333;
--    margin-right: 10px;
--}
--
--.activity-item p {
--    margin: 0;
--    flex: 1;
--}
--
--.activity-item .timestamp {
--    font-size: 12px;
--    color: #999;
--}
--
--.activity-item .status {
--    padding: 2px 8px;
--    border-radius: 10px;
--    font-size: 12px;
--    color: #FFF;
--}
--
--.activity-item .status.pending {
--    background-color: #FFA500;
--}
--
--.activity-item .status.completed {
--    background-color: #28A745;
--}
--
--.activity-item .status.disabled {
--    background-color: #DC3545;
--}
--
--.activity-item .cancel-link {
--    display: inline-block; /* Makes it behave like a button */
--    padding: 2px 8px; /* Same padding as the status */
--    background-color: #00CED1; /* Red background */
--    color: #FFF; /* White text */
--    border-radius: 10px; /* Rounded corners */
--    font-size: 12px; /* Same font size as the status */
--    text-decoration: none; /* Remove underline */
--    margin-left: 10px; /* Space from the status */
--    transition: background-color 0.3s ease; /* Smooth hover transition */
--}
--
--.activity-item .cancel-link:hover {
--    background-color: #00B7B9; /* Darker red on hover */
--}
--
--.form-group {
--    margin: 15px 0;
--}
--
--.form-group label {
--    display: block;
--    font-size: 16px;
--    color: #333;
--    margin-bottom: 5px;
--}
--
--.form-group input,
--.form-group textarea {
--    width: 100%;
--    padding: 8px;
--    font-size: 16px;
--    border: 1px solid #DDD;
--    border-radius: 5px;
--    box-sizing: border-box;
--}
--
--.form-group textarea {
--    height: 80px;
--    resize: vertical;
--}
--
--.form-group input[readonly] {
--    background-color: #F5F5F5;
--    cursor: not-allowed;
--}
--
--.form-buttons {
--    text-align: center;
--}
--
--.save-btn,
--.delete-btn {
--    display: inline-block;
--    margin: 10px 5px 0 0;
--    padding: 8px 15px;
--    border: none;
--    border-radius: 20px;
--    cursor: pointer;
--    font-size: 14px;
--    text-align: center;
--}
--
--.save-btn {
--    background-color: #8bc34a;
--    color: #FFF;
--}
--
--.save-btn:hover {
--    background-color: #689f38;
--}
--
--.delete-btn {
--    background-color: #e74c3c;
--    color: #FFF;
--}
--
--.delete-btn:hover {
--    background-color: #c0392b;
--}
--
--/* Modal (Popup) Styling */
--.modal {
--    display: none;
--    position: fixed;
--    z-index: 1000;
--    left: 0;
--    top: 0;
--    width: 100%;
--    height: 100%;
--    background-color: rgba(0, 0, 0, 0.5);
--    justify-content: center;
--    align-items: center;
--}
--
--.modal-content {
--    background: rgba(255, 255, 255, 0.95);
--    border-radius: 10px;
--    overflow: hidden;
--    width: 500px;
--    text-align: center;
--    font-family: 'Source Sans Pro', sans-serif;
--    animation: fadeIn 0.5s ease-in-out;
--}
--
--.modal-header {
--    padding: 2em;
--    background-color: #FF4D4D;
--    background: rgba(255, 0, 0, 0.3);
--    color: #fff;
--    border-top-right-radius: 8px;
--    border-top-left-radius: 8px;
--}
--
--.modal-header h3 {
--    font-weight: lighter;
--    text-transform: uppercase;
--    letter-spacing: 2px;
--    font-size: 1.2em;
--    margin: 0;
--    color: #B22222;
--}
--
--.modal-body {
--    padding: 2em;
--    background: #fff;
--    border-bottom-right-radius: 8px;
--    border-bottom-left-radius: 8px;
--}
--
--.modal-body p {
--    color: #757575;
--    letter-spacing: 1px;
--    font-size: 1.1em;
--    line-height: 1.5;
--    margin: 0 0 1.5em 0;
--}
--
--.modal-buttons {
--    display: flex;
--    justify-content: center;
--    gap: 1em;
--}
--
--.modal-btn {
--    padding: 0.8em 2em;
--    border-radius: 30px;
--    text-decoration: none;
--    font-size: 15px;
--    text-transform: uppercase;
--    cursor: pointer;
--    transition: all 0.4s ease;
--}
--
--.confirm-btn {
--    background: #FF4D4D;
--    color: #fff;
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.21);
--}
--
--.confirm-btn:hover {
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.41);
--}
--
--.cancel-btn {
--    background: #689f38;
--    color: #fff;
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.21);
--}
--
--.cancel-btn:hover {
--    box-shadow: 0px 10px 20px rgba(50, 50, 50, 0.41);
--}
--
--@keyframes fadeIn {
--    from { opacity: 0; transform: scale(0.9); }
--    to { opacity: 1; transform: scale(1); }
--}
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/adminPages/productDashBoard.jsp
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/adminPages/productDashBoard.jsp b/target/OnlineGroceryOrderSystem/adminPages/productDashBoard.jsp
-deleted file mode 100644
---- a/target/OnlineGroceryOrderSystem/adminPages/productDashBoard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,106 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, java.util.ArrayList, java.util.Collections, java.util.Comparator, model.GroceryItem, model.FileUtil" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Product Admin Dashboard</title>
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/productDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/productDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Super Admin or Product Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "product".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Read products directly from items.txt
--    String itemsFilePath = "/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/items.txt";
--    List<GroceryItem> products = FileUtil.readItems(itemsFilePath);
--    if (products == null) {
--        products = new ArrayList<>();
--    }
--
--    // Sort products by productID in ascending order
--    Collections.sort(products, new Comparator<GroceryItem>() {
--        @Override
--        public int compare(GroceryItem item1, GroceryItem item2) {
--            return Integer.compare(item1.getProductID(), item2.getProductID());
--        }
--    });
--
--    String errorMessage = (String) request.getAttribute("errorMessage");
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-folder-open"></i> Product Admin Dashboard
--    </div>
--    <div class="search-bar">
--        <input type="text" id="product-search" placeholder="Search Product ID" onkeyup="searchProducts()">
--        <i class="fa fa-search"></i>
--    </div>
--</header>
--
--<!-- Product Section -->
--<div id="product-section" class="product-section">
--    <div class="section-header">
--        <h2>Manage Products</h2>
--        <a href="${pageContext.request.contextPath}/ProductAdminServlet?action=add" class="add-btn">Add New Product</a>
--    </div>
--    <% if ("saveFailed".equals(request.getParameter("error"))) { %>
--    <p style="color: red; text-align: center;">Failed to save the product. Please try again.</p>
--    <% } %>
--    <% if (errorMessage != null) { %>
--    <p style="color: red; text-align: center;"><%= errorMessage %></p>
--    <% } %>
--    <div class="product-list" id="product-items">
--        <%
--            if (products.isEmpty()) {
--        %>
--        <p style="color: red; text-align: center;">No products found in the system.</p>
--        <%
--        } else {
--            for (GroceryItem item : products) {
--        %>
--        <div class="product-row" data-product-id="<%= item.getProductID() %>">
--            <span class="product-id">Product #<%= item.getProductID() %></span>
--            <span class="product-image">
--                    <% if (item.getProductImageLink() != null && !item.getProductImageLink().isEmpty()) { %>
--                        <img src="<%= item.getProductImageLink() %>" alt="<%= item.getProductName() %>" class="item-image">
--                    <% } else { %>
--                        No Image
--                    <% } %>
--                </span>
--            <span class="product-name"><%= item.getProductName() %></span>
--            <span class="product-category"><%= item.getProductCategory() %></span>
--            <span class="product-price">Price: <%= String.format("%.2f", item.getProductPrice()) %></span>
--            <span class="product-quantity">Stock: <%= item.getQuantity() %></span>
--            <span class="product-description"><%= item.getDescription() %></span>
--            <a href="${pageContext.request.contextPath}/ProductAdminServlet?action=info&productID=<%= item.getProductID() %>" class="info-btn">Info</a>
--        </div>
--        <%
--                }
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/adminPages/orderDashboard.jsp
-===================================================================
-diff --git a/src/main/webapp/adminPages/orderDashboard.jsp b/src/main/webapp/adminPages/orderDashboard.jsp
-deleted file mode 100644
---- a/src/main/webapp/adminPages/orderDashboard.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ /dev/null	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-@@ -1,164 +0,0 @@
--<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
--<%@ page import="java.util.List, model.FileUtil.Order" %>
--<!DOCTYPE html>
--<html lang="en">
--<head>
--    <meta charset="UTF-8">
--    <title>Order Admin Dashboard</title>
--    <!-- Import Poppins font to match adminPage.css -->
--    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap">
--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
--    <!-- Add cache-busting query parameter to force CSS reload -->
--    <link rel="stylesheet" href="${pageContext.request.contextPath}/css/orderDashboard.css?v=<%= System.currentTimeMillis() %>">
--    <script src="${pageContext.request.contextPath}/js/orderDashboard.js"></script>
--</head>
--<body style="
--background: rgb(255,255,255);
--background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(244,255,240,1) 100%);
--">
--<%
--    // Check if session attributes are set; if not, redirect to admin login
--    if (session.getAttribute("adminNumber") == null || session.getAttribute("adminEmail") == null) {
--        response.sendRedirect(request.getContextPath() + "/adminLogin/login.jsp?error=sessionExpired");
--        return;
--    }
--
--    // Check if the user has the correct role (Order Admin or Super Admin)
--    String adminRole = (String) session.getAttribute("adminRole");
--    if (adminRole == null || !("super".equalsIgnoreCase(adminRole) || "order".equalsIgnoreCase(adminRole))) {
--        response.sendRedirect(request.getContextPath() + "/AdminServlet?error=unauthorized");
--        return;
--    }
--
--    // Check if orders are set; if not, redirect to OrderAdminServlet
--    if (request.getAttribute("activeOrders") == null || request.getAttribute("cancelledOrders") == null || request.getAttribute("deliveredOrders") == null) {
--        System.out.println("orderDashboard.jsp - Orders not set, redirecting to OrderAdminServlet");
--        response.sendRedirect(request.getContextPath() + "/OrderAdminServlet");
--        return;
--    }
--
--    // Get the tab parameter from the request attribute
--    String tab = (String) request.getAttribute("tab");
--    if (tab == null || tab.trim().isEmpty()) {
--        tab = "active"; // Default to "active" if no tab is specified
--    }
--%>
--<header>
--    <div class="nav-links">
--        <a href="${pageContext.request.contextPath}/AdminServlet" class="back-icon"><i class="fa fa-arrow-left"></i></a>
--        <a href="#" class="nav-link <%= "active".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('active')">Active</a>
--        <a href="#" class="nav-link <%= "delivered".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('delivered')">Delivered</a>
--        <a href="#" class="nav-link <%= "cancelled".equalsIgnoreCase(tab) ? "active" : "" %>" onclick="navigateToTab('cancelled')">Cancelled</a>
--    </div>
--    <div class="logo">
--        <i class="fa-solid fa-box"></i> Order Admin Dashboard
--    </div>
--</header>
--
--<!-- Active Orders Section -->
--<div id="active-section" class="order-section" style="display: <%= "active".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Active Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="active-search" placeholder="Search Order ID" onkeyup="searchOrders('active')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="active-orders">
--        <%
--            List<Order> activeOrders = (List<Order>) request.getAttribute("activeOrders");
--            if (activeOrders != null && !activeOrders.isEmpty()) {
--                for (Order order : activeOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> placed on <%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %>
--            (Status: <span class="status pending">Pending</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=active" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-active" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No active orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--<!-- Cancelled Orders Section -->
--<div id="cancelled-section" class="order-section" style="display: <%= "cancelled".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Cancelled Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="cancelled-search" placeholder="Search Order ID" onkeyup="searchOrders('cancelled')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="cancelled-orders">
--        <%
--            List<Order> cancelledOrders = (List<Order>) request.getAttribute("cancelledOrders");
--            if (cancelledOrders != null && !cancelledOrders.isEmpty()) {
--                for (Order order : cancelledOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> cancelled on <%= order.getConfirmationDate() != null ? order.getConfirmationDate() : "N/A" %>
--            (Status: <span class="status cancelled">Cancelled</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=cancelled" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-cancelled" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No cancelled orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--<!-- Delivered Orders Section -->
--<div id="delivered-section" class="order-section" style="display: <%= "delivered".equalsIgnoreCase(tab) ? "block" : "none" %>;">
--    <div class="section-header">
--        <h2>Delivered Orders</h2>
--        <div class="search-bar">
--            <input type="text" id="delivered-search" placeholder="Search Order ID" onkeyup="searchOrders('delivered')">
--            <i class="fa fa-search"></i>
--        </div>
--    </div>
--    <div class="order-list" id="delivered-orders">
--        <%
--            List<Order> deliveredOrders = (List<Order>) request.getAttribute("deliveredOrders");
--            if (deliveredOrders != null && !deliveredOrders.isEmpty()) {
--                for (Order order : deliveredOrders) {
--        %>
--        <div class="order-row">
--            <i class="fa fa-shopping-cart"></i>
--            <span class="order-id">Order <%= order.getOrderNumber() %></span> delivered on <%= order.getDeliveredDate() != null ? order.getDeliveredDate() : "N/A" %>
--            (Status: <span class="status delivered">Delivered</span>)
--            <a href="${pageContext.request.contextPath}/OrderAdminServlet?action=info&orderNumber=<%= order.getOrderNumber() %>&tab=delivered" class="info-btn">Info</a>
--            <div class="order-details" id="details-<%= order.getOrderNumber() %>-delivered" style="display: none;">
--                <!-- Order details will be populated here -->
--            </div>
--        </div>
--        <%
--            }
--        } else {
--        %>
--        <p>No delivered orders found.</p>
--        <%
--            }
--        %>
--    </div>
--</div>
--
--</body>
--</html>
-\ No newline at end of file
-Index: src/main/webapp/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover\">\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html> <!-- LogIn branch-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/userLogin/login.jsp b/src/main/webapp/userLogin/login.jsp
---- a/src/main/webapp/userLogin/login.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/userLogin/login.jsp	(date 1746800182017)
-@@ -7,8 +7,87 @@
-     <link rel="stylesheet" href="${pageContext.request.contextPath}/css/logIn.css">
-     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
-     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-+    <style>
-+        .popup {
-+            display: none;
-+            position: fixed;
-+            top: 50%;
-+            left: 50%;
-+            transform: translate(-50%, -50%) scale(0.8);
-+            background: rgba(255, 255, 255, 0.98);
-+            border-radius: 15px;
-+            padding: 30px;
-+            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
-+            max-width: 400px;
-+            width: 90%;
-+            text-align: center;
-+            z-index: 1000;
-+            border: 3px solid #3E7B27;
-+            opacity: 0;
-+            transition: opacity 0.3s ease, transform 0.3s ease;
-+        }
-+        .popup.active {
-+            display: block;
-+            opacity: 1;
-+            transform: translate(-50%, -50%) scale(1);
-+        }
-+        .popup-content {
-+            position: relative;
-+        }
-+        .popup-icon {
-+            color: #3E7B27;
-+            font-size: 24px;
-+            margin-bottom: 15px;
-+        }
-+        .popup-content p {
-+            margin: 0 0 20px;
-+            font-size: 15px;
-+            color: #721c24;
-+            line-height: 1.5;
-+        }
-+        .popup-content .ok-btn {
-+            background: #5CB338;
-+            color: white;
-+            border: none;
-+            padding: 10px 20px;
-+            border-radius: 8px;
-+            cursor: pointer;
-+            font-size: 14px;
-+            text-transform: uppercase;
-+            letter-spacing: 1px;
-+            transition: background 0.3s, transform 0.2s;
-+        }
-+        .popup-content .ok-btn:hover {
-+            background: #3E7B27;
-+            transform: translateY(-2px);
-+        }
-+        .overlay {
-+            display: none;
-+            position: fixed;
-+            top: 0;
-+            left: 0;
-+            width: 100%;
-+            height: 100%;
-+            background: rgba(0, 0, 0, 0.6);
-+            z-index: 999;
-+            opacity: 0;
-+            transition: opacity 0.3s ease;
-+        }
-+        .overlay.active {
-+            display: block;
-+            opacity: 1;
-+        }
-+    </style>
- </head>
--<body style="background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover">
-+<body>
-+<div class="overlay" id="popupOverlay"></div>
-+<div class="popup" id="errorPopup">
-+    <div class="popup-content">
-+        <i class="fas fa-exclamation-circle popup-icon"></i>
-+        <p id="popupMessage"></p>
-+        <button class="ok-btn" onclick="closePopup()">OK</button>
-+    </div>
-+</div>
- <div class="container">
-     <input type="checkbox" id="flip">
-     <div class="cover">
-@@ -32,14 +111,12 @@
-             <div class="login-form">
-                 <div class="title">Login</div>
-                 <%
--                    // Check for error from LoginServlet (invalid credentials)
-                     String error = (String) request.getAttribute("error");
-                     if (error != null) {
-                 %>
-                 <p style="color: red;"><%= error %></p>
-                 <%
-                     }
--                    // Check for error from CartServlet (not logged in)
-                     String loginError = request.getParameter("error");
-                     if ("notLoggedIn".equals(loginError)) {
-                 %>
-@@ -57,7 +134,7 @@
-                             <i class="fas fa-lock"></i>
-                             <input type="password" name="password" placeholder="Enter your password" required>
-                         </div>
--                        <div class="text"><a href="#">Forgot password?</a></div>
-+                        <div class="text"><a href="${pageContext.request.contextPath}/userLogin/forgotPassword.jsp">Forgot password?</a></div>
-                         <div class="button input-box">
-                             <input type="submit" value="Submit">
-                         </div>
-@@ -67,15 +144,7 @@
-             </div>
-             <div class="signup-form">
-                 <div class="title">Signup</div>
--                <%
--                    error = (String) request.getAttribute("error");
--                    if (error != null) {
--                %>
--                <p style="color: red;"><%= error %></p>
--                <%
--                    }
--                %>
--                <form action="${pageContext.request.contextPath}/RegisterServlet" method="post">
-+                <form id="signupForm" action="${pageContext.request.contextPath}/RegisterServlet" method="post">
-                     <div class="input-boxes">
-                         <div class="input-box">
-                             <i class="fas fa-user"></i>
-@@ -95,7 +164,7 @@
-                         </div>
-                         <div class="input-box">
-                             <i class="fas fa-lock"></i>
--                            <input type="password" name="password" placeholder="Enter your password" required>
-+                            <input type="password" id="password" name="password" placeholder="Enter your password" required>
-                         </div>
-                         <div class="button input-box">
-                             <input type="submit" value="Submit">
-@@ -107,5 +176,38 @@
-         </div>
-     </div>
- </div>
-+<script>
-+    const signupForm = document.getElementById('signupForm');
-+    const passwordInput = document.getElementById('password');
-+    const popup = document.getElementById('errorPopup');
-+    const popupMessage = document.getElementById('popupMessage');
-+    const popupOverlay = document.getElementById('popupOverlay');
-+
-+    signupForm.addEventListener('submit', handleSubmit);
-+    popupOverlay.addEventListener('click', closePopup);
-+
-+    function showPopup(message) {
-+        popupMessage.textContent = message;
-+        popup.classList.add('active');
-+        popupOverlay.classList.add('active');
-+    }
-+
-+    function closePopup() {
-+        popup.classList.remove('active');
-+        popupOverlay.classList.remove('active');
-+    }
-+
-+    function handleSubmit(event) {
-+        const password = passwordInput.value;
-+        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@#$!%*?&])[A-Za-z\d@#$!%*?&]{8,}$/;
-+
-+        if (!passwordRegex.test(password)) {
-+            event.preventDefault();
-+            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');
-+            return false;
-+        }
-+        return true;
-+    }
-+</script>
- </body>
--</html> <!-- LogIn branch-->
-\ No newline at end of file
-+</html>
-\ No newline at end of file
-Index: target/OnlineGroceryOrderSystem/data/users.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=123456\nuserNumber=US021583101081\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n\n--- User Start: US181627987900 ---\nusername=user@gmail.com\npassword=123\nuserNumber=US181627987900\nfullName=user\nemail=user@gmail.com\nphoneNumber=0000000000\naddress=xxxxxxxyyyyyyyzzzzzzzz\n--- User End ---\n\n--- User Start: US030548082274 ---\nusername=jguruge2021@gmail.com\npassword=123456\nuserNumber=US030548082274\nfullName=jayashan guruge\nemail=jguruge2021@gmail.com\nphoneNumber=0764350677\naddress=\"Sampatha\"\n--- User End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/users.txt b/target/OnlineGroceryOrderSystem/data/users.txt
---- a/target/OnlineGroceryOrderSystem/data/users.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/data/users.txt	(date 1746802491263)
-@@ -1,8 +1,8 @@
- --- User Start: US021583101081 ---
- username=alokawarnakula77@gmail.com
--password=123456
-+password=12345678A@a
- userNumber=US021583101081
--fullName=aloka warnakula
-+fullName=aloka warnakula mn
- email=alokawarnakula77@gmail.com
- phoneNumber=0711641638
- address=21/6/6A, somanada mawatha, pitumpe, padukka
-@@ -28,3 +28,13 @@
- address="Sampatha"
- --- User End ---
- 
-+--- User Start: US155435209024 ---
-+username=abc@gmail.com
-+password=123
-+userNumber=US155435209024
-+fullName=abc
-+email=abc@gmail.com
-+phoneNumber=4553
-+address=34
-+--- User End ---
-+
-Index: target/OnlineGroceryOrderSystem/data/orders.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- Order Start: OD092021244402 ---\norderNumber=OD092021244402\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-03-31 09:48:55\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=29, quantity=1\n[total]\ntotalPrice=1460.00\n--- Order End ---\n\n--- Order Start: OD543785297309 ---\norderNumber=OD543785297309\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-01 10:24:30\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=18, quantity=4\n[total]\ntotalPrice=96.00\n--- Order End ---\n\n--- Order Start: OD261952394242 ---\norderNumber=OD261952394242\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-01 11:28:45\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD753079415721 ---\norderNumber=OD753079415721\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:42:44\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=15\nproductID=41, quantity=1\n[total]\ntotalPrice=20511.00\n--- Order End ---\n\n--- Order Start: OD113125118289 ---\norderNumber=OD113125118289\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-05 16:43:56\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=1\n[total]\ntotalPrice=1337.00\n--- Order End ---\n\n--- Order Start: OD959211235390 ---\norderNumber=OD959211235390\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:44:35\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=41, quantity=1\n[total]\ntotalPrice=456.00\n--- Order End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/orders.txt b/target/OnlineGroceryOrderSystem/data/orders.txt
---- a/target/OnlineGroceryOrderSystem/data/orders.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/data/orders.txt	(date 1746804579324)
-@@ -119,3 +119,87 @@
- totalPrice=456.00
- --- Order End ---
- 
-+--- Order Start: OD529482646567 ---
-+orderNumber=OD529482646567
-+userNumber=US021583101081
-+name=aloka warnakula 
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=store pickup
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-02 11:15:12
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=49, quantity=1
-+[total]
-+totalPrice=70.00
-+--- Order End ---
-+
-+--- Order Start: OD176924944754 ---
-+orderNumber=OD176924944754
-+userNumber=US021583101081
-+name=aloka warnakula
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=store pickup
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-04 19:50:39
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=27, quantity=3
-+productID=15, quantity=1
-+productID=5, quantity=1
-+productID=9, quantity=1
-+productID=2, quantity=1
-+productID=22, quantity=1
-+productID=29, quantity=1
-+productID=25, quantity=1
-+[total]
-+totalPrice=8803.00
-+--- Order End ---
-+
-+--- Order Start: OD997161013374 ---
-+orderNumber=OD997161013374
-+userNumber=US021583101081
-+name=aloka warnakula
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=same-day
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-06 08:57:36
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=15, quantity=1
-+[total]
-+totalPrice=1458.00
-+--- Order End ---
-+
-+--- Order Start: OD500188660771 ---
-+orderNumber=OD500188660771
-+userNumber=US021583101081
-+name=aloka warnakula mn
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=same-day
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-09 20:59:33
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=26, quantity=2
-+productID=19, quantity=4
-+[total]
-+totalPrice=4100.00
-+--- Order End ---
-+
-Index: target/OnlineGroceryOrderSystem/WEB-INF/web.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for UserProfileServlet -->\n  <servlet>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <servlet-class>servlet.UserProfileServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserProfileServlet -->\n  <servlet-mapping>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <url-pattern>/UserProfileServlet</url-pattern>\n  </servlet-mapping>\n\n  <servlet>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <url-pattern>/UserProfileSearchServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Add AdminServlet mapping -->\n  <servlet>\n    <servlet-name>AdminServlet</servlet-name>\n    <servlet-class>servlet.AdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>AdminServlet</servlet-name>\n    <url-pattern>/AdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Define the OrderAdminServlet -->\n  <servlet>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <servlet-class>servlet.OrderAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <url-pattern>/OrderAdminServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for StockAdminServlet -->\n  <servlet>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <servlet-class>servlet.StockAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <url-pattern>/StockAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for ProductAdminServlet -->\n  <servlet>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <servlet-class>servlet.ProductAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <url-pattern>/ProductAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for UserAdminServlet -->\n  <servlet>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <servlet-class>servlet.UserAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserAdminServlet -->\n  <servlet-mapping>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <url-pattern>/UserAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for DealServlet -->\n  <servlet>\n    <servlet-name>DealServlet</servlet-name>\n    <servlet-class>servlet.DealServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for DealServlet -->\n  <servlet-mapping>\n    <servlet-name>DealServlet</servlet-name>\n    <url-pattern>/DealServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml
---- a/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/web.xml	(date 1746802491265)
-@@ -62,6 +62,7 @@
-   <servlet-mapping>
-     <servlet-name>LoginServlet</servlet-name>
-     <url-pattern>/LoginServlet</url-pattern>
-+    <url-pattern>/forgotPassword</url-pattern>
-   </servlet-mapping>
- 
-   <!-- Map log out -->
-@@ -167,6 +168,17 @@
-   </servlet-mapping>
- 
- 
-+  <!-- Filter Configuration -->
-+  <filter>
-+    <filter-name>SessionCheckFilter</filter-name>
-+    <filter-class>servlet.SessionCheckFilter</filter-class>
-+  </filter>
-+  <filter-mapping>
-+    <filter-name>SessionCheckFilter</filter-name>
-+    <url-pattern>/*</url-pattern>
-+  </filter-mapping>
-+
-+
-   <!-- Optional: Welcome file list -->
-   <welcome-file-list>
-     <welcome-file>index.jsp</welcome-file>
-Index: target/OnlineGroceryOrderSystem/data/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/items.txt b/target/OnlineGroceryOrderSystem/data/items.txt
---- a/target/OnlineGroceryOrderSystem/data/items.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/data/items.txt	(date 1746804704192)
-@@ -1,32 +1,32 @@
- 1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a
--2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit
--3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g
-+2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
-+3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
--9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g
-+9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g
- 10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g
- 11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g
- 12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g
- 13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g
- 14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g
--15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g
-+15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
--22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g
-+22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
--25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
--27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g
-+25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
--29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g
-+29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
- 30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg
- 31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg
- 32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g
-@@ -46,5 +46,5 @@
- 47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs
- 48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g
- 41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.
--49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake
-+49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake
- 50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg
-Index: target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt b/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt
---- a/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt	(date 1746804678706)
-@@ -1,32 +1,32 @@
- 1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a
--2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit
--3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g
-+2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
-+3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
--9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g
-+9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g
- 10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g
- 11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g
- 12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g
- 13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g
- 14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g
--15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g
-+15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
--22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g
-+22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
--25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
--27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g
-+25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
--29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g
-+29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
- 30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg
- 31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg
- 32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g
-@@ -46,5 +46,5 @@
- 47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs
- 48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g
- 41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.
--49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake
-+49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake
- 50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg
-Index: target/OnlineGroceryOrderSystem/userLogin/login.jsp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Login and Registration</title>\n    <link rel=\"stylesheet\" href=\"${pageContext.request.contextPath}/css/logIn.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body style=\"background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover\">\n<div class=\"container\">\n    <input type=\"checkbox\" id=\"flip\">\n    <div class=\"cover\">\n        <div class=\"front\">\n            <img src=\"https://i.pinimg.com/736x/6a/3a/1c/6a3a1c241f4e81ac57975037ab928d8b.jpg\" alt=\"\">\n            <div class=\"text\">\n                <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                <span class=\"text-2\">Let's get connected</span>\n            </div>\n        </div>\n        <div class=\"back\">\n            <img src=\"https://cdn.donmai.us/original/56/9f/569f8455732d366e27f396611ead70b8.jpg\">\n            <div class=\"text\">\n                <span class=\"text-1\">Complete miles of journey <br> with one step</span>\n                <span class=\"text-2\">Let's get started</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"forms\">\n        <div class=\"form-content\">\n            <div class=\"login-form\">\n                <div class=\"title\">Login</div>\n                <%\n                    // Check for error from LoginServlet (invalid credentials)\n                    String error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                    // Check for error from CartServlet (not logged in)\n                    String loginError = request.getParameter(\"error\");\n                    if (\"notLoggedIn\".equals(loginError)) {\n                %>\n                <p style=\"color: red;\">Login first before shopping</p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/LoginServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"text\"><a href=\"#\">Forgot password?</a></div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Don't have an account? <label for=\"flip\">Signup now</label></div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"signup-form\">\n                <div class=\"title\">Signup</div>\n                <%\n                    error = (String) request.getAttribute(\"error\");\n                    if (error != null) {\n                %>\n                <p style=\"color: red;\"><%= error %></p>\n                <%\n                    }\n                %>\n                <form action=\"${pageContext.request.contextPath}/RegisterServlet\" method=\"post\">\n                    <div class=\"input-boxes\">\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-user\"></i>\n                            <input type=\"text\" name=\"fullName\" placeholder=\"Enter your full name\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-envelope\"></i>\n                            <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input type=\"text\" name=\"phoneNumber\" placeholder=\"Enter your phone number\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-home\"></i>\n                            <input type=\"text\" name=\"address\" placeholder=\"Enter your address\" required>\n                        </div>\n                        <div class=\"input-box\">\n                            <i class=\"fas fa-lock\"></i>\n                            <input type=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n                        </div>\n                        <div class=\"button input-box\">\n                            <input type=\"submit\" value=\"Submit\">\n                        </div>\n                        <div class=\"text sign-up-text\">Already have an account? <label for=\"flip\">Login now</label></div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html> <!-- LogIn branch-->
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/userLogin/login.jsp b/target/OnlineGroceryOrderSystem/userLogin/login.jsp
---- a/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/userLogin/login.jsp	(date 1746802491256)
-@@ -7,8 +7,87 @@
-     <link rel="stylesheet" href="${pageContext.request.contextPath}/css/logIn.css">
-     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
-     <meta name="viewport" content="width=device-width, initial-scale=1.0">
-+    <style>
-+        .popup {
-+            display: none;
-+            position: fixed;
-+            top: 50%;
-+            left: 50%;
-+            transform: translate(-50%, -50%) scale(0.8);
-+            background: rgba(255, 255, 255, 0.98);
-+            border-radius: 15px;
-+            padding: 30px;
-+            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
-+            max-width: 400px;
-+            width: 90%;
-+            text-align: center;
-+            z-index: 1000;
-+            border: 3px solid #3E7B27;
-+            opacity: 0;
-+            transition: opacity 0.3s ease, transform 0.3s ease;
-+        }
-+        .popup.active {
-+            display: block;
-+            opacity: 1;
-+            transform: translate(-50%, -50%) scale(1);
-+        }
-+        .popup-content {
-+            position: relative;
-+        }
-+        .popup-icon {
-+            color: #3E7B27;
-+            font-size: 24px;
-+            margin-bottom: 15px;
-+        }
-+        .popup-content p {
-+            margin: 0 0 20px;
-+            font-size: 15px;
-+            color: #721c24;
-+            line-height: 1.5;
-+        }
-+        .popup-content .ok-btn {
-+            background: #5CB338;
-+            color: white;
-+            border: none;
-+            padding: 10px 20px;
-+            border-radius: 8px;
-+            cursor: pointer;
-+            font-size: 14px;
-+            text-transform: uppercase;
-+            letter-spacing: 1px;
-+            transition: background 0.3s, transform 0.2s;
-+        }
-+        .popup-content .ok-btn:hover {
-+            background: #3E7B27;
-+            transform: translateY(-2px);
-+        }
-+        .overlay {
-+            display: none;
-+            position: fixed;
-+            top: 0;
-+            left: 0;
-+            width: 100%;
-+            height: 100%;
-+            background: rgba(0, 0, 0, 0.6);
-+            z-index: 999;
-+            opacity: 0;
-+            transition: opacity 0.3s ease;
-+        }
-+        .overlay.active {
-+            display: block;
-+            opacity: 1;
-+        }
-+    </style>
- </head>
--<body style="background: url('https://wallpapers.com/images/hd/japan-farm-anime-landscape-yvqut0t4ra7u0j6l.jpg') no-repeat center center fixed; background-size: cover">
-+<body>
-+<div class="overlay" id="popupOverlay"></div>
-+<div class="popup" id="errorPopup">
-+    <div class="popup-content">
-+        <i class="fas fa-exclamation-circle popup-icon"></i>
-+        <p id="popupMessage"></p>
-+        <button class="ok-btn" onclick="closePopup()">OK</button>
-+    </div>
-+</div>
- <div class="container">
-     <input type="checkbox" id="flip">
-     <div class="cover">
-@@ -32,14 +111,12 @@
-             <div class="login-form">
-                 <div class="title">Login</div>
-                 <%
--                    // Check for error from LoginServlet (invalid credentials)
-                     String error = (String) request.getAttribute("error");
-                     if (error != null) {
-                 %>
-                 <p style="color: red;"><%= error %></p>
-                 <%
-                     }
--                    // Check for error from CartServlet (not logged in)
-                     String loginError = request.getParameter("error");
-                     if ("notLoggedIn".equals(loginError)) {
-                 %>
-@@ -57,7 +134,7 @@
-                             <i class="fas fa-lock"></i>
-                             <input type="password" name="password" placeholder="Enter your password" required>
-                         </div>
--                        <div class="text"><a href="#">Forgot password?</a></div>
-+                        <div class="text"><a href="${pageContext.request.contextPath}/userLogin/forgotPassword.jsp">Forgot password?</a></div>
-                         <div class="button input-box">
-                             <input type="submit" value="Submit">
-                         </div>
-@@ -67,15 +144,7 @@
-             </div>
-             <div class="signup-form">
-                 <div class="title">Signup</div>
--                <%
--                    error = (String) request.getAttribute("error");
--                    if (error != null) {
--                %>
--                <p style="color: red;"><%= error %></p>
--                <%
--                    }
--                %>
--                <form action="${pageContext.request.contextPath}/RegisterServlet" method="post">
-+                <form id="signupForm" action="${pageContext.request.contextPath}/RegisterServlet" method="post">
-                     <div class="input-boxes">
-                         <div class="input-box">
-                             <i class="fas fa-user"></i>
-@@ -95,7 +164,7 @@
-                         </div>
-                         <div class="input-box">
-                             <i class="fas fa-lock"></i>
--                            <input type="password" name="password" placeholder="Enter your password" required>
-+                            <input type="password" id="password" name="password" placeholder="Enter your password" required>
-                         </div>
-                         <div class="button input-box">
-                             <input type="submit" value="Submit">
-@@ -107,5 +176,38 @@
-         </div>
-     </div>
- </div>
-+<script>
-+    const signupForm = document.getElementById('signupForm');
-+    const passwordInput = document.getElementById('password');
-+    const popup = document.getElementById('errorPopup');
-+    const popupMessage = document.getElementById('popupMessage');
-+    const popupOverlay = document.getElementById('popupOverlay');
-+
-+    signupForm.addEventListener('submit', handleSubmit);
-+    popupOverlay.addEventListener('click', closePopup);
-+
-+    function showPopup(message) {
-+        popupMessage.textContent = message;
-+        popup.classList.add('active');
-+        popupOverlay.classList.add('active');
-+    }
-+
-+    function closePopup() {
-+        popup.classList.remove('active');
-+        popupOverlay.classList.remove('active');
-+    }
-+
-+    function handleSubmit(event) {
-+        const password = passwordInput.value;
-+        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@#$!%*?&])[A-Za-z\d@#$!%*?&]{8,}$/;
-+
-+        if (!passwordRegex.test(password)) {
-+            event.preventDefault();
-+            showPopup('Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character (@#$!%*?&).');
-+            return false;
-+        }
-+        return true;
-+    }
-+</script>
- </body>
--</html> <!-- LogIn branch-->
-\ No newline at end of file
-+</html>
-\ No newline at end of file
-Index: src/main/webapp/WEB-INF/web.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\">\n\n  <!-- Define the CartServlet -->\n  <servlet>\n    <servlet-name>CartServlet</servlet-name>\n    <servlet-class>servlet.CartServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the CartServlet to /CartServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>CartServlet</servlet-name>\n    <url-pattern>/CartServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the ProductDetailsServlet -->\n  <servlet>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <servlet-class>servlet.ProductDetailsServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the ProductDetailsServlet to /ProductDetailsServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>ProductDetailsServlet</servlet-name>\n    <url-pattern>/ProductDetailsServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the OrderServlet -->\n  <servlet>\n    <servlet-name>OrderServlet</servlet-name>\n    <servlet-class>servlet.OrderServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderServlet to /OrderServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderServlet</servlet-name>\n    <url-pattern>/OrderServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the RegisterServlet -->\n  <servlet>\n    <servlet-name>RegisterServlet</servlet-name>\n    <servlet-class>servlet.RegisterServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the RegisterServlet to /RegisterServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>RegisterServlet</servlet-name>\n    <url-pattern>/RegisterServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Define the LoginServlet -->\n  <servlet>\n    <servlet-name>LoginServlet</servlet-name>\n    <servlet-class>servlet.LoginServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the LoginServlet to /LoginServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>LoginServlet</servlet-name>\n    <url-pattern>/LoginServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Map log out -->\n  <servlet>\n    <servlet-name>LogoutServlet</servlet-name>\n    <servlet-class>servlet.LogoutServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>LogoutServlet</servlet-name>\n    <url-pattern>/LogoutServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for UserProfileServlet -->\n  <servlet>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <servlet-class>servlet.UserProfileServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserProfileServlet -->\n  <servlet-mapping>\n    <servlet-name>UserProfileServlet</servlet-name>\n    <url-pattern>/UserProfileServlet</url-pattern>\n  </servlet-mapping>\n\n  <servlet>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <servlet-class>servlet.UserProfileSearchServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>UserProfileSearchServlet</servlet-name>\n    <url-pattern>/UserProfileSearchServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Add AdminServlet mapping -->\n  <servlet>\n    <servlet-name>AdminServlet</servlet-name>\n    <servlet-class>servlet.AdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>AdminServlet</servlet-name>\n    <url-pattern>/AdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Define the OrderAdminServlet -->\n  <servlet>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <servlet-class>servlet.OrderAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Map the OrderAdminServlet to /OrderAdminServlet URL pattern -->\n  <servlet-mapping>\n    <servlet-name>OrderAdminServlet</servlet-name>\n    <url-pattern>/OrderAdminServlet</url-pattern>\n  </servlet-mapping>\n\n  <!-- Servlet Definition for StockAdminServlet -->\n  <servlet>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <servlet-class>servlet.StockAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>StockAdminServlet</servlet-name>\n    <url-pattern>/StockAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for ProductAdminServlet -->\n  <servlet>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <servlet-class>servlet.ProductAdminServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>ProductAdminServlet</servlet-name>\n    <url-pattern>/ProductAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for UserAdminServlet -->\n  <servlet>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <servlet-class>servlet.UserAdminServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for UserAdminServlet -->\n  <servlet-mapping>\n    <servlet-name>UserAdminServlet</servlet-name>\n    <url-pattern>/UserAdminServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Servlet Definition for DealServlet -->\n  <servlet>\n    <servlet-name>DealServlet</servlet-name>\n    <servlet-class>servlet.DealServlet</servlet-class>\n  </servlet>\n\n  <!-- Servlet Mapping for DealServlet -->\n  <servlet-mapping>\n    <servlet-name>DealServlet</servlet-name>\n    <url-pattern>/DealServlet</url-pattern>\n  </servlet-mapping>\n\n\n  <!-- Optional: Welcome file list -->\n  <welcome-file-list>\n    <welcome-file>index.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/WEB-INF/web.xml b/src/main/webapp/WEB-INF/web.xml
---- a/src/main/webapp/WEB-INF/web.xml	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/WEB-INF/web.xml	(date 1746799742911)
-@@ -62,6 +62,7 @@
-   <servlet-mapping>
-     <servlet-name>LoginServlet</servlet-name>
-     <url-pattern>/LoginServlet</url-pattern>
-+    <url-pattern>/forgotPassword</url-pattern>
-   </servlet-mapping>
- 
-   <!-- Map log out -->
-@@ -167,6 +168,17 @@
-   </servlet-mapping>
- 
- 
-+  <!-- Filter Configuration -->
-+  <filter>
-+    <filter-name>SessionCheckFilter</filter-name>
-+    <filter-class>servlet.SessionCheckFilter</filter-class>
-+  </filter>
-+  <filter-mapping>
-+    <filter-name>SessionCheckFilter</filter-name>
-+    <url-pattern>/*</url-pattern>
-+  </filter-mapping>
-+
-+
-   <!-- Optional: Welcome file list -->
-   <welcome-file-list>
-     <welcome-file>index.jsp</welcome-file>
-Index: src/main/java/servlet/LoginServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.Admin;\nimport model.FileUtil;\nimport model.User;\nimport java.util.List;\nimport java.io.IOException;\n\npublic class LoginServlet extends HttpServlet {\n    private String LOGGED_IN_USER_FILE;\n    private String USERS_FILE;\n    private String ADMINS_FILE;\n\n    @Override\n    public void init() throws ServletException {\n        String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n        LOGGED_IN_USER_FILE = basePath + \"loggedInUser.txt\";\n        USERS_FILE = basePath + \"users.txt\";\n        ADMINS_FILE = basePath + \"admins.txt\";\n        System.out.println(\"LOGGED_IN_USER_FILE path: \" + LOGGED_IN_USER_FILE);\n        System.out.println(\"USERS_FILE path: \" + USERS_FILE);\n        System.out.println(\"ADMINS_FILE path: \" + ADMINS_FILE);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String email = request.getParameter(\"email\");\n        String password = request.getParameter(\"password\");\n\n        if (email == null || password == null) {\n            System.out.println(\"Email or password missing: email=\" + email + \", password=\" + password);\n            request.setAttribute(\"error\", \"Email and password are required.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n            return;\n        }\n\n        System.out.println(\"Attempting login for email: \" + email);\n        HttpSession session = request.getSession();\n\n        // Check if the email is for an admin (ends with .admin)\n        if (email.toLowerCase().endsWith(\".admin\")) {\n            // Admin login flow\n            List<Admin> admins = FileUtil.readAdmins(ADMINS_FILE);\n            if (admins == null) {\n                System.err.println(\"Failed to read admins file: \" + ADMINS_FILE);\n                request.setAttribute(\"error\", \"Server error. Please try again later.\");\n                request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n                return;\n            }\n\n            for (Admin admin : admins) {\n                if (admin.getEmail().equals(email) && admin.getPassword().equals(password)) {\n                    System.out.println(\"Admin authenticated: \" + admin.toString());\n                    // Log the admin details to verify\n                    System.out.println(\"Setting adminNumber in session: \" + admin.getAdminNumber());\n                    System.out.println(\"Setting adminEmail in session: \" + admin.getEmail());\n                    System.out.println(\"Setting adminRole in session: \" + admin.getRole());\n                    // Store admin details in session\n                    session.setAttribute(\"adminEmail\", admin.getEmail());\n                    session.setAttribute(\"adminNumber\", admin.getAdminNumber());\n                    session.setAttribute(\"adminRole\", admin.getRole()); // Added role to session\n                    // Redirect to adminSuccessful.jsp with type=login\n                    response.sendRedirect(request.getContextPath() + \"/adminPages/adminSuccessful.jsp?type=login\");\n                    return;\n                }\n            }\n\n            // Admin authentication failed\n            System.out.println(\"Admin authentication failed for email: \" + email);\n            request.setAttribute(\"error\", \"Invalid email or password.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n        } else {\n            // Regular user login flow\n            List<User> users = FileUtil.readUsers(USERS_FILE);\n            if (users == null) {\n                System.err.println(\"Failed to read users file: \" + USERS_FILE);\n                request.setAttribute(\"error\", \"Server error. Please try again later.\");\n                request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n                return;\n            }\n\n            for (User user : users) {\n                if (user.getEmail().equals(email) && user.getPassword().equals(password)) {\n                    System.out.println(\"User authenticated: \" + user.toString());\n                    // User authenticated, create session and write to loggedInUser.txt\n                    session.setAttribute(\"user\", user);\n                    try {\n                        FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);\n                        System.out.println(\"Successfully wrote to loggedInUser.txt for user: \" + user.getEmail());\n                    } catch (Exception e) {\n                        System.err.println(\"Failed to write to loggedInUser.txt: \" + e.getMessage());\n                        e.printStackTrace();\n                    }\n                    // Redirect to Success.jsp with type=login\n                    response.sendRedirect(request.getContextPath() + \"/userLogin/Success.jsp?type=login\");\n                    return;\n                }\n            }\n\n            // User authentication failed\n            System.out.println(\"User authentication failed for email: \" + email);\n            request.setAttribute(\"error\", \"Invalid email or password.\");\n            request.getRequestDispatcher(\"/userLogin/login.jsp\").forward(request, response);\n        }\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/LoginServlet.java b/src/main/java/servlet/LoginServlet.java
---- a/src/main/java/servlet/LoginServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/java/servlet/LoginServlet.java	(date 1746792764127)
-@@ -31,7 +31,66 @@
-     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-         String email = request.getParameter("email");
-         String password = request.getParameter("password");
-+        String confirmPassword = request.getParameter("confirmPassword");
-+        String servletPath = request.getServletPath();
-+
-+        // Handle forgot password form submission
-+        if ("/forgotPassword".equals(servletPath)) {
-+            if (email == null || password == null || confirmPassword == null) {
-+                System.out.println("Email, password, or confirm password missing: email=" + email);
-+                request.setAttribute("error", "All fields are required.");
-+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
-+                return;
-+            }
-+
-+            if (!password.equals(confirmPassword)) {
-+                System.out.println("Passwords do not match for email: " + email);
-+                request.setAttribute("error", "Passwords do not match.");
-+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
-+                return;
-+            }
-+
-+            // Read users from users.txt
-+            List<User> users = FileUtil.readUsers(USERS_FILE);
-+            if (users == null) {
-+                System.err.println("Failed to read users file: " + USERS_FILE);
-+                request.setAttribute("error", "Server error. Please try again later.");
-+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
-+                return;
-+            }
-+
-+            // Find user by email
-+            User targetUser = null;
-+            for (User user : users) {
-+                if (user.getEmail().equals(email)) {
-+                    targetUser = user;
-+                    break;
-+                }
-+            }
- 
-+            if (targetUser == null) {
-+                System.out.println("No user found with email: " + email);
-+                request.setAttribute("error", "No account found with this email.");
-+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
-+                return;
-+            }
-+
-+            // Update user's password
-+            targetUser.setPassword(password);
-+            try {
-+                FileUtil.writeUsers(USERS_FILE, users);
-+                System.out.println("Password updated for user: " + email);
-+                request.setAttribute("success", "Password reset successfully. Please login with your new password.");
-+                request.getRequestDispatcher("/userLogin/login.jsp").forward(request, response);
-+            } catch (IOException e) {
-+                System.err.println("Error writing updated users to file: " + e.getMessage());
-+                request.setAttribute("error", "Error updating password. Please try again later.");
-+                request.getRequestDispatcher("/userLogin/forgotPassword.jsp").forward(request, response);
-+            }
-+            return;
-+        }
-+
-+        // Existing login logic
-         if (email == null || password == null) {
-             System.out.println("Email or password missing: email=" + email + ", password=" + password);
-             request.setAttribute("error", "Email and password are required.");
-@@ -56,15 +115,12 @@
-             for (Admin admin : admins) {
-                 if (admin.getEmail().equals(email) && admin.getPassword().equals(password)) {
-                     System.out.println("Admin authenticated: " + admin.toString());
--                    // Log the admin details to verify
-                     System.out.println("Setting adminNumber in session: " + admin.getAdminNumber());
-                     System.out.println("Setting adminEmail in session: " + admin.getEmail());
-                     System.out.println("Setting adminRole in session: " + admin.getRole());
--                    // Store admin details in session
-                     session.setAttribute("adminEmail", admin.getEmail());
-                     session.setAttribute("adminNumber", admin.getAdminNumber());
--                    session.setAttribute("adminRole", admin.getRole()); // Added role to session
--                    // Redirect to adminSuccessful.jsp with type=login
-+                    session.setAttribute("adminRole", admin.getRole());
-                     response.sendRedirect(request.getContextPath() + "/adminPages/adminSuccessful.jsp?type=login");
-                     return;
-                 }
-@@ -87,7 +143,6 @@
-             for (User user : users) {
-                 if (user.getEmail().equals(email) && user.getPassword().equals(password)) {
-                     System.out.println("User authenticated: " + user.toString());
--                    // User authenticated, create session and write to loggedInUser.txt
-                     session.setAttribute("user", user);
-                     try {
-                         FileUtil.writeLoggedInUser(LOGGED_IN_USER_FILE, user);
-@@ -96,7 +151,6 @@
-                         System.err.println("Failed to write to loggedInUser.txt: " + e.getMessage());
-                         e.printStackTrace();
-                     }
--                    // Redirect to Success.jsp with type=login
-                     response.sendRedirect(request.getContextPath() + "/userLogin/Success.jsp?type=login");
-                     return;
-                 }
-Index: src/main/java/servlet/LogoutServlet.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package servlet;\n\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServlet;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport model.FileUtil;\n\nimport java.io.IOException;\n\npublic class LogoutServlet extends HttpServlet {\n    private String LOGGED_IN_USER_FILE;\n\n    @Override\n    public void init() throws ServletException {\n        String basePath = \"/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/data/\";\n        LOGGED_IN_USER_FILE = basePath + \"loggedInUser.txt\";\n        System.out.println(\"LogoutServlet initialized with LOGGED_IN_USER_FILE: \" + LOGGED_IN_USER_FILE);\n    }\n\n    @Override\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        // Invalidate session\n        HttpSession session = request.getSession(false);\n        if (session != null) {\n            // Clear admin-specific session attributes\n            session.removeAttribute(\"adminEmail\");\n            session.removeAttribute(\"adminRole\");\n            // Clear user-specific session attributes\n            session.removeAttribute(\"user\");\n            session.invalidate();\n            System.out.println(\"Session invalidated during logout.\");\n        }\n\n        // Clear loggedInUser.txt (only used for regular users)\n        try {\n            FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);\n            System.out.println(\"Cleared loggedInUser.txt during logout.\");\n        } catch (Exception e) {\n            System.err.println(\"Error clearing loggedInUser.txt during logout: \" + e.getMessage());\n        }\n\n        // Get success message from query parameter\n        String successMessage = request.getParameter(\"success\");\n        if (successMessage == null || successMessage.trim().isEmpty()) {\n            successMessage = \"Logged out successfully\";\n        }\n\n        // Redirect to index.jsp with success message\n        response.sendRedirect(request.getContextPath() + \"/index.jsp?success=\" + java.net.URLEncoder.encode(successMessage, \"UTF-8\"));\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/servlet/LogoutServlet.java b/src/main/java/servlet/LogoutServlet.java
---- a/src/main/java/servlet/LogoutServlet.java	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/java/servlet/LogoutServlet.java	(date 1746802712280)
-@@ -8,6 +8,7 @@
- import model.FileUtil;
- 
- import java.io.IOException;
-+import java.io.PrintWriter;
- 
- public class LogoutServlet extends HttpServlet {
-     private String LOGGED_IN_USER_FILE;
-@@ -21,33 +22,54 @@
- 
-     @Override
-     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
--        // Invalidate session
--        HttpSession session = request.getSession(false);
--        if (session != null) {
--            // Clear admin-specific session attributes
--            session.removeAttribute("adminEmail");
--            session.removeAttribute("adminRole");
--            // Clear user-specific session attributes
--            session.removeAttribute("user");
--            session.invalidate();
--            System.out.println("Session invalidated during logout.");
--        }
-+        try {
-+            // Invalidate session
-+            HttpSession session = request.getSession(false);
-+            if (session != null) {
-+                // Clear admin-specific session attributes
-+                session.removeAttribute("adminEmail");
-+                session.removeAttribute("adminRole");
-+                // Clear user-specific session attributes
-+                session.removeAttribute("user");
-+                session.invalidate();
-+                System.out.println("Session invalidated during logout.");
-+            }
- 
--        // Clear loggedInUser.txt (only used for regular users)
--        try {
--            FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);
--            System.out.println("Cleared loggedInUser.txt during logout.");
--        } catch (Exception e) {
--            System.err.println("Error clearing loggedInUser.txt during logout: " + e.getMessage());
--        }
-+            // Clear loggedInUser.txt (only used for regular users)
-+            try {
-+                FileUtil.clearLoggedInUser(LOGGED_IN_USER_FILE);
-+                System.out.println("Cleared loggedInUser.txt during logout.");
-+            } catch (Exception e) {
-+                System.err.println("Error clearing loggedInUser.txt during logout: " + e.getMessage());
-+            }
- 
--        // Get success message from query parameter
--        String successMessage = request.getParameter("success");
--        if (successMessage == null || successMessage.trim().isEmpty()) {
--            successMessage = "Logged out successfully";
--        }
-+            // Ensure no new session is created after invalidation
-+            request.getSession(false); // Do not create a new session
-+
-+            // Get success message from query parameter
-+            String successMessage = request.getParameter("success");
-+            if (successMessage == null || successMessage.trim().isEmpty()) {
-+                successMessage = "Logged out successfully";
-+            }
- 
--        // Redirect to index.jsp with success message
--        response.sendRedirect(request.getContextPath() + "/index.jsp?success=" + java.net.URLEncoder.encode(successMessage, "UTF-8"));
-+            // Redirect to index.jsp with success message
-+            String redirectUrl = request.getContextPath() + "/index.jsp?success=" + java.net.URLEncoder.encode(successMessage, "UTF-8");
-+            System.out.println("Redirecting to: " + redirectUrl);
-+            response.sendRedirect(redirectUrl);
-+        } catch (Exception e) {
-+            // Fallback in case redirect fails
-+            System.err.println("Error during logout redirect: " + e.getMessage());
-+            response.setContentType("text/html");
-+            PrintWriter out = response.getWriter();
-+            out.println("<html><body>");
-+            out.println("<h2>Error During Logout</h2>");
-+            out.println("<p>An error occurred while redirecting. Please go to the <a href=\"" + request.getContextPath() + "/index.jsp\">home page</a>.</p>");
-+            out.println("</body></html>");
-+        }
-+    }
-+
-+    @Override
-+    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-+        doGet(request, response);
-     }
- }
-\ No newline at end of file
-Index: src/main/webapp/data/orders.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- Order Start: OD092021244402 ---\norderNumber=OD092021244402\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-03-31 09:48:55\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=29, quantity=1\n[total]\ntotalPrice=1460.00\n--- Order End ---\n\n--- Order Start: OD543785297309 ---\norderNumber=OD543785297309\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-01 10:24:30\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=18, quantity=4\n[total]\ntotalPrice=96.00\n--- Order End ---\n\n--- Order Start: OD261952394242 ---\norderNumber=OD261952394242\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-01 11:28:45\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=15, quantity=1\n[total]\ntotalPrice=1458.00\n--- Order End ---\n\n--- Order Start: OD753079415721 ---\norderNumber=OD753079415721\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:42:44\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=15\nproductID=41, quantity=1\n[total]\ntotalPrice=20511.00\n--- Order End ---\n\n--- Order Start: OD113125118289 ---\norderNumber=OD113125118289\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=same-day\npaymentMethod=online card\ndeliveryDate=\nconfirmationDate=2025-04-05 16:43:56\npaymentStatus=Paid\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=27, quantity=1\n[total]\ntotalPrice=1337.00\n--- Order End ---\n\n--- Order Start: OD959211235390 ---\norderNumber=OD959211235390\nuserNumber=US021583101081\nname=aloka warnakula\nphoneNum=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\ndeliveryMethod=store pickup\npaymentMethod=cash on delivery\ndeliveryDate=\nconfirmationDate=2025-04-05 16:44:35\npaymentStatus=Pending\ndeliveryStatus=Pending\norderStatus=Pending\ndeliveredDate=\n[products]\nproductID=41, quantity=1\n[total]\ntotalPrice=456.00\n--- Order End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/orders.txt b/src/main/webapp/data/orders.txt
---- a/src/main/webapp/data/orders.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/data/orders.txt	(date 1746804573571)
-@@ -119,3 +119,87 @@
- totalPrice=456.00
- --- Order End ---
- 
-+--- Order Start: OD529482646567 ---
-+orderNumber=OD529482646567
-+userNumber=US021583101081
-+name=aloka warnakula 
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=store pickup
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-02 11:15:12
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=49, quantity=1
-+[total]
-+totalPrice=70.00
-+--- Order End ---
-+
-+--- Order Start: OD176924944754 ---
-+orderNumber=OD176924944754
-+userNumber=US021583101081
-+name=aloka warnakula
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=store pickup
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-04 19:50:39
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=27, quantity=3
-+productID=15, quantity=1
-+productID=5, quantity=1
-+productID=9, quantity=1
-+productID=2, quantity=1
-+productID=22, quantity=1
-+productID=29, quantity=1
-+productID=25, quantity=1
-+[total]
-+totalPrice=8803.00
-+--- Order End ---
-+
-+--- Order Start: OD997161013374 ---
-+orderNumber=OD997161013374
-+userNumber=US021583101081
-+name=aloka warnakula
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=same-day
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-06 08:57:36
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=15, quantity=1
-+[total]
-+totalPrice=1458.00
-+--- Order End ---
-+
-+--- Order Start: OD500188660771 ---
-+orderNumber=OD500188660771
-+userNumber=US021583101081
-+name=aloka warnakula mn
-+phoneNum=0711641638
-+address=21/6/6A, somanada mawatha, pitumpe, padukka
-+deliveryMethod=same-day
-+paymentMethod=cash on delivery
-+confirmationDate=2025-05-09 20:59:33
-+paymentStatus=Pending
-+deliveryStatus=Pending
-+orderStatus=Pending
-+deliveredDate=
-+[products]
-+productID=26, quantity=2
-+productID=19, quantity=4
-+[total]
-+totalPrice=4100.00
-+--- Order End ---
-+
-Index: src/main/webapp/data/items.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a\n2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit\n3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g\n4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g\n5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g\n6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g\n7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g\n8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g\n9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g\n10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g\n11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g\n12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g\n13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g\n14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g\n15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g\n16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g\n17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g\n18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g\n19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg\n20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg\n21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g\n22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g\n23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg\n24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg\n25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g\n26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g\n27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g\n28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs\n29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g\n30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg\n31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg\n32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g\n33,Proteins,Large prawns,1875.00,https://media.istockphoto.com/id/1255181693/photo/banana-prawn-or-shrimp-isolated-on-white-background-white-shrimp-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=X_sO0D9U1J98JcubDdEuR6kGOxbHZVc-OxVKeqzjXtY=,10,Only 1kg\n34,Proteins,Lobster,4375.00,https://meatmart.lk/wp-content/uploads/2023/06/Lobster-KG.webp,9,Only 1kg\n35,Proteins,Cuttle Fish,2250.00,https://meatmart.lk/wp-content/uploads/2023/06/frozen-squid-fish-500x500-1-768x768.webp.webp,9,Only 1kg\n36,Proteins,Gar fish (Habarali),3500.00,https://tropicalshellfish.com/wp-content/uploads/2021/09/habaralli.jpg,6,Only 1kg\n37,Proteins,Big Crab,4375.00,https://media.istockphoto.com/id/453209605/photo/isolated-whole-dungeness-crab.jpg?s=612x612&w=0&k=20&c=OINq23e6m6kOS20psfnnkGN-RU33L__34IH-7rG8F7Y=,9,Only 1kg\n38,Proteins,Big Anchovy,1500.00,https://www.shutterstock.com/image-photo/close-anchovies-gray-anchovy-isolated-260nw-2324973519.jpg,9,Only 1kg\n39,Proteins,Tuna,3422.00,https://media.istockphoto.com/id/473827068/photo/bluefin-tuna-really-fresh-isolated-on-white.jpg?s=612x612&w=0&k=20&c=AK8XBCRAc50bDQ5YFFSayT8TbujkZPEhk5xzGHrkSIk=,10,Only 1kg\n40,Proteins,Turkey S/L,4999.00,https://img.freepik.com/premium-photo/natural-fresh-raw-turkey-meat-isolated-white-background_787273-69566.jpg,8,Only 1kg\n42,Proteins,Chicken boneless,3450.00,https://static.vecteezy.com/system/resources/previews/050/024/853/large_2x/a-pile-of-boneless-skinless-chicken-breasts-on-a-white-background-free-photo.jpg,10,Only 1kg\n43,Proteins,Chicken Whole Leg,2450.00,https://spar2u.lk/cdn/shop/files/Chickenwholelegskinon_458x595.jpg?v=1739447117,10,ONly 500g\n44,Proteins,Thalapath Fish,2242.00,https://ican-mall.oss-ap-southeast-1.aliyuncs.com/2024/05/c0c5fb6126924c28bd13355baaaaf32f.webp,9,Only 600g\n45,Proteins,Squid,1525.00,https://thumbs.dreamstime.com/b/fresh-squid-isolated-white-background-44144491.jpg,10,Only 500g\n46,Proteins,Brown Egg,55.00,https://img.freepik.com/premium-photo/chicken-egg-white-background_55716-1235.jpg,10,Only 1Pcs\n47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs\n48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g\n41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.\n49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake\n50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/items.txt b/src/main/webapp/data/items.txt
---- a/src/main/webapp/data/items.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/data/items.txt	(date 1746804698218)
-@@ -1,32 +1,32 @@
- 1,Produce,Red Onions,250.00,https://www.shutterstock.com/image-photo/isolated-red-big-onions-white-600nw-1782386771.jpg,300,Fresh Big Onions 1kg a
--2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,260,Fresh Coconut Price of One Unit
--3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,50,Only 500g
-+2,Produce,Coconut,230.00,https://img.freepik.com/premium-photo/coconut-isolated-white-background_252965-356.jpg,259,Fresh Coconut Price of One Unit
-+3,Produce,Tomato,160.00,https://t4.ftcdn.net/jpg/00/29/78/85/360_F_29788505_PbGEDPBhQIxW2soJMOpLlYOybLrvPt2e.jpg,300,Only 500g
- 4,Produce,Potatoes,190.00,https://i.pinimg.com/736x/33/7e/fa/337efa818550fce97fa5991ea513c16b.jpg,500,Only 500g
--5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,9,Only 500g
-+5,Produce,Carrot,425.00,https://t4.ftcdn.net/jpg/00/80/96/17/360_F_80961739_hep1UZaQRsy5WQOYU3jkOr5CB7A6xc3U.jpg,99,Only 500g
- 6,Produce,Garlic,260.00,https://as2.ftcdn.net/v2/jpg/03/20/58/51/1000_F_320585105_SRCBaxOcZg6lmllMmtt6tKTu9eN4s30B.jpg,8,Only 250g
- 7,Produce,Brinjal,67.00,https://static.vecteezy.com/system/resources/previews/004/158/962/non_2x/eggplant-isolated-on-a-white-background-photo.jpg,0,Only 350g
- 8,Produce,Raw Ginger,278.00,https://static.vecteezy.com/system/resources/previews/030/668/174/non_2x/ginger-with-white-background-high-quality-ultra-hd-free-photo.jpg,8,Only 150g
--9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,7,Only 500g
-+9,Produce,Cabbage,215.00,https://as2.ftcdn.net/jpg/02/96/54/63/1000_F_296546395_Tw3FfCAV6Ss6U0tufcgVE3Twf01LZutt.jpg,6,Only 500g
- 10,Produce,Pumpkin,90.00,https://t4.ftcdn.net/jpg/00/69/19/07/360_F_69190757_a37tIJk6fq40BADf78ewXZyc0HIL3mBU.jpg,8,Only 500g
- 11,Produce,Bitter Gourd,118.00,https://t4.ftcdn.net/jpg/03/89/85/85/360_F_389858598_TSNp6HysawjDuyAtRrJdru6Kf8LEZXbt.jpg,0,Only 250g
- 12,Produce,Sweet Potatoes,139.00,https://img.freepik.com/premium-photo/sweet-potato-isolated-white-background_316968-712.jpg,8,Only 500g
- 13,Produce,Cauliflower,269.00,https://media.istockphoto.com/id/186828790/photo/cauliflower-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=oLL9OeCwhHolL-MqXb3CZEkL0NyE483_vEqm3Tj0Lzo=,7,Only 300g
- 14,Produce,Cucumber,92.00,https://img.freepik.com/premium-photo/cucumber-vegetable-isolated-white-background_42033-135.jpg,8,Only 400g
--15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,3,Only 300g
-+15,Produce,Broccoli,1458.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9WtHcQiqLRmr827_jDvo_NlEceWQsQ7xRiw&s,1,Only 300g
- 16,Produce,Kesel Muwa,60.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoKGxtMpNYFRMtMSzC8U4RtMz_qamZ-WNriw&s,0,Only 500g
- 17,Produce,Bell Pepper Green,1200.00,https://media.istockphoto.com/id/922745944/photo/green-peppers-on-white-background.jpg?s=612x612&w=0&k=20&c=ANUMSGzCw2oEd44ZVOmlgjDd8gAhJN0gSg6dLqBai6I=,0,Only 500g
- 18,Produce,Lettuce,24.00,https://thumbs.dreamstime.com/b/organic-vegetable-salad-green-frillice-iceberg-lettuce-isolated-white-background-151715371.jpg,0,Only 100g
--19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,10,Only 1kg
-+19,Pantry,Rice,260.00,https://media.istockphoto.com/id/483226970/photo/heap-of-raw-basmati-rice.jpg?s=612x612&w=0&k=20&c=aaNOxz6AvGftzj3pyJ7SWjXTXyz79mPB9hdphbOZDwc=,6,Only 1kg
- 20,Produce,Pineapple,650.00,https://static5.depositphotos.com/1000188/481/i/950/depositphotos_4810705-stock-photo-fresh-slice-pineapple-on-white.jpg,7,Only 1.25kg
- 21,Produce,Imported Red Grapes,1164.00,https://gabbarfarms.com/cdn/shop/products/ImportedGrpes_600x.jpg?v=1634633431,5,Only 500g
--22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,7,Only 600g
-+22,Produce,Imported Mandarin,864.00,https://media.istockphoto.com/id/504384796/photo/fresh-ripe-tangerines.jpg?s=612x612&w=0&k=20&c=12Gp6Nkk_Vef64j29TDtXt3JZHY-jV9H3DMmuDHsRAE=,5,Only 600g
- 23,Produce,Sweet Water Melon,400.00,https://thumbs.dreamstime.com/b/whole-ripe-watermelon-quarter-isolated-white-background-full-depth-field-whole-ripe-watermelon-quarter-isolated-156340918.jpg,9,Only 2kg
- 24,Produce,Papaya,450.00,https://t3.ftcdn.net/jpg/05/13/26/84/360_F_513268409_H7YzF29YTUuJ4KvoC8VNxUM40m9PfIdx.jpg,8,Only 1.25kg
--25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,8,Only 500g
--26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,7,Only 500g
--27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,27,Only 700g
-+25,Produce,Kolikuttu,140.00,https://spar2u.lk/cdn/shop/files/Kolikuttubanana.jpg?v=1739447092,7,Only 500g
-+26,Produce,Imported Pomegranate,1530.00,https://media.istockphoto.com/id/940118920/photo/ripe-pomegranate-fruit-and-one-cut-in-half-with-leaf.jpg?s=612x612&w=0&k=20&c=iVTrJvW6rtFTlsWk5J3v1r1NeCgNtZMD4qDJIh3sfik=,5,Only 500g
-+27,Produce,Apple,1337.00,https://png.pngtree.com/png-vector/20240612/ourmid/pngtree-red-fresh-apple-white-background-png-image_12643725.png,20,Only 700g
- 28,Produce,King Coconut,240.00,https://t4.ftcdn.net/jpg/05/24/15/17/360_F_524151797_uBpqhFFLGqSNHht2ORoWypI03yY5SGaN.jpg,8,Only 1Pcs
--29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,7,Only 500g
-+29,Produce,Kiwi Fruit,1460.00,https://i.pinimg.com/736x/13/fe/74/13fe7434de9b4c36410744dbd843fdff.jpg,6,Only 500g
- 30,Produce,Soursop,525.00,https://media.istockphoto.com/id/1369037177/photo/soursop-or-custard-apple-fruit-isolated-on-white-background.jpg?s=612x612&w=0&k=20&c=3iHof9sefP0PNUh4rnXM4hBuMS_YnOgOnNbDzap9DPU=,9,Only 1kg
- 31,Pantry,Dahal,289.00,https://www.shutterstock.com/image-photo/red-lentils-isolated-on-white-600nw-2332458631.jpg,9,Only 1kg
- 32,Produce,Strawberry,1290.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KZF0L6SWyX0c6SRYlltKJZuWeHfcbbDiTw&s,32,Only 250g
-@@ -46,5 +46,5 @@
- 47,Proteins,White Egg,40.00,https://media.istockphoto.com/id/467061077/photo/eggs-isolated-on-a-white-background.jpg?s=612x612&w=0&k=20&c=K6RZK8UR5hzHy4auNEKHV0EdkBVnVlyLlfBflpUXP-g=,20,Only 1Pcs
- 48,Proteins,Sausage,690.00,https://static.vecteezy.com/system/resources/previews/026/978/295/large_2x/grilled-pork-sausages-with-lettuce-isolated-on-white-background-photo.jpg,10,Only 500g
- 41,Produce,anime,456.00,https://uchi.imgix.net/properties/anime2.png?crop=focalpoint&domain=uchi.imgix.net&fit=crop&fm=pjpg&fp-x=0.5&fp-y=0.5&h=558&ixlib=php-3.3.1&q=82&usm=20&w=992,18,anime watch and enjoy it.
--49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,40,25.00g Rollo Cake
-+49,Bakery,Tiara Rollo Cake,70.00,https://essstr.blob.core.windows.net/essimg/ItemAsset/Pic12171.jpg,39,25.00g Rollo Cake
- 50,Produce,Dragon Fruit,1500.00,https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQPEFyc7mDC49UthRxicEvU6UaS1nShvCsJlQ&s,200,Only 1kg
-Index: src/main/webapp/data/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=123456\nuserNumber=US021583101081\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/loggedInUser.txt b/src/main/webapp/data/loggedInUser.txt
---- a/src/main/webapp/data/loggedInUser.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/data/loggedInUser.txt	(date 1746804538025)
-@@ -1,8 +1,8 @@
- --- User Start: US021583101081 ---
- username=alokawarnakula77@gmail.com
--password=123456
-+password=12345678A@a
- userNumber=US021583101081
--fullName=aloka warnakula
-+fullName=aloka warnakula mn
- email=alokawarnakula77@gmail.com
- phoneNumber=0711641638
- address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: target/OnlineGroceryOrderSystem/data/loggedInUser.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=123456\nuserNumber=US021583101081\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/target/OnlineGroceryOrderSystem/data/loggedInUser.txt b/target/OnlineGroceryOrderSystem/data/loggedInUser.txt
---- a/target/OnlineGroceryOrderSystem/data/loggedInUser.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/target/OnlineGroceryOrderSystem/data/loggedInUser.txt	(date 1746804579324)
-@@ -1,8 +1,8 @@
- --- User Start: US021583101081 ---
- username=alokawarnakula77@gmail.com
--password=123456
-+password=12345678A@a
- userNumber=US021583101081
--fullName=aloka warnakula
-+fullName=aloka warnakula mn
- email=alokawarnakula77@gmail.com
- phoneNumber=0711641638
- address=21/6/6A, somanada mawatha, pitumpe, padukka
-Index: src/main/webapp/data/users.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>--- User Start: US021583101081 ---\nusername=alokawarnakula77@gmail.com\npassword=123456\nuserNumber=US021583101081\nfullName=aloka warnakula\nemail=alokawarnakula77@gmail.com\nphoneNumber=0711641638\naddress=21/6/6A, somanada mawatha, pitumpe, padukka\n--- User End ---\n\n--- User Start: US181627987900 ---\nusername=user@gmail.com\npassword=123\nuserNumber=US181627987900\nfullName=user\nemail=user@gmail.com\nphoneNumber=0000000000\naddress=xxxxxxxyyyyyyyzzzzzzzz\n--- User End ---\n\n--- User Start: US030548082274 ---\nusername=jguruge2021@gmail.com\npassword=123456\nuserNumber=US030548082274\nfullName=jayashan guruge\nemail=jguruge2021@gmail.com\nphoneNumber=0764350677\naddress=\"Sampatha\"\n--- User End ---\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/webapp/data/users.txt b/src/main/webapp/data/users.txt
---- a/src/main/webapp/data/users.txt	(revision 8ba6ac313ba7e4d9861d6f807e320f279a84820b)
-+++ b/src/main/webapp/data/users.txt	(date 1746798993909)
-@@ -1,8 +1,8 @@
- --- User Start: US021583101081 ---
- username=alokawarnakula77@gmail.com
--password=123456
-+password=12345678A@a
- userNumber=US021583101081
--fullName=aloka warnakula
-+fullName=aloka warnakula mn
- email=alokawarnakula77@gmail.com
- phoneNumber=0711641638
- address=21/6/6A, somanada mawatha, pitumpe, padukka
-@@ -28,3 +28,13 @@
- address="Sampatha"
- --- User End ---
- 
-+--- User Start: US155435209024 ---
-+username=abc@gmail.com
-+password=123
-+userNumber=US155435209024
-+fullName=abc
-+email=abc@gmail.com
-+phoneNumber=4553
-+address=34
-+--- User End ---
-+
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_21PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_21PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_21PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09__9_21PM__Changes_.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ /dev/null	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]" date="1746805906721" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2025-05-09, 9:21 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LoginServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/LoginServlet.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LogoutServlet.class" />
-    <option name="AFTER_PATH" value="target/OnlineGroceryOrderSystem/WEB-INF/classes/servlet/LogoutServlet.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_21 PM_[Changes]/LogoutServlet.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ArtifactsWorkspaceSettings\">\n    <artifacts-to-build>\n      <artifact name=\"OnlineGroceryOrderSystem:war exploded\" />\n    </artifacts-to-build>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"7feb0de7-0214-41fa-b444-d82370075b7f\" name=\"Changes\" comment=\"Final Update\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/data/deliveredOrders.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/data/deliveredOrders.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/data/items.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/data/items.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/data/loggedInUser.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/data/loggedInUser.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/data/orders.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/data/orders.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/data/users.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/data/users.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/index.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/index.jsp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/items.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/items.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/loggedInUser.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/loggedInUser.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/orders.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/orders.txt\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CompilerWorkspaceConfiguration\">\n    <option name=\"MAKE_PROJECT_ON_SAVE\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n        <option value=\"Jsp File\" />\n        <option value=\"CSS File\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"Aloka Warnakula &lt;106167992+alokawarnakula@users.noreply.github.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"feature/cart\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;AlokaWarnakula&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/AlokaWarnakula/OnlineGroceryOrderManagmentSystem1.git&quot;,\n    &quot;accountId&quot;: &quot;e14b91d8-0d9e-4535-8655-fdd04ae3fbd5&quot;\n  }\n}</component>\n  <component name=\"LogFilters\">\n    <option name=\"FILTER_ERRORS\" value=\"false\" />\n    <option name=\"FILTER_WARNINGS\" value=\"false\" />\n    <option name=\"FILTER_INFO\" value=\"true\" />\n    <option name=\"FILTER_DEBUG\" value=\"true\" />\n    <option name=\"CUSTOM_FILTER\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2tx0tsS6tiSOEkS8rWK1svZvpPV\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.FileUtilTest.executor&quot;: &quot;Run&quot;,\n    &quot;JavaScript Debug.Tomcat 10.1.36 JavaScript.executor&quot;: &quot;Debug&quot;,\n    &quot;Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.OnlineGroceryOrderSystem [clean,install].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.OnlineGroceryOrderSystem [clean,package].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.OnlineGroceryOrderSystem [clean].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.OnlineGroceryOrderSystem [install].executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;Smart Tomcat.NotWorkingTest.executor&quot;: &quot;Run&quot;,\n    &quot;Smart Tomcat.OnlineGroceryOrderSystem.executor&quot;: &quot;Run&quot;,\n    &quot;Smart Tomcat.Unnamed.executor&quot;: &quot;Run&quot;,\n    &quot;Tomcat Server.Tomcat 10.1.36.executor&quot;: &quot;Run&quot;,\n    &quot;Tomcat Server.testProjectWithUpdates.executor&quot;: &quot;Run&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/alokawarnakula/TestOOPProjectFolder/OnlineGroceryOrderSystem/src/main/webapp/userLogIn&quot;,\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.1150748&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/userLogIn\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/cartAndOrders\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/WEB-INF\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/Images/FI\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/userLogin\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/WEB-INF\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/Images/FI\" />\n      <recent name=\"$PROJECT_DIR$/src/main/webapp/cartPath/checkOut\" />\n    </key>\n  </component>\n  <component name=\"RunAnythingCache\">\n    <option name=\"myCommands\">\n      <command value=\"mvn clean package\" />\n      <command value=\"mvn install\" />\n      <command value=\"mvn clean install\" />\n      <command value=\"mvn clean\" />\n    </option>\n  </component>\n  <component name=\"RunDashboard\">\n    <option name=\"configurationTypes\">\n      <set>\n        <option value=\"com.poratu.idea.plugins.tomcat\" />\n      </set>\n    </option>\n  </component>\n  <component name=\"RunManager\" selected=\"Tomcat Server.Tomcat 10.1.36\">\n    <configuration name=\"Tomcat 10.1.36\" type=\"#com.intellij.j2ee.web.tomcat.TomcatRunConfigurationFactory\" factoryName=\"Local\" editBeforeRun=\"true\" focusToolWindowBeforeRun=\"true\" APPLICATION_SERVER_NAME=\"Tomcat 10.1.36\" ALTERNATIVE_JRE_ENABLED=\"false\" nameIsGenerated=\"true\">\n      <option name=\"UPDATE_ON_FRAME_DEACTIVATION\" value=\"true\" />\n      <option name=\"UPDATE_CLASSES_ON_FRAME_DEACTIVATION\" value=\"true\" />\n      <deployment>\n        <artifact name=\"OnlineGroceryOrderSystem:war exploded\">\n          <settings>\n            <option name=\"CONTEXT_PATH\" value=\"/OnlineGroceryOrderSystem_war_exploded\" />\n          </settings>\n        </artifact>\n      </deployment>\n      <server-settings>\n        <option name=\"BASE_DIRECTORY_NAME\" value=\"725df517-cd59-4ac7-bf21-09932d94ecd3\" />\n        <option name=\"DEPLOY_TOMCAT_APPS\" value=\"true\" />\n        <option name=\"PRESERVE_SESSIONS\" value=\"true\" />\n      </server-settings>\n      <predefined_log_file enabled=\"true\" id=\"Tomcat\" />\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Catalina\" />\n      <predefined_log_file id=\"Tomcat Manager\" />\n      <predefined_log_file id=\"Tomcat Host Manager\" />\n      <predefined_log_file id=\"Tomcat Localhost Access\" />\n      <RunnerSettings RunnerId=\"Debug\">\n        <option name=\"DEBUG_PORT\" value=\"50345\" />\n      </RunnerSettings>\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Cover\">\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\n        <STARTUP>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </STARTUP>\n        <SHUTDOWN>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </SHUTDOWN>\n      </ConfigurationWrapper>\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Debug\">\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\n        <STARTUP>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </STARTUP>\n        <SHUTDOWN>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </SHUTDOWN>\n      </ConfigurationWrapper>\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Profile\">\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\n        <STARTUP>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </STARTUP>\n        <SHUTDOWN>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </SHUTDOWN>\n      </ConfigurationWrapper>\n      <ConfigurationWrapper VM_VAR=\"JAVA_OPTS\" RunnerId=\"Run\">\n        <option name=\"USE_ENV_VARIABLES\" value=\"true\" />\n        <STARTUP>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </STARTUP>\n        <SHUTDOWN>\n          <option name=\"USE_DEFAULT\" value=\"true\" />\n          <option name=\"SCRIPT\" value=\"\" />\n          <option name=\"VM_PARAMETERS\" value=\"\" />\n          <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n        </SHUTDOWN>\n      </ConfigurationWrapper>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n        <option name=\"BuildArtifacts\" enabled=\"true\">\n          <artifact name=\"OnlineGroceryOrderSystem:war exploded\" />\n        </option>\n      </method>\n    </configuration>\n    <configuration name=\"NotWorkingTest\" type=\"com.poratu.idea.plugins.tomcat\" editBeforeRun=\"true\" focusToolWindowBeforeRun=\"true\">\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Localhost Log\" />\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Access Log\" />\n      <predefined_log_file id=\"Tomcat Catalina Log\" />\n      <predefined_log_file id=\"Tomcat Manager Log\" />\n      <predefined_log_file id=\"Tomcat Host Manager Log\" />\n      <option name=\"catalinaBase\" value=\"$USER_HOME$/.SmartTomcat/OnlineGroceryOrderSystem/OnlineGroceryOrderSystem\" />\n      <option name=\"contextPath\" value=\"/OnlineGroceryOrderSystem\" />\n      <option name=\"docBase\" value=\"$PROJECT_DIR$/src/main/webapp\" />\n      <option name=\"extraClassPath\" value=\"\" />\n      <option name=\"port\" value=\"8081\" />\n      <option name=\"tomcatInfo\">\n        <TomcatInfo>\n          <option name=\"name\" value=\"Apache Tomcat/10.1.36\" />\n          <option name=\"path\" value=\"$USER_HOME$/apache-tomcat-10.1.36\" />\n          <option name=\"version\" value=\"10.1.36.0\" />\n        </TomcatInfo>\n      </option>\n      <option name=\"vmOptions\" value=\"\" />\n      <module name=\"OnlineGroceryOrderSystem\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n        <option name=\"BuildArtifacts\" enabled=\"true\">\n          <artifact name=\"OnlineGroceryOrderSystem:war exploded\" />\n        </option>\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"com.poratu.idea.plugins.tomcat\">\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Localhost Log\" />\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Access Log\" />\n      <predefined_log_file id=\"Tomcat Catalina Log\" />\n      <predefined_log_file id=\"Tomcat Manager Log\" />\n      <predefined_log_file id=\"Tomcat Host Manager Log\" />\n      <option name=\"catalinaBase\" value=\"\" />\n      <option name=\"contextPath\" value=\"\" />\n      <option name=\"docBase\" value=\"$PROJECT_DIR$/src/main/webapp\" />\n      <option name=\"extraClassPath\" value=\"\" />\n      <option name=\"port\" value=\"8081\" />\n      <option name=\"tomcatInfo\">\n        <TomcatInfo>\n          <option name=\"name\" value=\"Apache Tomcat/10.1.36\" />\n          <option name=\"path\" value=\"$USER_HOME$/apache-tomcat-10.1.36\" />\n          <option name=\"version\" value=\"10.1.36.0\" />\n        </TomcatInfo>\n      </option>\n      <option name=\"vmOptions\" value=\"\" />\n      <module name=\"OnlineGroceryOrderSystem\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Smart Tomcat.NotWorkingTest\" />\n      <item itemvalue=\"Tomcat Server.Tomcat 10.1.36\" />\n    </list>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-125ca727e0f0-intellij.indexing.shared.core-IU-243.24978.46\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-76f8388c3a79-JavaScript-IU-243.24978.46\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"StructureViewState\">\n    <option name=\"selectedTab\" value=\"JSP\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"7feb0de7-0214-41fa-b444-d82370075b7f\" name=\"Changes\" comment=\"\" />\n      <created>1741278635708</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1741278635708</updated>\n      <workItem from=\"1741278636694\" duration=\"1039000\" />\n      <workItem from=\"1741279685726\" duration=\"476000\" />\n      <workItem from=\"1741280169616\" duration=\"3468000\" />\n      <workItem from=\"1741328731337\" duration=\"78000\" />\n      <workItem from=\"1741328824943\" duration=\"168000\" />\n      <workItem from=\"1741332772761\" duration=\"711000\" />\n      <workItem from=\"1741398274488\" duration=\"534000\" />\n      <workItem from=\"1741398817195\" duration=\"389000\" />\n      <workItem from=\"1741399209526\" duration=\"23000\" />\n      <workItem from=\"1741399236077\" duration=\"44000\" />\n      <workItem from=\"1741399385487\" duration=\"145000\" />\n      <workItem from=\"1741489301442\" duration=\"19000\" />\n      <workItem from=\"1741490187031\" duration=\"294000\" />\n      <workItem from=\"1741490487686\" duration=\"744000\" />\n      <workItem from=\"1741491277216\" duration=\"118000\" />\n      <workItem from=\"1741491871028\" duration=\"432000\" />\n      <workItem from=\"1741493173834\" duration=\"2229000\" />\n      <workItem from=\"1741495497795\" duration=\"851000\" />\n      <workItem from=\"1741496675997\" duration=\"17658000\" />\n      <workItem from=\"1741526651108\" duration=\"63000\" />\n      <workItem from=\"1741526925462\" duration=\"1342000\" />\n      <workItem from=\"1741528726140\" duration=\"666000\" />\n      <workItem from=\"1741582793880\" duration=\"776000\" />\n      <workItem from=\"1741583605898\" duration=\"6241000\" />\n      <workItem from=\"1741600991647\" duration=\"387000\" />\n      <workItem from=\"1741602081924\" duration=\"9941000\" />\n      <workItem from=\"1741613032287\" duration=\"1244000\" />\n      <workItem from=\"1741618980041\" duration=\"1890000\" />\n      <workItem from=\"1741621380429\" duration=\"2608000\" />\n      <workItem from=\"1741654363816\" duration=\"17572000\" />\n      <workItem from=\"1741717314323\" duration=\"11819000\" />\n      <workItem from=\"1741777511274\" duration=\"9588000\" />\n      <workItem from=\"1741789169088\" duration=\"4931000\" />\n      <workItem from=\"1741794305502\" duration=\"3933000\" />\n      <workItem from=\"1741848582171\" duration=\"20907000\" />\n      <workItem from=\"1741933219129\" duration=\"6026000\" />\n      <workItem from=\"1741950665867\" duration=\"13715000\" />\n      <workItem from=\"1742006291555\" duration=\"1461000\" />\n      <workItem from=\"1742044187293\" duration=\"11953000\" />\n      <workItem from=\"1742094187878\" duration=\"1034000\" />\n      <workItem from=\"1742112804951\" duration=\"305000\" />\n      <workItem from=\"1742113224884\" duration=\"7012000\" />\n      <workItem from=\"1742120293929\" duration=\"20449000\" />\n      <workItem from=\"1742144092231\" duration=\"1910000\" />\n      <workItem from=\"1742179114845\" duration=\"1013000\" />\n      <workItem from=\"1742188310854\" duration=\"89000\" />\n      <workItem from=\"1742193142595\" duration=\"3156000\" />\n      <workItem from=\"1742222882009\" duration=\"3862000\" />\n      <workItem from=\"1742229573581\" duration=\"362000\" />\n      <workItem from=\"1742229943558\" duration=\"4541000\" />\n      <workItem from=\"1742234959395\" duration=\"2511000\" />\n      <workItem from=\"1742256226553\" duration=\"3235000\" />\n      <workItem from=\"1742268034310\" duration=\"8058000\" />\n      <workItem from=\"1742317673381\" duration=\"1177000\" />\n      <workItem from=\"1742358824881\" duration=\"2093000\" />\n      <workItem from=\"1742378083119\" duration=\"13543000\" />\n      <workItem from=\"1742438866779\" duration=\"27751000\" />\n      <workItem from=\"1742521874378\" duration=\"19551000\" />\n      <workItem from=\"1742613182800\" duration=\"13323000\" />\n      <workItem from=\"1742827588409\" duration=\"4777000\" />\n      <workItem from=\"1742870738899\" duration=\"994000\" />\n      <workItem from=\"1742871962224\" duration=\"95000\" />\n      <workItem from=\"1742872680721\" duration=\"29000\" />\n      <workItem from=\"1742875554601\" duration=\"350000\" />\n      <workItem from=\"1742877410478\" duration=\"262000\" />\n      <workItem from=\"1742877889561\" duration=\"474000\" />\n      <workItem from=\"1742889357220\" duration=\"53000\" />\n      <workItem from=\"1742898757025\" duration=\"237000\" />\n      <workItem from=\"1742898997252\" duration=\"2000\" />\n      <workItem from=\"1742978741925\" duration=\"17295000\" />\n      <workItem from=\"1743043567276\" duration=\"360000\" />\n      <workItem from=\"1743045406555\" duration=\"298000\" />\n      <workItem from=\"1743053894735\" duration=\"5827000\" />\n      <workItem from=\"1743059871716\" duration=\"4870000\" />\n      <workItem from=\"1743142673625\" duration=\"5734000\" />\n      <workItem from=\"1743167026030\" duration=\"39000\" />\n      <workItem from=\"1743235362878\" duration=\"2631000\" />\n      <workItem from=\"1743337130422\" duration=\"6014000\" />\n      <workItem from=\"1743393412829\" duration=\"12507000\" />\n      <workItem from=\"1743476028613\" duration=\"5192000\" />\n      <workItem from=\"1743481394601\" duration=\"9303000\" />\n      <workItem from=\"1743523722738\" duration=\"257000\" />\n      <workItem from=\"1743530161247\" duration=\"137000\" />\n      <workItem from=\"1743589139928\" duration=\"12590000\" />\n      <workItem from=\"1743766588405\" duration=\"14050000\" />\n      <workItem from=\"1743780698710\" duration=\"1063000\" />\n      <workItem from=\"1743848130515\" duration=\"6910000\" />\n      <workItem from=\"1743920512203\" duration=\"5608000\" />\n      <workItem from=\"1743927155387\" duration=\"1307000\" />\n      <workItem from=\"1743939087683\" duration=\"22000\" />\n      <workItem from=\"1743941145371\" duration=\"38000\" />\n      <workItem from=\"1743941757921\" duration=\"72000\" />\n      <workItem from=\"1743944608924\" duration=\"77000\" />\n      <workItem from=\"1744081276404\" duration=\"771000\" />\n      <workItem from=\"1744099069068\" duration=\"910000\" />\n      <workItem from=\"1744254235882\" duration=\"593000\" />\n      <workItem from=\"1744545356253\" duration=\"1591000\" />\n      <workItem from=\"1744547162618\" duration=\"373000\" />\n      <workItem from=\"1744547754747\" duration=\"4480000\" />\n      <workItem from=\"1744682965746\" duration=\"177000\" />\n      <workItem from=\"1746164017427\" duration=\"926000\" />\n      <workItem from=\"1746167064413\" duration=\"209000\" />\n      <workItem from=\"1746171377732\" duration=\"437000\" />\n      <workItem from=\"1746273696419\" duration=\"2749000\" />\n      <workItem from=\"1746289349646\" duration=\"88000\" />\n      <workItem from=\"1746289753816\" duration=\"165000\" />\n      <workItem from=\"1746290030576\" duration=\"55000\" />\n      <workItem from=\"1746368365234\" duration=\"244000\" />\n      <workItem from=\"1746446154178\" duration=\"284000\" />\n      <workItem from=\"1746501825259\" duration=\"807000\" />\n      <workItem from=\"1746622865473\" duration=\"427000\" />\n      <workItem from=\"1746632406194\" duration=\"1369000\" />\n      <workItem from=\"1746674651000\" duration=\"2465000\" />\n      <workItem from=\"1746677766087\" duration=\"5489000\" />\n      <workItem from=\"1746684568824\" duration=\"5108000\" />\n      <workItem from=\"1746719513794\" duration=\"627000\" />\n      <workItem from=\"1746760935042\" duration=\"10000\" />\n      <workItem from=\"1746789311483\" duration=\"10023000\" />\n      <workItem from=\"1746804169909\" duration=\"1131000\" />\n      <workItem from=\"1746805306499\" duration=\"308000\" />\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"cart branch\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742231735693</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742231735693</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"checkOut branch\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742231941036</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742231941036</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Login branch\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742232259706</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742232259706</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Login branch\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742232291529</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742232291529</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"user details load from loggedINUser.txt  file and then load them into checkOut page form relevent feild for pre-load.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742233311620</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742233311620</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"errro fixed orderServlet\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742234260107</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742234260107</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"errro fixed orderServlet\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742234319233</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742234319233</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"finxed errors\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742234987127</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742234987127</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"#add userlogin page background image&#10;#load userprofile userID for test\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742236074354</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742236074354</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"update logics\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742237269671</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742237269671</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"out out user ID in processCheckOut.jsp page update logic and simple design parts.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742257300488</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742257300488</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"out out user ID in processCheckOut.jsp page update logic and simple design parts.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742257606062</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742257606062</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"out out user ID in processCheckOut.jsp page update logic and simple design parts.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742257851447</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742257851447</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"out out user ID in processCheckOut.jsp page update logic and simple design parts.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742259484434</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742259484434</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"update back or main-27\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742318592765</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742318592765</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"update back or main-27\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742318605375</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742318605375</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"update back or main-27\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742318668492</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742318668492</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"update back or main-27\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742318834463</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742318834463</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"test\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742358905449</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742358905449</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"add search algo merge sort to cart search and fixed some erros with it add debugged lines to test.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742398045687</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742398045687</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"add new features to userProfile.jsp&#10;and give it to ability to edit user infomation and give ability to delete user's account.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742492415175</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742492415175</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"user profile delete pop up button size change\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742526571593</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742526571594</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"User profile order history update, cancel and previous one's.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742545516566</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742545516566</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"User profile order history update, cancel and previous one's.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742545613633</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742545613633</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"user profile order cancel button new page to check and review user's order list.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742564426636</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742564426636</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"UserProfile Branch Initiate\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742564638660</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742564638660</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"fixed merge sorting in cartIndex.jsp&#10;and filtering conditions.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742655173191</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742655173191</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"fixed user profile cancel button to info and fixed merge sort few errors\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742662874761</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742662874761</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"user profile Delivered tab info button and user profile home banner add for each category and link them to cartIndex.jsp\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742832333950</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742832333950</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"Admin login and adminSuccessFul and adminDash page initiate.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742990589649</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742990589649</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"Admin login and adminSuccessFul and adminDash page initiate.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742990652856</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742990652857</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"adminPage Order, delivered and cancelled contain make and get their counts from orders.txt and deliveredOrders.txt them display in corresponding containers.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1742996117390</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1742996117390</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"admin page titles and admin dashboard category selection add.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743058962009</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743058962009</updated>\n    </task>\n    <task id=\"LOCAL-00044\" summary=\"admin dash board error fixed\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743064736258</created>\n      <option name=\"number\" value=\"00044\" />\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743064736258</updated>\n    </task>\n    <task id=\"LOCAL-00045\" summary=\"Order Dashboad start making\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743167051726</created>\n      <option name=\"number\" value=\"00045\" />\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743167051727</updated>\n    </task>\n    <task id=\"LOCAL-00046\" summary=\"Order DashBoard design changes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743237679059</created>\n      <option name=\"number\" value=\"00046\" />\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743237679059</updated>\n    </task>\n    <task id=\"LOCAL-00047\" summary=\"Order dashboard and order dashboardinfo finished works and fine tune done.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743405856638</created>\n      <option name=\"number\" value=\"00047\" />\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743405856638</updated>\n    </task>\n    <task id=\"LOCAL-00048\" summary=\"stock admin dashboard done and finished works.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743523908660</created>\n      <option name=\"number\" value=\"00048\" />\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743523908660</updated>\n    </task>\n    <task id=\"LOCAL-00049\" summary=\"order Initialize again\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743530226632</created>\n      <option name=\"number\" value=\"00049\" />\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743530226632</updated>\n    </task>\n    <task id=\"LOCAL-00050\" summary=\"fixed error: missing files\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743589880348</created>\n      <option name=\"number\" value=\"00050\" />\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743589880348</updated>\n    </task>\n    <task id=\"LOCAL-00051\" summary=\"Product Admin Dashboard Done and fixed some Errors.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743603736807</created>\n      <option name=\"number\" value=\"00051\" />\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743603736808</updated>\n    </task>\n    <task id=\"LOCAL-00052\" summary=\"admin pages user dashboard complete\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743779981002</created>\n      <option name=\"number\" value=\"00052\" />\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743779981002</updated>\n    </task>\n    <task id=\"LOCAL-00053\" summary=\"adminpage Bar Chart add and all pages background color change to extreme light green and grey mix colors.also few desgin mistakes.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743856494842</created>\n      <option name=\"number\" value=\"00053\" />\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743856494842</updated>\n    </task>\n    <task id=\"LOCAL-00054\" summary=\"Index page Feature section finished\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743924735295</created>\n      <option name=\"number\" value=\"00054\" />\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743924735295</updated>\n    </task>\n    <task id=\"LOCAL-00055\" summary=\"Index page Feature section finished and Text area replaced with correct ones\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1743925830878</created>\n      <option name=\"number\" value=\"00055\" />\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1743925830878</updated>\n    </task>\n    <task id=\"LOCAL-00056\" summary=\"Index.jsp page Deal Section Finished and Entire Project Work Done\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1744552070607</created>\n      <option name=\"number\" value=\"00056\" />\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1744552070608</updated>\n    </task>\n    <task id=\"LOCAL-00057\" summary=\"Index.jsp page Deal Section Finished and Entire Project Work Done\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1744552158050</created>\n      <option name=\"number\" value=\"00057\" />\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1744552158050</updated>\n    </task>\n    <task id=\"LOCAL-00058\" summary=\"new branch cart init\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1746804933568</created>\n      <option name=\"number\" value=\"00058\" />\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1746804933568</updated>\n    </task>\n    <task id=\"LOCAL-00059\" summary=\"project main init\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1746805604281</created>\n      <option name=\"number\" value=\"00059\" />\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1746805604281</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"60\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"feature/checkOut\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"user profile order cancel button new page to check and review user's order list.\" />\n    <MESSAGE value=\"UserProfile Branch Initiate\" />\n    <MESSAGE value=\"fixed merge sorting in cartIndex.jsp&#10;and filtering conditions.\" />\n    <MESSAGE value=\"fixed user profile cancel button to info and fixed merge sort few errors\" />\n    <MESSAGE value=\"user profile Delivered tab info button and user profile home banner add for each category and link them to cartIndex.jsp\" />\n    <MESSAGE value=\"Admin login and adminSuccessFul and adminDash page initiate.\" />\n    <MESSAGE value=\"adminPage Order, delivered and cancelled contain make and get their counts from orders.txt and deliveredOrders.txt them display in corresponding containers.\" />\n    <MESSAGE value=\"admin page titles and admin dashboard category selection add.\" />\n    <MESSAGE value=\"admin dash board error fixed\" />\n    <MESSAGE value=\"Order Dashboad start making\" />\n    <MESSAGE value=\"Order DashBoard design changes\" />\n    <MESSAGE value=\"Order dashboard and order dashboardinfo finished works and fine tune done.\" />\n    <MESSAGE value=\"stock admin dashboard done and finished works.\" />\n    <MESSAGE value=\"order Initialize again\" />\n    <MESSAGE value=\"fixed error: missing files\" />\n    <MESSAGE value=\"Product Admin Dashboard Done and fixed some Errors.\" />\n    <MESSAGE value=\"admin pages user dashboard complete\" />\n    <MESSAGE value=\"adminpage Bar Chart add and all pages background color change to extreme light green and grey mix colors.also few desgin mistakes.\" />\n    <MESSAGE value=\"Index page Feature section finished\" />\n    <MESSAGE value=\"Index page Feature section finished and Text area replaced with correct ones\" />\n    <MESSAGE value=\"Index.jsp page Deal Section Finished and Entire Project Work Done\" />\n    <MESSAGE value=\"new branch cart init\" />\n    <MESSAGE value=\"project main init\" />\n    <MESSAGE value=\"Rebase error fixed\" />\n    <MESSAGE value=\"Final Update\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Final Update\" />\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision daada4299f3d630ccb7aac97d3f1abde5bf5e5da)
+++ b/.idea/workspace.xml	(date 1747887655114)
@@ -9,20 +9,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7feb0de7-0214-41fa-b444-d82370075b7f" name="Changes" comment="Final Update">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/data/deliveredOrders.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/data/deliveredOrders.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/data/items.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/data/items.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/data/loggedInUser.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/data/loggedInUser.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/data/orders.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/data/orders.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/data/users.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/data/users.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/index.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/index.jsp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/cart.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/WEB-INF/classes/items.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/items.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/items.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/loggedInUser.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/loggedInUser.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/orders.txt" beforeDir="false" afterPath="$PROJECT_DIR$/target/OnlineGroceryOrderSystem/data/orders.txt" afterDir="false" />
-    </list>
+    <list default="true" id="7feb0de7-0214-41fa-b444-d82370075b7f" name="Changes" comment="Final Update" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -50,7 +37,7 @@
     <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="feature/cart" />
+        <entry key="$PROJECT_DIR$" value="main" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -290,8 +277,8 @@
       </method>
     </configuration>
     <list>
+      <item itemvalue="Tomcat Server.Tomcat 10.1.36" />
       <item itemvalue="Smart Tomcat.NotWorkingTest" />
-      <item itemvalue="Tomcat Server.Tomcat 10.1.36" />
     </list>
   </component>
   <component name="SharedIndexes">
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2025-05-09,_9_10 PM_[Changes]1/shelved.patch
deleted file mode 100644
